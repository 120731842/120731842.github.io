<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>资产管理系统(未完待续)</title>
      <link href="/Django/3392313719.html"/>
      <url>/Django/3392313719.html</url>
      
        <content type="html"><![CDATA[<h5 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h5><p><img src="/images/pasted-268.png" alt="upload successful"><br><img src="/images/pasted-269.png" alt="upload successful"><br><img src="/images/pasted-270.png" alt="upload successful"><br><img src="/images/pasted-271.png" alt="upload successful"><br><img src="/images/pasted-272.png" alt="upload successful"><br><img src="/images/pasted-273.png" alt="upload successful"><br><img src="/images/pasted-274.png" alt="upload successful"><br><img src="/images/pasted-275.png" alt="upload successful"></p><h5 id="数据库表结构"><a href="#数据库表结构" class="headerlink" title="数据库表结构"></a>数据库表结构</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line">HD_INTERFACE = (</span><br><span class="line">    (<span class="string">'SSD'</span>, <span class="string">'SSD'</span>),</span><br><span class="line">    (<span class="string">'SAS'</span>, <span class="string">'SAS'</span>),</span><br><span class="line">    (<span class="string">'SATA'</span>, <span class="string">'SATA'</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">MEM_INTERFACE = (</span><br><span class="line">    (<span class="string">'DDR3'</span>, <span class="string">'DDR3'</span>),</span><br><span class="line">    (<span class="string">'DDR4'</span>, <span class="string">'DDR4'</span>),</span><br><span class="line">    (<span class="string">'Unknown'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">STATUS = (</span><br><span class="line">    (<span class="string">'1'</span>, <span class="string">'使用中'</span>),</span><br><span class="line">    (<span class="string">'2'</span>, <span class="string">'未使用'</span>),</span><br><span class="line">    (<span class="string">'3'</span>, <span class="string">'故障'</span>),</span><br><span class="line">    (<span class="string">'4'</span>, <span class="string">'报废'</span>),</span><br><span class="line">    (<span class="string">'5'</span>, <span class="string">'其他'</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">OS_TYPE = (</span><br><span class="line">    (<span class="string">'Linux'</span>, <span class="string">'Linux'</span>),</span><br><span class="line">    (<span class="string">'Windows'</span>, <span class="string">'Windows'</span>),</span><br><span class="line">    (<span class="string">'Other'</span>, <span class="string">'Other'</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTH_TYPE = (</span><br><span class="line">    (<span class="string">'PWD'</span>, <span class="string">'密码认证'</span>),</span><br><span class="line">    (<span class="string">'KEY'</span>, <span class="string">'密钥认证'</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 定义服务器认证信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    auth_type = models.CharField(max_length=<span class="number">10</span>, choices=AUTH_TYPE, default=<span class="string">'PWD'</span>, verbose_name=<span class="string">'认证类型'</span>)</span><br><span class="line">    user = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'认证用户'</span>)</span><br><span class="line">    pwd = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'认证密码'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'认证信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.user + <span class="string">'-'</span> + self.auth_type</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HardDiskInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    物理磁盘信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    wwn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'序列号'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    model = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘型号'</span>)</span><br><span class="line">    size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘大小'</span>)</span><br><span class="line">    slot = models.CharField(max_length=<span class="number">2</span>, verbose_name=<span class="string">'插槽位置'</span>)</span><br><span class="line">    interface = models.CharField(max_length=<span class="number">10</span>, choices=HD_INTERFACE, verbose_name=<span class="string">'接口类型'</span>)</span><br><span class="line">    manufacturer = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘厂商'</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'硬盘信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.wwn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemoryInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    内存信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    sn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'序列号'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存大小'</span>)</span><br><span class="line">    slot = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'插槽位置'</span>)</span><br><span class="line">    interface = models.CharField(max_length=<span class="number">20</span>, choices=MEM_INTERFACE, verbose_name=<span class="string">'接口类型'</span>)</span><br><span class="line">    speed = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存频率'</span>)</span><br><span class="line">    manufacturer = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存厂商'</span>)</span><br><span class="line">    voltage = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存电压'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'内存信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.sn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NetworkInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    网络信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'网卡名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    mac = models.CharField(max_length=<span class="number">48</span>, verbose_name=<span class="string">'网卡地址'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    ip = models.GenericIPAddressField(verbose_name=<span class="string">'IP地址'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    mask = models.GenericIPAddressField(verbose_name=<span class="string">'子网掩码'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gw = models.GenericIPAddressField(verbose_name=<span class="string">'网关地址'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    primary = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">'默认地址'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'网络信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.host.sn + <span class="string">"-"</span> + self.ip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IdcInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    数据中心或机房信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(<span class="string">"机房名称"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    address = models.CharField(<span class="string">"机房地址"</span>, max_length=<span class="number">100</span>, null=<span class="literal">True</span>)</span><br><span class="line">    tel = models.CharField(<span class="string">"机房电话"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    contact = models.CharField(<span class="string">"客户经理"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    contact_phone = models.CharField(<span class="string">"移动电话"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    jigui = models.CharField(<span class="string">"机柜信息"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    ip_range = models.CharField(<span class="string">"IP范围"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    bandwidth = models.CharField(<span class="string">"接入带宽"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'机房管理'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'机房管理'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CabinetInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    机柜信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'机柜名称'</span>)</span><br><span class="line">    cab_lever = models.CharField(max_length=<span class="number">2</span>, verbose_name=<span class="string">u'机器U数,1-10分别代表1~10层'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'机柜信息表'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HostGroup</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    主机组信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(<span class="string">"组名"</span>, max_length=<span class="number">30</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    desc = models.CharField(<span class="string">"描述"</span>, max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'属组管理'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'属组管理'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhysicalHostInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    物理主机信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    brand = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'品牌'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    model = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'型号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sn = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'序列号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    status = models.CharField(max_length=<span class="number">10</span>, choices=STATUS, verbose_name=<span class="string">'使用状态'</span>)</span><br><span class="line">    use_department = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'使用部门'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    asset_no = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'资产编号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    idc = models.ForeignKey(<span class="string">'IdcInfo'</span>, verbose_name=<span class="string">'机房'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cabinet = models.ForeignKey(<span class="string">'CabinetInfo'</span>, verbose_name=<span class="string">'机柜'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    warranty_time = models.DateField(verbose_name=<span class="string">'质保时间'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    group = models.ForeignKey(<span class="string">'HostGroup'</span>, verbose_name=<span class="string">'主机组'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os_type = models.CharField(max_length=<span class="number">10</span>, choices=OS_TYPE, verbose_name=<span class="string">'操作系统'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'操作系统'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os_kernel = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'内核'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'主机名'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    manage_ip = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'管理IP'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'控制器名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_sn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'控制器序列号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_cache_size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'缓存大小'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_no = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'数量'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_brand = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'品牌'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_model = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'型号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_core = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'核心数'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_threads_per_core = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'线程数/核'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    comment = models.TextField(verbose_name=<span class="string">'备注信息'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    auth_info = models.ForeignKey(AuthInfo, verbose_name=<span class="string">'认证信息'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'物理服务器'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.sn</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_nets</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.networkinfo_set.all()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_default_ip</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.networkinfo_set.get(primary=<span class="literal">True</span>).ip</span><br><span class="line">    get_default_ip.short_description = <span class="string">'默认IP'</span></span><br><span class="line">    <span class="comment"># def get_cpus(self):</span></span><br><span class="line">    <span class="comment">#     return self.cpuinfo_set.all().count()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VirtualHostInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    sn = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'序列号'</span>)</span><br><span class="line">    status = models.CharField(max_length=<span class="number">10</span>, choices=STATUS, verbose_name=<span class="string">'使用状态'</span>)</span><br><span class="line">    use_department = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'使用部门'</span>)</span><br><span class="line">    group = models.ForeignKey(<span class="string">'HostGroup'</span>, verbose_name=<span class="string">'主机组'</span>)</span><br><span class="line">    os_type = models.CharField(max_length=<span class="number">10</span>, choices=OS_TYPE, verbose_name=<span class="string">'操作系统'</span>)</span><br><span class="line">    os = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'操作系统'</span>)</span><br><span class="line">    os_kernel = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'内核'</span>)</span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'主机名'</span>)</span><br><span class="line">    cpu_no = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'数量'</span>)</span><br><span class="line">    phy = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'宿主机信息'</span>)</span><br><span class="line">    mem = models.ForeignKey(<span class="string">'MemoryInfo'</span>, verbose_name=<span class="string">'内存信息'</span>)</span><br><span class="line">    hd = models.ForeignKey(<span class="string">'HardDiskInfo'</span>, verbose_name=<span class="string">'硬盘信息'</span>)</span><br><span class="line">    net = models.ForeignKey(<span class="string">'NetworkInfo'</span>, verbose_name=<span class="string">'网络信息'</span>)</span><br><span class="line">    comment = models.TextField(verbose_name=<span class="string">'备注信息'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'虚拟服务器'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.hostname</span><br></pre></td></tr></table></figure>       <h5 id="获取资产信息"><a href="#获取资产信息" class="headerlink" title="获取资产信息"></a>获取资产信息</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'jianhu.yong'</span></span><br><span class="line">__date__ = <span class="string">'19-4-10 下午4:48'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> ansible <span class="keyword">import</span> constants</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"><span class="keyword">from</span> ansible.parsing.dataloader <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> ansible.playbook.play <span class="keyword">import</span> Play</span><br><span class="line"><span class="keyword">from</span> ansible.executor.task_queue_manager <span class="keyword">import</span> TaskQueueManager</span><br><span class="line"><span class="keyword">from</span> ansible.executor.playbook_executor <span class="keyword">import</span> PlaybookExecutor</span><br><span class="line"><span class="keyword">from</span> ansible.plugins.callback <span class="keyword">import</span> CallbackBase</span><br><span class="line"><span class="keyword">from</span> ansible.inventory.manager <span class="keyword">import</span> InventoryManager</span><br><span class="line"><span class="keyword">from</span> ansible.vars.manager <span class="keyword">import</span> VariableManager</span><br><span class="line"><span class="keyword">from</span> ansible.inventory.host <span class="keyword">import</span> Host, Group</span><br><span class="line"><span class="keyword">from</span> cmdb.settings <span class="keyword">import</span> BASE_DIR</span><br><span class="line"><span class="keyword">from</span> cmdb.settings <span class="keyword">import</span> SSH_PRIVATE_KEY_FILE, SSH_USER</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> asset.models <span class="keyword">import</span> PhysicalHostInfo, NetworkInfo, MemoryInfo, HardDiskInfo</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelResultsCollector</span><span class="params">(CallbackBase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, sn, *args, **kwargs)</span>:</span></span><br><span class="line">        super(ModelResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.host_ok = &#123;&#125;</span><br><span class="line">        self.host_unreachable = &#123;&#125;</span><br><span class="line">        self.host_failed = &#123;&#125;</span><br><span class="line">        self.sn = sn</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_unreachable</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.host_unreachable[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_ok</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.host_ok[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">        task_name = result.task_name</span><br><span class="line">        <span class="keyword">if</span> task_name == <span class="string">'setup'</span>:</span><br><span class="line">            host = result._host.name</span><br><span class="line">            facts = result._result.get(<span class="string">'ansible_facts'</span>)</span><br><span class="line">            <span class="keyword">if</span> facts:</span><br><span class="line">                product_serial = facts.get(<span class="string">'ansible_product_serial'</span>, <span class="string">'NA'</span>)</span><br><span class="line">                <span class="keyword">if</span> product_serial != <span class="string">'NA'</span> <span class="keyword">and</span> <span class="string">'VMware'</span> <span class="keyword">in</span> product_serial:</span><br><span class="line">                    virtual_type = <span class="string">'vmware'</span></span><br><span class="line">                <span class="keyword">elif</span> product_serial != <span class="string">'NA'</span>:</span><br><span class="line">                    virtual_type = <span class="string">'physical'</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    virtual_type = facts.get(<span class="string">'facter_virtual'</span>, <span class="string">'NA'</span>)</span><br><span class="line"></span><br><span class="line">                self.sn_new = product_serial</span><br><span class="line"></span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=product_serial)</span><br><span class="line">                obj.brand = facts.get(<span class="string">'ansible_system_vendor'</span>)</span><br><span class="line">                obj.model = facts.get(<span class="string">'ansible_product_name'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取操作系统信息</span></span><br><span class="line">                obj.os_type = facts.get(<span class="string">'ansible_system'</span>)</span><br><span class="line">                obj.os = facts.get(<span class="string">'ansible_distribution'</span>)</span><br><span class="line">                obj.os_kernel = facts.get(<span class="string">'ansible_kernel'</span>)</span><br><span class="line">                obj.hostname = facts.get(<span class="string">'ansible_nodename'</span>)</span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取CPU信息</span></span><br><span class="line">                cpu_no = facts.get(<span class="string">'ansible_processor_count'</span>)</span><br><span class="line">                cpu_model = facts.get(<span class="string">'ansible_processor'</span>)[<span class="number">-1</span>]</span><br><span class="line">                cpu_brand = facts.get(<span class="string">'ansible_processor'</span>)[<span class="number">-2</span>]</span><br><span class="line">                cpu_core = facts.get(<span class="string">'ansible_processor_cores'</span>)</span><br><span class="line">                cpu_threads_per_core = facts.get(<span class="string">'ansible_processor_threads_per_core'</span>)</span><br><span class="line"></span><br><span class="line">                obj.cpu_no = cpu_no</span><br><span class="line">                obj.cpu_model = cpu_model</span><br><span class="line">                obj.cpu_brand = cpu_brand</span><br><span class="line">                obj.cpu_core = cpu_core</span><br><span class="line">                obj.cpu_threads_per_core = cpu_threads_per_core</span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取网络信息</span></span><br><span class="line">                interfaces_info = &#123;&#125;</span><br><span class="line">                valid_interfaces = []</span><br><span class="line">                interfaces = facts.get(<span class="string">'ansible_interfaces'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'lo'</span> <span class="keyword">in</span> interfaces:</span><br><span class="line">                    interfaces.remove(<span class="string">'lo'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'w1g1'</span> <span class="keyword">in</span> interfaces:</span><br><span class="line">                    interfaces.remove(<span class="string">'w1g1'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> interface <span class="keyword">in</span> interfaces:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> interface.startswith(<span class="string">'vir'</span>):</span><br><span class="line">                        valid_interfaces.append(interface)</span><br><span class="line"></span><br><span class="line">                default_interface = facts.get(<span class="string">'ansible_default_ipv4'</span>).get(<span class="string">'interface'</span>)</span><br><span class="line">                default_gw = facts.get(<span class="string">'ansible_default_ipv4'</span>).get(<span class="string">'gateway'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> interface <span class="keyword">in</span> valid_interfaces:</span><br><span class="line">                    interface_info = facts.get(<span class="string">'ansible_&#123;&#125;'</span>.format(interface))</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> interface_info.get(<span class="string">'active'</span>):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> interface_info.has_key(<span class="string">'ipv4'</span>):</span><br><span class="line">                        address = interface_info.get(<span class="string">'ipv4'</span>).get(<span class="string">'address'</span>)</span><br><span class="line">                        netmask = interface_info.get(<span class="string">'ipv4'</span>).get(<span class="string">'netmask'</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        address = <span class="literal">None</span></span><br><span class="line">                        netmask = <span class="literal">None</span></span><br><span class="line">                    macaddress = interface_info.get(<span class="string">'macaddress'</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> interface == default_interface:</span><br><span class="line">                        primary = <span class="literal">True</span></span><br><span class="line">                        gateway = default_gw</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        primary = <span class="literal">False</span></span><br><span class="line">                        gateway = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">                    interfaces_info[interface] = dict(</span><br><span class="line">                        address=address,</span><br><span class="line">                        netmask=netmask,</span><br><span class="line">                        macaddress= macaddress,</span><br><span class="line">                        primary=primary,</span><br><span class="line">                        gateway=gateway</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                ip_list = []</span><br><span class="line">                <span class="keyword">for</span> k, v <span class="keyword">in</span> interfaces_info.items():</span><br><span class="line">                    <span class="keyword">if</span> v.get(<span class="string">'primary'</span>):</span><br><span class="line">                        net_ins, status = NetworkInfo.objects.get_or_create(primary=<span class="literal">True</span>,ip=v.get(<span class="string">'address'</span>))</span><br><span class="line">                        net_ins.primary = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> v.get(<span class="string">'address'</span>):</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        net_ins, status = NetworkInfo.objects.get_or_create(primary=<span class="literal">False</span>, ip=v.get(<span class="string">'address'</span>))</span><br><span class="line">                        net_ins.primary = <span class="literal">False</span></span><br><span class="line">                    ip_list.append(v.get(<span class="string">'address'</span>))</span><br><span class="line">                    net_ins.name = k</span><br><span class="line">                    net_ins.mac = v.get(<span class="string">'macaddress'</span>)</span><br><span class="line">                    <span class="keyword">if</span> v.get(<span class="string">'address'</span>):</span><br><span class="line">                        net_ins.ip = v.get(<span class="string">'address'</span>)</span><br><span class="line">                    net_ins.mask = v.get(<span class="string">'netmask'</span>)</span><br><span class="line">                    net_ins.gw = v.get(<span class="string">'gateway'</span>, <span class="literal">None</span>)</span><br><span class="line">                    net_ins.host = obj</span><br><span class="line">                    net_ins.save()</span><br><span class="line">                net_ins = NetworkInfo.objects.filter(host_id=obj.id, primary=<span class="literal">False</span>).exclude(ip__in=ip_list)</span><br><span class="line">                <span class="keyword">if</span> net_ins:</span><br><span class="line">                    net_ins.delete()</span><br><span class="line"></span><br><span class="line">                <span class="string">"""</span></span><br><span class="line"><span class="string">                针对虚拟机和无法获取序列号的物理机做特殊处理</span></span><br><span class="line"><span class="string">                1、vmware虚拟机有序列号，但是太长，无意义</span></span><br><span class="line"><span class="string">                2、kvm虚拟机无序列号</span></span><br><span class="line"><span class="string">                3、少数物理机无法正常获取序列号，需要手工维护</span></span><br><span class="line"><span class="string">                """</span></span><br><span class="line">                <span class="keyword">if</span> virtual_type == <span class="string">'physical'</span> <span class="keyword">and</span> product_serial != <span class="string">'NA'</span>:  <span class="comment"># 物理机能正常获取到序列号的情况</span></span><br><span class="line">                    obj.product_serial = product_serial</span><br><span class="line">                <span class="keyword">elif</span> virtual_type != <span class="string">'physical'</span>:  <span class="comment"># 虚拟机</span></span><br><span class="line">                    obj.product_serial = <span class="string">"&#123;0&#125;-&#123;1&#125;"</span>.format(virtual_type, host)</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 物理机无法正常获取产品序列号，需要手动更新</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> task_name == <span class="string">'mem'</span>:</span><br><span class="line">            mem_info = []</span><br><span class="line">            result = result._result.get(<span class="string">'stdout'</span>).split(<span class="string">'\n\n'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> i.startswith(<span class="string">'Handle'</span>):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                tmp = i.split(<span class="string">'\n\t'</span>)</span><br><span class="line">                mem_dict = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> tmp:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">not</span> <span class="keyword">in</span> j:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        k,v = j.split(<span class="string">':'</span>)</span><br><span class="line">                        mem_dict[k.strip()] = v.strip()</span><br><span class="line">                mem_info.append(mem_dict)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> self.sn == self.sn_new:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn_new)</span><br><span class="line">            sn_list = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> mem_info:</span><br><span class="line">                <span class="keyword">if</span> i.has_key(<span class="string">'Size'</span>) <span class="keyword">and</span> i.get(<span class="string">'Size'</span>).endswith(<span class="string">'MB'</span>):</span><br><span class="line">                    size = i.get(<span class="string">'Size'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    slot = i.get(<span class="string">'Locator'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    interface = i.get(<span class="string">'Type'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    speed = i.get(<span class="string">'Speed'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    manufacturer = i.get(<span class="string">'Manufacturer'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    sn = i.get(<span class="string">'Serial Number'</span>, <span class="literal">None</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> sn <span class="keyword">or</span> sn == <span class="string">'None'</span>:</span><br><span class="line">                        h = hashlib.md5()</span><br><span class="line">                        h.update(obj.sn+slot)</span><br><span class="line">                        sn = h.hexdigest()</span><br><span class="line">                    sn_list.append(sn)</span><br><span class="line">                    voltage = i.get(<span class="string">'Configured Voltage'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line"></span><br><span class="line">                    mem_ins, status = MemoryInfo.objects.get_or_create(sn=sn)</span><br><span class="line">                    mem_ins.sn = sn</span><br><span class="line">                    mem_ins.size = size</span><br><span class="line">                    mem_ins.slot = slot</span><br><span class="line">                    mem_ins.interface = interface</span><br><span class="line">                    mem_ins.speed = speed</span><br><span class="line">                    mem_ins.manufacturer = manufacturer</span><br><span class="line">                    mem_ins.voltage = voltage</span><br><span class="line">                    mem_ins.host = obj</span><br><span class="line">                    mem_ins.save()</span><br><span class="line">            mem_ins = MemoryInfo.objects.filter(host_id=obj.id).exclude(sn__in=sn_list)</span><br><span class="line">            <span class="keyword">if</span> mem_ins:</span><br><span class="line">                mem_ins.delete()</span><br><span class="line">        <span class="keyword">elif</span> task_name == <span class="string">'hd'</span>:</span><br><span class="line">            <span class="keyword">if</span> self.sn == self.sn_new:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn_new)</span><br><span class="line">            result = result._result.get(<span class="string">'stdout'</span>)</span><br><span class="line">            <span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">            raid_adp_name = re.search(<span class="string">'Product Name:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">            raid_adp_sn = re.search(<span class="string">'Serial No:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">            raid_adp_cache_size = re.search(<span class="string">'Memory:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line"></span><br><span class="line">            obj.raid_adp_name = raid_adp_name</span><br><span class="line">            obj.raid_adp_sn = raid_adp_sn</span><br><span class="line">            obj.raid_adp_cache_size = raid_adp_cache_size</span><br><span class="line">            obj.save()</span><br><span class="line"></span><br><span class="line">            s = re.search(<span class="string">'Physical Disk:.+alert : No'</span>, result, flags=re.DOTALL).group()</span><br><span class="line"></span><br><span class="line">            hd_info = s.split(<span class="string">'\n\n\n\n'</span>)</span><br><span class="line"></span><br><span class="line">            wwn_list = []</span><br><span class="line">            <span class="keyword">for</span> hd <span class="keyword">in</span> hd_info:</span><br><span class="line">                slot = re.search(<span class="string">'Slot Number:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                wwn = re.search(<span class="string">'WWN:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                interface = re.search(<span class="string">'PD Type:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                size = re.search(<span class="string">'Raw Size:.+B'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                manufacturer = re.search(<span class="string">'Inquiry Data.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].split()[<span class="number">0</span>].strip()</span><br><span class="line">                model = re.search(<span class="string">'Inquiry Data.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].split()[<span class="number">1</span>].strip()</span><br><span class="line"></span><br><span class="line">                wwn_list.append(wwn)</span><br><span class="line"></span><br><span class="line">                hd_ins, status = HardDiskInfo.objects.get_or_create(wwn=wwn)</span><br><span class="line">                hd_ins.slot = slot</span><br><span class="line">                hd_ins.wwn = wwn</span><br><span class="line">                hd_ins.interface = interface</span><br><span class="line">                hd_ins.size = size</span><br><span class="line">                hd_ins.manufacturer = manufacturer</span><br><span class="line">                hd_ins.model = model</span><br><span class="line">                hd_ins.host = obj</span><br><span class="line">                hd_ins.save()</span><br><span class="line"></span><br><span class="line">            hd_ins = HardDiskInfo.objects.filter(host_id=obj.id).exclude(wwn__in=wwn_list)</span><br><span class="line">            <span class="keyword">if</span> hd_ins:</span><br><span class="line">                hd_ins.delete()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_failed</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.host_failed[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlayBookResultsCollector</span><span class="params">(CallbackBase)</span>:</span></span><br><span class="line">    CALLBACK_VERSION = <span class="number">2.0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        super(PlayBookResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.task_ok = &#123;&#125;</span><br><span class="line">        self.task_skipped = &#123;&#125;</span><br><span class="line">        self.task_failed = &#123;&#125;</span><br><span class="line">        self.task_status = &#123;&#125;</span><br><span class="line">        self.task_unreachable = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_ok</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.task_ok[result._host.get_name()]  = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_failed</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.task_failed[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_unreachable</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.task_unreachable[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_skipped</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.task_ok[result._host.get_name()]  = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_playbook_on_stats</span><span class="params">(self, stats)</span>:</span></span><br><span class="line">        hosts = sorted(stats.processed.keys())</span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> hosts:</span><br><span class="line">            t = stats.summarize(h)</span><br><span class="line">            self.task_status[h] = &#123;</span><br><span class="line">                <span class="string">"ok"</span>:t[<span class="string">'ok'</span>],</span><br><span class="line">                <span class="string">"changed"</span> : t[<span class="string">'changed'</span>],</span><br><span class="line">                <span class="string">"unreachable"</span>:t[<span class="string">'unreachable'</span>],</span><br><span class="line">                <span class="string">"skipped"</span>:t[<span class="string">'skipped'</span>],</span><br><span class="line">                <span class="string">"failed"</span>:t[<span class="string">'failures'</span>]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomInventory</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, resource, auth_type)</span>:</span></span><br><span class="line">        self.resource = resource</span><br><span class="line">        self.auth_type = auth_type</span><br><span class="line">        self.loader = DataLoader()</span><br><span class="line">        self.inventory = InventoryManager(loader=self.loader, sources=[os.path.join(BASE_DIR, <span class="string">'conf/inventory.conf'</span>)])</span><br><span class="line">        <span class="comment"># self.variable_manager.set_inventory(self.inventory)</span></span><br><span class="line">        self.variable_manager = VariableManager(loader=self.loader, inventory=self.inventory)</span><br><span class="line">        self.dynamic_inventory()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dynamic_inventory</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        添加主机信息</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(self.resource, list):</span><br><span class="line">            <span class="keyword">if</span> self.auth_type == <span class="string">'pwd_login'</span>:</span><br><span class="line">                self.add_dynamic_group(self.resource, self.auth_type)</span><br><span class="line">            <span class="keyword">elif</span> self.auth_type == <span class="string">'key_login'</span>:</span><br><span class="line">                self.add_dynamic_group(self.resource, self.auth_type)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> isinstance(self.resource, dict):</span><br><span class="line">            <span class="keyword">for</span> groupname, hosts <span class="keyword">in</span> self.resource.iteritems():</span><br><span class="line">                self.add_dynamic_group(hosts, groupname)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_dynamic_group</span><span class="params">(self, hosts, group_name, groupvars=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        添加主机信息</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.inventory.groups.get(group_name, <span class="string">''</span>):</span><br><span class="line">            self.inventory.add_group(group_name)</span><br><span class="line"></span><br><span class="line">        group_ins = Group(name=group_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># if group variables exists, add them to group</span></span><br><span class="line">        <span class="keyword">if</span> groupvars:</span><br><span class="line">            <span class="keyword">for</span> key, value <span class="keyword">in</span> groupvars.iteritems():</span><br><span class="line">                group_ins.set_variable(key, value)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add hosts to group</span></span><br><span class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> hosts:</span><br><span class="line">            self.inventory.add_host(host=host,group=group_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ANSRunner</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    This is a General object for parallel execute modules.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, auth_type, resource, *args, **kwargs)</span>:</span></span><br><span class="line">        self.loader = <span class="literal">None</span></span><br><span class="line">        self.inventory = <span class="literal">None</span></span><br><span class="line">        self.variable_manager = <span class="literal">None</span></span><br><span class="line">        self.resource = resource</span><br><span class="line">        self.options = <span class="literal">None</span></span><br><span class="line">        self.passwords = <span class="literal">None</span></span><br><span class="line">        self.callback = <span class="literal">None</span></span><br><span class="line">        self.results_raw = &#123;&#125;</span><br><span class="line">        self.auth_type = auth_type</span><br><span class="line">        self.__initializeData()</span><br><span class="line">        self.sn = kwargs.get(<span class="string">'sn'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__initializeData</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        初始化ansible</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.loader = DataLoader()</span><br><span class="line">        Options = namedtuple(<span class="string">'Options'</span>, [<span class="string">'connection'</span>, <span class="string">'module_path'</span>, <span class="string">'forks'</span>, <span class="string">'timeout'</span>,  <span class="string">'remote_user'</span>,</span><br><span class="line">                <span class="string">'ask_pass'</span>, <span class="string">'private_key_file'</span>, <span class="string">'ssh_common_args'</span>, <span class="string">'ssh_extra_args'</span>, <span class="string">'sftp_extra_args'</span>,</span><br><span class="line">                <span class="string">'scp_extra_args'</span>, <span class="string">'become'</span>, <span class="string">'become_method'</span>, <span class="string">'become_user'</span>, <span class="string">'ask_value_pass'</span>, <span class="string">'verbosity'</span>,</span><br><span class="line">                <span class="string">'check'</span>, <span class="string">'listhosts'</span>, <span class="string">'listtasks'</span>, <span class="string">'listtags'</span>, <span class="string">'syntax'</span>,<span class="string">'diff'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.auth_type == <span class="string">'pwd_login'</span>:</span><br><span class="line">            ask_pass = <span class="literal">True</span></span><br><span class="line">            ask_value_pass = <span class="literal">True</span></span><br><span class="line">            remote_user = <span class="string">'root'</span></span><br><span class="line">            private_key_file = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> self.auth_type == <span class="string">'key_login'</span>:</span><br><span class="line">            ask_pass = <span class="literal">False</span></span><br><span class="line">            ask_value_pass = <span class="literal">False</span></span><br><span class="line">            remote_user = SSH_USER</span><br><span class="line">            private_key_file = SSH_PRIVATE_KEY_FILE</span><br><span class="line"></span><br><span class="line">        self.options = Options(connection=<span class="string">'smart'</span>, module_path=<span class="literal">None</span>, forks=<span class="number">2</span>, timeout=<span class="number">10</span>,</span><br><span class="line">                remote_user=remote_user, ask_pass=ask_pass, private_key_file=private_key_file, ssh_common_args=<span class="literal">None</span>, ssh_extra_args=<span class="literal">None</span>,</span><br><span class="line">                sftp_extra_args=<span class="literal">None</span>, scp_extra_args=<span class="literal">None</span>, become=<span class="literal">True</span>, become_method=<span class="string">"sudo"</span>,</span><br><span class="line">                become_user=<span class="string">"root"</span>, ask_value_pass=ask_value_pass, verbosity=<span class="literal">None</span>, check=<span class="literal">False</span>, listhosts=<span class="literal">False</span>,</span><br><span class="line">                listtasks=<span class="literal">False</span>, listtags=<span class="literal">False</span>, syntax=<span class="literal">False</span>, diff=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        self.passwords = dict(</span><br><span class="line">            conn_pass=<span class="string">'xxxx'</span>,</span><br><span class="line">            becomepass=<span class="string">'xxxx'</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        ci = CustomInventory(self.resource, self.auth_type)</span><br><span class="line">        self.inventory = ci.inventory</span><br><span class="line">        self.variable_manager = ci.variable_manager</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_model</span><span class="params">(self, host_list, module_name, module_args=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        run module from andible ad-hoc.</span></span><br><span class="line"><span class="string">        module_name: ansible module_name</span></span><br><span class="line"><span class="string">        module_args: ansible module args</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> module_args:</span><br><span class="line">            play_source = dict(</span><br><span class="line">                    name=<span class="string">"Ansible Play"</span>,</span><br><span class="line">                    hosts=host_list,</span><br><span class="line">                    gather_facts=<span class="string">'no'</span>,</span><br><span class="line">                    tasks=[</span><br><span class="line">                        dict(action=dict(module=<span class="string">'setup'</span>)),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/usr/sbin/dmidecode -t memory'</span>)),</span><br><span class="line">                    ]</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            play_source = dict(</span><br><span class="line">                    name=<span class="string">"Ansible Play"</span>,</span><br><span class="line">                    hosts=host_list,</span><br><span class="line">                    gather_facts=<span class="string">'no'</span>,</span><br><span class="line">                    tasks=[</span><br><span class="line">                        dict(action=dict(module=<span class="string">'setup'</span>), name=<span class="string">"setup"</span>),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/usr/sbin/dmidecode -t memory'</span>), name=<span class="string">'mem'</span>),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/opt/MegaRAID/MegaCli/MegaCli64 -cfgdsply -aALL -NoLog'</span>), name=<span class="string">'hd'</span>)</span><br><span class="line">                    ]</span><br><span class="line">            )</span><br><span class="line">        play = Play().load(play_source, variable_manager=self.variable_manager, loader=self.loader)</span><br><span class="line">        tqm = <span class="literal">None</span></span><br><span class="line">        self.callback = ModelResultsCollector(sn=self.sn)</span><br><span class="line">        <span class="keyword">import</span> traceback</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            tqm = TaskQueueManager(</span><br><span class="line">                inventory=self.inventory,</span><br><span class="line">                variable_manager=self.variable_manager,</span><br><span class="line">                loader=self.loader,</span><br><span class="line">                options=self.options,</span><br><span class="line">                passwords=self.passwords,</span><br><span class="line">                stdout_callback = <span class="string">"minimal"</span>,</span><br><span class="line">            )</span><br><span class="line">            tqm._stdout_callback = self.callback</span><br><span class="line">            constants.HOST_KEY_CHECKING = <span class="literal">False</span> <span class="comment">#关闭第一次使用ansible连接客户端是输入命令</span></span><br><span class="line">            tqm.run(play)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            <span class="keyword">print</span> traceback.print_exc()</span><br><span class="line">            <span class="comment"># DsRedis.OpsAnsibleModel.lpush(self.redisKey,data=err)</span></span><br><span class="line">            <span class="comment"># if self.logId:AnsibleSaveResult.Model.insert(self.logId, err)</span></span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="keyword">if</span> tqm <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                tqm.cleanup()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_playbook</span><span class="params">(self, playbook_path,extra_vars=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        run ansible palybook</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># if self.redisKey:self.callback = PlayBookResultsCollectorToSave(self.redisKey,self.logId)</span></span><br><span class="line">            self.callback = PlayBookResultsCollector()</span><br><span class="line">            <span class="keyword">if</span> extra_vars:self.variable_manager.extra_vars = extra_vars</span><br><span class="line">            executor = PlaybookExecutor(</span><br><span class="line">                playbooks=[playbook_path], inventory=self.inventory, variable_manager=self.variable_manager, loader=self.loader,</span><br><span class="line">                options=self.options, passwords=self.passwords,</span><br><span class="line">            )</span><br><span class="line">            executor._tqm._stdout_callback = self.callback</span><br><span class="line">            constants.HOST_KEY_CHECKING = <span class="literal">False</span> <span class="comment">#关闭第一次使用ansible连接客户端是输入命令</span></span><br><span class="line">            executor.run()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_model_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.results_raw = &#123;<span class="string">'success'</span>:&#123;&#125;, <span class="string">'failed'</span>:&#123;&#125;, <span class="string">'unreachable'</span>:&#123;&#125;&#125;</span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_ok.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'success'</span>][hostvisiable] = result._result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_failed.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'failed'</span>][hostvisiable] = result._result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_unreachable.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'unreachable'</span>][hostvisiable]= result._result</span><br><span class="line"></span><br><span class="line">        <span class="comment"># return json.dumps(self.results_raw)</span></span><br><span class="line">        <span class="keyword">return</span> self.results_raw</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_playbook_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.results_raw = &#123;<span class="string">'skipped'</span>:&#123;&#125;, <span class="string">'failed'</span>:&#123;&#125;, <span class="string">'ok'</span>:&#123;&#125;,<span class="string">"status"</span>:&#123;&#125;,<span class="string">'unreachable'</span>:&#123;&#125;,<span class="string">"changed"</span>:&#123;&#125;&#125;</span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_ok.items():</span><br><span class="line">            self.results_raw[<span class="string">'ok'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_failed.items():</span><br><span class="line">            self.results_raw[<span class="string">'failed'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_status.items():</span><br><span class="line">            self.results_raw[<span class="string">'status'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="comment"># for host, result in self.callback.task_changed.items():</span></span><br><span class="line">        <span class="comment">#     self.results_raw['changed'][host] = result</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_skipped.items():</span><br><span class="line">            self.results_raw[<span class="string">'skipped'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_unreachable.items():</span><br><span class="line">            self.results_raw[<span class="string">'unreachable'</span>][host] = result</span><br><span class="line">        <span class="keyword">return</span> self.results_raw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># resource = [</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.8.119"&#125;,</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.6.43"&#125;,</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.1.233"&#125;,</span></span><br><span class="line">    <span class="comment">#  ]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># resource = &#123;</span></span><br><span class="line">    <span class="comment">#     "dynamic_host": &#123;</span></span><br><span class="line">    <span class="comment">#         "hosts": [</span></span><br><span class="line">    <span class="comment">#                     &#123;'username': u'root', 'password': '123456', 'ip': '192.168.1.108','hostname':'nginx01','port':'22'&#125;,</span></span><br><span class="line">    <span class="comment">#                     &#123;"hostname":"778da6afsdwf","ip": "192.168.1.109", "port": "22", "username": "root", "password":"123456"&#125;,</span></span><br><span class="line">    <span class="comment">#                   ],</span></span><br><span class="line">    <span class="comment">#         "vars": &#123;</span></span><br><span class="line">    <span class="comment">#                  "var1":"ansible",</span></span><br><span class="line">    <span class="comment">#                  "var2":"saltstack"</span></span><br><span class="line">    <span class="comment">#                  &#125;</span></span><br><span class="line">    <span class="comment">#     &#125;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">    resource = &#123;</span><br><span class="line">        <span class="string">'key_login'</span>: [<span class="string">'10.105.42.16'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    rbt = ANSRunner(resource)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ansible Adhoc</span></span><br><span class="line">    rbt.run_model(host_list=resource[<span class="string">'key_login'</span>], module_name=<span class="string">'setup'</span>)</span><br><span class="line">    data = rbt.get_model_result()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    <span class="comment"># Ansible playbook</span></span><br><span class="line">    <span class="comment"># rbt.run_playbook(playbook_path='/etc/ansible/playbook/OPUSE.yml')</span></span><br><span class="line">    <span class="comment"># print rbt.get_playbook_result()</span></span><br><span class="line">    <span class="comment"># rbt.run_model(host_list=[],module_name='yum',module_args="name=htop state=present")</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>域账号后台管理</title>
      <link href="/Django/3844096452.html"/>
      <url>/Django/3844096452.html</url>
      
        <content type="html"><![CDATA[<div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1">开始之前</a></li><li class="tab"><a href="#-2">部署方式</a></li><li class="tab"><a href="#-3">注意事项</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><ul><li>主要用于用户、共享目录，邮箱组权限等日常管理</li><li>基于pyad模块(<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pha2lyZC9weWFk" title="https://github.com/zakird/pyad">https://github.com/zakird/pyad<i class="fa fa-external-link"></i></span>)</li><li>支持邮件通知及批量操作</li><li>LDAP登录(仅限CN Infrastructure Team &amp;&amp; CN Development Team登录后台,域账号登录)</li><li>后台地址：<span class="exturl" data-url="aHR0cDovL3h4Lnh4LmdlbmV3aXouY29tL2FkbWlu" title="http://xx.xx.genewiz.com/admin">http://xx.xx.genewiz.com/admin<i class="fa fa-external-link"></i></span></li></ul></div><div class="tab-pane" id="-2"><ul><li>部署于10.105.xx.xx,应用对AD Server进行操作！</li><li>Windows下的Apache无法通过daemon模式运行多个wsgi应用，故通过Django dev模式运行，通过Apache转发！(或者单独在另外一台Windows服务器单独部署)</li><li>\\GWNGFS\xx\Dev\AdminSet</li></ul></div><div class="tab-pane" id="-3"><ul><li>用户的全局管理未收敛至统一管理，为确保用户信息的准确性，对用户进行任何变更，请先更新用户信息！</li></ul></div></div></div><a id="more"></a><h5 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h5><div class="tabs" id="users"><ul class="nav-tabs"><li class="tab active"><a href="#users-1">更新账号信息</a></li><li class="tab"><a href="#users-2">更新组信息</a></li><li class="tab"><a href="#users-3">账号启用</a></li><li class="tab"><a href="#users-4">账号禁用</a></li><li class="tab"><a href="#users-5">账号禁用-离职</a></li><li class="tab"><a href="#users-6">账号解锁</a></li><li class="tab"><a href="#users-7">账号VPN启用</a></li><li class="tab"><a href="#users-8">账号VPN禁用</a></li><li class="tab"><a href="#users-9">账号密码重置</a></li><li class="tab"><a href="#users-10">账号密码重置【登录需要修改密码】</a></li></ul><div class="tab-content"><div class="tab-pane active" id="users-1"><p><strong>初次添加 </strong><br><img src="/images/pasted-277.png" alt="upload successful"><br><img src="/images/pasted-251.png" alt="upload successful"></p><div class="note success"><p>点击保存按钮后，将会自动更新用户及用户属组信息！</p></div><p><strong>已存在</strong><br><img src="/images/pasted-278.png" alt="upload successful"></p><div class="note success"><p>如果账号已添加过，可以勾选用户，更新用户最新的用户信息，支持批量！</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_user</span><span class="params">(self, user)</span>:</span></span><br><span class="line">    <span class="string">“””更新用户信息”””</span></span><br><span class="line">    dn = adsearch.by_san(user)</span><br><span class="line">    user_from_ad = aduser.ADUser.from_dn(dn)</span><br><span class="line">    guid = user_from_ad.guid_str</span><br><span class="line">    sid = str(user_from_ad.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">    san = user_from_ad.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">    <span class="string">“””if user has not email,will take AttributeError”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        email = user_from_ad.get_attribute(<span class="string">‘mail’</span>, <span class="literal">False</span>).lower()</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        email = <span class="literal">None</span></span><br><span class="line">    create_time = parse(user_from_ad.get_attribute(<span class="string">‘whenCreated’</span>,<span class="literal">False</span>).Format())</span><br><span class="line">    <span class="string">“”” if user never modify password,will take ValueError!”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pwd_last_set_time = user_from_ad.get_password_last_set()</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        pwd_last_set_time = <span class="literal">None</span></span><br><span class="line">    <span class="string">“”” if user never login,will take AttributeError”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        last_login_time = user_from_ad.get_last_login()</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        last_login_time = <span class="literal">None</span></span><br><span class="line">    uac = user_from_ad.get_user_account_control_settings()</span><br><span class="line">    is_enabled = <span class="keyword">not</span> uac[<span class="string">‘ACCOUNTDISABLE’</span>]</span><br><span class="line">    is_locked_out = uac[<span class="string">‘LOCKOUT’</span>]</span><br><span class="line">    is_dial_in = user_from_ad.get_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> is_dial_in <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        is_dial_in = <span class="literal">False</span></span><br><span class="line">    userobj, status = UserProfile.objects.get_or_create(username=user)</span><br><span class="line">    userobj.dn = dn</span><br><span class="line">    userobj.guid = guid</span><br><span class="line">    userobj.sid = sid</span><br><span class="line">    userobj.san = san</span><br><span class="line">    userobj.email = email</span><br><span class="line">    userobj.pwd_last_set_time = pwd_last_set_time</span><br><span class="line">    userobj.create_time = create_time</span><br><span class="line">    userobj.last_login_time = last_login_time</span><br><span class="line">    userobj.is_enabled = is_enabled</span><br><span class="line">    userobj.is_locked_out = is_locked_out</span><br><span class="line">    userobj.is_dial_in = is_dial_in</span><br><span class="line">    userobj.save()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        groups = user_from_ad.get_memberOfs()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    groups_from_ad = []</span><br><span class="line">    groups_from_db = []</span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> groups:</span><br><span class="line">        san = group.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">        guid = group.guid_str</span><br><span class="line">        sid = str(group.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">        gc = group.get_group_type()</span><br><span class="line">        gs = group.get_group_scope()</span><br><span class="line">        dn = group.dn</span><br><span class="line">        create_time = parse(group.get_attribute(<span class="string">‘whenCreated’</span>, <span class="literal">False</span>).Format())</span><br><span class="line">        groupobj, status = GroupProfile.objects.get_or_create(san=san)</span><br><span class="line">        groupobj.san = san</span><br><span class="line">        groupobj.guid = guid</span><br><span class="line">        groupobj.sid = sid</span><br><span class="line">        groupobj.gc = gc</span><br><span class="line">        groupobj.gs = gs</span><br><span class="line">        groupobj.dn = dn</span><br><span class="line">        groupobj.create_time = create_time</span><br><span class="line">        groupobj.save()</span><br><span class="line">        groups_from_ad.append(san)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> userobj.groups_of.all():</span><br><span class="line">        san = group.san</span><br><span class="line">        groups_from_db.append(san)</span><br><span class="line"> </span><br><span class="line">    intersection = set(groups_from_ad) &amp; set(groups_from_db)</span><br><span class="line">    <span class="keyword">if</span> intersection:</span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> list(set(groups_from_db) - intersection):</span><br><span class="line">            userobj.groups_of.remove(GroupProfile.objects.get(san=group))</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> list(set(groups_from_ad) - intersection):</span><br><span class="line">            userobj.groups_of.add(GroupProfile.objects.get(san=group))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        userobj.groups_of.clear()</span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> groups_from_ad:</span><br><span class="line">            userobj.groups_of.add(GroupProfile.objects.get(san=group))</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-2"><p><strong>初次添加</strong><br><!--![upload successful](/images/pasted-253.png) --><br><img src="/images/pasted-279.png" alt="upload successful"></p><p><img src="/images/pasted-254.png" alt="upload successful"></p><div class="note success"><p>点击保存按钮后，将会自动更新用户及用户属组信息！</p></div><p><strong>已存在</strong><br><!-- ![upload successful](/images/pasted-255.png) --><br><img src="/images/pasted-280.png" alt="upload successful"></p><div class="note success"><p>如果账号已添加过，可以勾选用户，更新用户最新的用户信息，支持批量！</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_group</span><span class="params">(self, group)</span>:</span></span><br><span class="line">    <span class="string">“””更新组信息”””</span></span><br><span class="line">    dn = adsearch.by_san(group)</span><br><span class="line">    group_from_ad = adgroup.ADGroup.from_dn(dn)</span><br><span class="line">    san = group_from_ad.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">    guid = group_from_ad.guid_str</span><br><span class="line">    sid = str(group_from_ad.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">    gc = group_from_ad.get_group_type()</span><br><span class="line">    gs = group_from_ad.get_group_scope()</span><br><span class="line">    dn = group_from_ad.dn</span><br><span class="line">    create_time = parse(group_from_ad.get_attribute(<span class="string">‘whenCreated’</span>, <span class="literal">False</span>).Format())</span><br><span class="line">    groupobj, status = GroupProfile.objects.get_or_create(san=group)</span><br><span class="line">    groupobj.san = san</span><br><span class="line">    groupobj.guid = guid</span><br><span class="line">    groupobj.sid = sid</span><br><span class="line">    groupobj.gc = gc</span><br><span class="line">    groupobj.gs = gs</span><br><span class="line">    groupobj.dn = dn</span><br><span class="line">    groupobj.create_time = create_time</span><br><span class="line">    groupobj.save()</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-3"><!-- ![upload successful](/images/pasted-256.png) --><p><img src="/images/pasted-283.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enabled_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””启用用户”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘enabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘enabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.enable()</span><br><span class="line">            res[<span class="string">‘enabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘enabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-4"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””禁用用户”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.disable()</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-5"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_user_lizhi</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””禁用用户-离职”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        ou = adcontainer.ADContainer.from_dn(<span class="string">“OU=China,OU=DisabledAccounts,DC=local,DC=genewiz,DC=com”</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.disable()</span><br><span class="line">            <span class="string">“””</span></span><br><span class="line"><span class="string">            move操作，需要全局AD控制器，需要使用苏州域控制器</span></span><br><span class="line"><span class="string">            pyad.set_defaults(ldap_server=”10.105.21.20”, username=”jianhu.yong”, password=”xxx”)                </span></span><br><span class="line"><span class="string">            “””</span></span><br><span class="line">            user_from_ad.move(ou)</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-6"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unlock_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 解锁用户</span></span><br><span class="line"><span class="string">        lockoutTime: 0</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘unlock_success’</span>: [],</span><br><span class="line">        <span class="string">‘unlock_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘lockoutTime’</span>, <span class="number">0</span>)</span><br><span class="line">            res[<span class="string">‘unlock_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘unlock_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-7"><p><img src="/images/pasted-284.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-257.png) --></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enabled_vpn</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 启用VPN</span></span><br><span class="line"><span class="string">    Enabled: True</span></span><br><span class="line"><span class="string">    Disabled: False</span></span><br><span class="line"><span class="string">    Not Set: None</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘enabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘enabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">True</span>)</span><br><span class="line">            res[<span class="string">‘enabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘enabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-8"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_vpn</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 禁用VPN</span></span><br><span class="line"><span class="string">    Enabled: True</span></span><br><span class="line"><span class="string">    Disabled: False</span></span><br><span class="line"><span class="string">    Not Set: None</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">False</span>)</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-9"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_password</span><span class="params">(self, obj_list, init_pwd)</span>:</span></span><br><span class="line">    <span class="string">“”” </span></span><br><span class="line"><span class="string">    重置用户密码</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘reset_success’</span>: [],</span><br><span class="line">        <span class="string">‘reset_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.set_password(init_pwd)</span><br><span class="line">            res[<span class="string">‘reset_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘reset_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-10"><p><img src="/images/pasted-285.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-258.png) --></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_password_login_modify</span><span class="params">(self, obj_list, init_pwd)</span>:</span></span><br><span class="line">    <span class="string">“”” </span></span><br><span class="line"><span class="string">    重置用户密码,如果用户密码设置了永不过期，登录修改密码将不会生效!</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘reset_success’</span>: [],</span><br><span class="line">        <span class="string">‘reset_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.set_password(init_pwd)</span><br><span class="line">            user_from_ad.force_pwd_change_on_login()</span><br><span class="line">            res[<span class="string">‘reset_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘reset_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></div></div><h5 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h5><div class="tabs" id="auth"><ul class="nav-tabs"><li class="tab active"><a href="#auth-1">共享目录权限</a></li><li class="tab"><a href="#auth-2">邮箱组权限</a></li></ul><div class="tab-content"><div class="tab-pane active" id="auth-1"><div class="note success"><p>分别新增共享目录（二级目录）只读及读写的信息！</p></div><p><img src="/images/pasted-286.png" alt="upload successful"><br><img src="/images/pasted-287.png" alt="upload successful"><br><img src="/images/pasted-288.png" alt="upload successful"><br><img src="/images/pasted-289.png" alt="upload successful"><br><img src="/images/pasted-290.png" alt="upload successful"></p><!--![upload successful](/images/pasted-259.png)![upload successful](/images/pasted-260.png)![upload successful](/images/pasted-263.png)![upload successful](/images/pasted-261.png)![upload successful](/images/pasted-262.png)--><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_members_to_smb</span><span class="params">(self, dn, smb_folders)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_added’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> smb_folder <span class="keyword">in</span> smb_folders:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(smb_folder.group.dn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.add_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(smb_folder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_added’</span>].append(smb_folder)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_members_from_smb</span><span class="params">(self, dn, smb_folders)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_deleted’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> smb_folder <span class="keyword">in</span> smb_folders:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(smb_folder.group.dn)</span><br><span class="line">        <span class="keyword">if</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.remove_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(smb_folder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_deleted’</span>].append(smb_folder)</span><br><span class="line">    <span class="keyword">return</span> res  </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="auth-2"><p><img src="/images/pasted-291.png" alt="upload successful"><br><img src="/images/pasted-292.png" alt="upload successful"></p><!--![upload successful](/images/pasted-264.png)![upload successful](/images/pasted-265.png)--><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_members_to_eg</span><span class="params">(self, dn, enabled_egs)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_added’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> enabled_eg <span class="keyword">in</span> enabled_egs:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(enabled_eg.dn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.add_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(enabled_eg)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_added’</span>].append(enabled_eg)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_members_from_eg</span><span class="params">(self, dn, disabled_egs)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_deleted’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> disabled_eg <span class="keyword">in</span> disabled_egs:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(disabled_eg.dn)</span><br><span class="line">        <span class="keyword">if</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.remove_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(disabled_eg)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_deleted’</span>].append(disabled_eg)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></div></div><h5 id="通讯录管理"><a href="#通讯录管理" class="headerlink" title="通讯录管理"></a>通讯录管理</h5><div class="tabs" id="contact"><ul class="nav-tabs"><li class="tab active"><a href="#contact-1">通讯录</a></li></ul><div class="tab-content"><div class="tab-pane active" id="contact-1"><p><img src="/images/pasted-293.png" alt="upload successful"><br><img src="/images/pasted-267.png" alt="upload successful"><br><!--![upload successful](/images/pasted-266.png)--></p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验室上机CODE自动化</title>
      <link href="/uncategorized/4043802563.html"/>
      <url>/uncategorized/4043802563.html</url>
      
        <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>官方仅提供code脚本，需要ssh至集群登陆节点，执行该code脚本，来生成上机code,对于实验室人员操作，不是很方便！</p><p><img src="/images/pasted-247.png" alt="upload successful"></p><a id="more"></a><h5 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h5><p><img src="/images/pasted-248.png" alt="upload successful"><br><img src="/images/pasted-295.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-249.png) --></p><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.views.generic.base <span class="keyword">import</span> View</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Company, Level, DataPath, DistributePath, Owner, Group, Device, ProjectInfo</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> RegisterForm</span><br><span class="line"><span class="keyword">from</span> utils.GenerateNumber <span class="keyword">import</span> gene_random_number</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> utils.ansible_api_adhoc <span class="keyword">import</span> ANSRunner</span><br><span class="line"><span class="keyword">from</span> utils.email_send <span class="keyword">import</span> SendMail</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LabIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        all_companys = Company.objects.exclude(name=<span class="string">'root'</span>)</span><br><span class="line">        all_levels = Level.objects.all()</span><br><span class="line">        all_data_paths = DataPath.objects.all()</span><br><span class="line">        all_distribute_paths = DistributePath.objects.all()</span><br><span class="line">        all_owners = Owner.objects.all()</span><br><span class="line">        all_groups = Group.objects.all()</span><br><span class="line">        all_devices = Device.objects.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"lab-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            <span class="string">'all_companys'</span>: all_companys,</span><br><span class="line">            <span class="string">'all_levels'</span>: all_levels,</span><br><span class="line">            <span class="string">'all_data_paths'</span>: all_data_paths,</span><br><span class="line">            <span class="string">'all_distribute_paths'</span>: all_distribute_paths,</span><br><span class="line">            <span class="string">'all_owners'</span>: all_owners,</span><br><span class="line">            <span class="string">'all_groups'</span>: all_groups,</span><br><span class="line">            <span class="string">'all_devices'</span>: all_devices</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        register_form = RegisterForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">            <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">                ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">            company = request.POST.get(<span class="string">'company'</span>, <span class="string">''</span>)</span><br><span class="line">            level = request.POST.get(<span class="string">'level'</span>, <span class="string">''</span>)</span><br><span class="line">            data_path = request.POST.get(<span class="string">'data_path'</span>, <span class="string">''</span>)</span><br><span class="line">            distribute_path = request.POST.get(<span class="string">'distribute_path'</span>, <span class="string">''</span>)</span><br><span class="line">            owner = request.POST.get(<span class="string">'owner'</span>, <span class="string">''</span>)</span><br><span class="line">            group = request.POST.get(<span class="string">'group'</span>, <span class="string">''</span>)</span><br><span class="line">            device = request.POST.get(<span class="string">'device'</span>, <span class="string">''</span>)</span><br><span class="line">            code = gene_random_number()</span><br><span class="line"></span><br><span class="line">            info_join = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> code, company, level, distribute_path, owner, group, device, data_path:</span><br><span class="line">                info_join.append(i)</span><br><span class="line">            info_join = <span class="string">','</span>.join(info_join)</span><br><span class="line">            <span class="comment"># /YZGROUP/read/read.txt</span></span><br><span class="line">            job = ANSRunner()</span><br><span class="line">            job.run_model(host_list=<span class="string">'20.0.0.10'</span>, module_name=<span class="string">'shell'</span>,</span><br><span class="line">                          module_args=<span class="string">'echo &#123;0&#125; &gt;&gt; /YZGROUP/read/.&#123;1&#125;.sortlog'</span>.format(info_join, code))</span><br><span class="line">            res = job.get_model_result()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'company'</span>: company,</span><br><span class="line">                    <span class="string">'level'</span>: level,</span><br><span class="line">                    <span class="string">'data_path'</span>: data_path,</span><br><span class="line">                    <span class="string">'distribute_path'</span>: distribute_path,</span><br><span class="line">                    <span class="string">'owner'</span>: owner,</span><br><span class="line">                    <span class="string">'group'</span>: group,</span><br><span class="line">                    <span class="string">'device'</span>: device,</span><br><span class="line">                    <span class="string">'code'</span>: code,</span><br><span class="line">                    <span class="string">'email'</span>: [<span class="string">'sen.guo@genewiz.com.cn'</span>,<span class="string">'fang.xiao@genewiz.com.cn'</span>,<span class="string">'ruikai.jia@genewiz.com.cn'</span>,<span class="string">'jianhu.yong@genewiz.com.cn'</span>],</span><br><span class="line">                    <span class="comment">#'email': ['zongliang.guo@geneseeq.com', '453576956@qq.com'],</span></span><br><span class="line">                    <span class="string">'ip'</span>: ip,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'lab_code'</span>):</span><br><span class="line">                    ProjectInfo.objects.create(</span><br><span class="line">                        number=code,</span><br><span class="line">                        company=Company.objects.get(name=company),</span><br><span class="line">                        level=Level.objects.get(name=level),</span><br><span class="line">                        distribute_path=DistributePath.objects.get(path=distribute_path),</span><br><span class="line">                        owner=Owner.objects.get(name=owner),</span><br><span class="line">                        group=Group.objects.get(name=group),</span><br><span class="line">                        device=Device.objects.get(type=device),</span><br><span class="line">                        data_path=DataPath.objects.get(path=data_path)</span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'lab-success.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                        <span class="string">'company'</span>: company,</span><br><span class="line">                        <span class="string">'level'</span>: level,</span><br><span class="line">                        <span class="string">'data_path'</span>: data_path,</span><br><span class="line">                        <span class="string">'distribute_path'</span>: distribute_path,</span><br><span class="line">                        <span class="string">'owner'</span>: owner,</span><br><span class="line">                        <span class="string">'group'</span>: group,</span><br><span class="line">                        <span class="string">'device'</span>: device,</span><br><span class="line">                        <span class="string">'code'</span>: code,</span><br><span class="line">                        <span class="string">'ip'</span>: ip,</span><br><span class="line">                        <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(register_form.errors, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>集群HTTP代理</title>
      <link href="/Django/776286004.html"/>
      <url>/Django/776286004.html</url>
      
        <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>目前扬子科创集群均无法访问互联网，在未联网的情况下，软件安装，维护效率低下，为了解决该问题，将部署二级代理!</p><p>登录节点明细</p><table><thead><tr><th>HOSTNAME</th><th>IP</th></tr></thead><tbody><tr><td>njlogin01.yzgroup.local</td><td>20.0.0.10/192.168.89.214</td></tr><tr><td>njgate01.yzgroup.local</td><td>192.168.89.212</td></tr></tbody></table><a id="more"></a><h5 id="扬子科创集群网段"><a href="#扬子科创集群网段" class="headerlink" title="扬子科创集群网段"></a>扬子科创集群网段</h5><p>经检查，集群计算机点网段分布如下：</p><p>192.168.88.0/23<br>10.2.150.0/23</p><h5 id="gost软件介绍"><a href="#gost软件介绍" class="headerlink" title="gost软件介绍"></a>gost软件介绍</h5><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpbnVlcnpoLnh5ei9nb3N0L2dldHRpbmctc3RhcnRlZC8=" title="https://docs.ginuerzh.xyz/gost/getting-started/">https://docs.ginuerzh.xyz/gost/getting-started/<i class="fa fa-external-link"></i></span></p><h5 id="代理部署架构"><a href="#代理部署架构" class="headerlink" title="代理部署架构"></a>代理部署架构</h5><p><img src="/images/pasted-239.png" alt="upload successful"><br><img src="/images/pasted-240.png" alt="upload successful"><br><img src="/images/pasted-244.png" alt="upload successful"><br><img src="/images/pasted-243.png" alt="upload successful"></p><p>查看详情<br><img src="/images/pasted-245.png" alt="upload successful"></p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 终端下临时配置代理</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=http://192.168.89.214:8090</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.89.214:8090</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消设置</span></span><br><span class="line"><span class="built_in">unset</span> http_proxy</span><br><span class="line"><span class="built_in">unset</span> https_proxy</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 写入配置文件，永久生效</span></span><br><span class="line">cat &lt;&lt; EOF &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://192.168.89.214:8090</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.89.214:8090</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="Ansible-Hosts"><a href="#Ansible-Hosts" class="headerlink" title="Ansible Hosts"></a>Ansible Hosts</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[proxy-jumpbox]</span><br><span class="line">10.105.42.23 ansible_ssh_user=jianhu.yong ansible_ssh_private_key_file=<span class="string">'/opt/keys/id_rsa_2048_jianhu.yong'</span> ansible_become=<span class="literal">true</span> ansible_become_user=root ansible_become_method=sudo</span><br><span class="line"></span><br><span class="line">[proxy-yzkc]</span><br><span class="line">20.0.0.10 ansible_ssh_user=genewiznj ansible_ssh_private_key_file=<span class="string">'/opt/keys/id_rsa_genewiznj'</span>  ansible_remote_tmp=<span class="string">'/tmp/.ansible/tmp'</span></span><br></pre></td></tr></table></figure><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        proxy_ip = [<span class="string">'10.105.42.23'</span>,<span class="string">'20.0.0.10'</span>]</span><br><span class="line">        proxy_status = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> ip <span class="keyword">in</span> proxy_ip:</span><br><span class="line">            job = ANSRunner()</span><br><span class="line">            job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                          module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">            res = job.get_model_result()</span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                proxy_status[ip] = <span class="string">'Running'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                proxy_status[ip] = <span class="string">'Stopped'</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"proxy-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            <span class="string">'level1'</span>: proxy_status[<span class="string">'10.105.42.23'</span>],</span><br><span class="line">            <span class="string">'level2'</span>: proxy_status[<span class="string">'20.0.0.10'</span>]</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        proxy_ip = request.POST.get(<span class="string">'proxy_ip'</span>,<span class="string">''</span>)</span><br><span class="line">        action = request.POST.get(<span class="string">'action'</span>,<span class="string">''</span>)</span><br><span class="line">        level = int(request.POST.get(<span class="string">'level'</span>, <span class="string">''</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> level == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> action == <span class="string">'start'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务器已运行，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务启动成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'stop'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务停止成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务已停止，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'restart'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9 &amp;&amp; cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'curl -I -x &#123;0&#125;:8090 http://www.baidu.com'</span>.format(proxy_ip))</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-success'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试成功！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-failer'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试失败！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">elif</span> level == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> action == <span class="string">'start'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务器已运行，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务启动成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'stop'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务停止成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务已停止，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'restart'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9 &amp;&amp; cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'curl -I -x &#123;0&#125;:8090 http://www.baidu.com'</span>.format(proxy_ip))</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-success'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试成功！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-failer'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试失败！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyStatusView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        proxy_ip = request.GET.get(<span class="string">'proxy_ip'</span>,<span class="string">''</span>)</span><br><span class="line">        job = ANSRunner()</span><br><span class="line">        job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">        res = job.get_model_result()</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// initHighlightingOnLoad</span></span><br><span class="line">        $(<span class="string">'pre code'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i, block</span>) </span>&#123;</span><br><span class="line">            $(<span class="keyword">this</span>).parent().addClass(<span class="string">'hljs'</span>)</span><br><span class="line">            hljs.highlightBlock(block);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">proxy</span>(<span class="params">current_elem, proxy_ip, action,level</span>)</span>&#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                type: <span class="string">"POST"</span>,</span><br><span class="line">                url:<span class="string">"&#123;% url 'proxy:proxy_index' %&#125;"</span>,</span><br><span class="line">                data:&#123;<span class="string">'proxy_ip'</span>:proxy_ip,<span class="string">'action'</span>:action,<span class="string">'level'</span>:level&#125;,</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                beforeSend:<span class="function"><span class="keyword">function</span>(<span class="params">xhr, settings</span>)</span>&#123;</span><br><span class="line">                    xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, <span class="string">"&#123;&#123; csrf_token &#125;&#125;"</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(data.status === <span class="string">'Has Running'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Running'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">console</span>.log(current_elem.parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(5)'</span>).children(<span class="string">'span'</span>).text(<span class="string">'Running'</span>).removeClass().addClass(<span class="string">'label label-success'</span>))</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Has Stopped'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Stopped'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">console</span>.log(current_elem.parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(5)'</span>).children(<span class="string">'span'</span>).text(<span class="string">'Stopped'</span>).removeClass().addClass(<span class="string">'label label-danger'</span>))</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Restarted'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">window</span>.location.reload()</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'curl-success'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status ===<span class="string">'curl-failer'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动一级代理服务</span></span><br><span class="line">        $(<span class="string">'.start-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'start'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止一级代理服务</span></span><br><span class="line">        $(<span class="string">'.stop-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">'正在停止代理服务,请稍候!'</span>, &#123;<span class="attr">icon</span>: <span class="number">6</span>&#125;);</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'stop'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重启一级代理服务</span></span><br><span class="line">        $(<span class="string">'.restart-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'restart'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试一级代理服务</span></span><br><span class="line">        $(<span class="string">'.test-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'test'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动二级代理服务</span></span><br><span class="line">        $(<span class="string">'.start-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'start'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止二级代理服务</span></span><br><span class="line">        $(<span class="string">'.stop-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">'正在停止代理服务,请稍候!'</span>, &#123;<span class="attr">icon</span>: <span class="number">6</span>&#125;);</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'stop'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重启二级代理服务</span></span><br><span class="line">        $(<span class="string">'.restart-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'restart'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试二级代理服务</span></span><br><span class="line">        $(<span class="string">'.test-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'test'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网邮件API服务部署</title>
      <link href="/uncategorized/3811181486.html"/>
      <url>/uncategorized/3811181486.html</url>
      
        <content type="html"><![CDATA[<h5 id="开源MailServer"><a href="#开源MailServer" class="headerlink" title="开源MailServer"></a>开源MailServer</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rvd25sb2Fk" title="https://www.hmailserver.com/download">https://www.hmailserver.com/download<i class="fa fa-external-link"></i></span> (for windows)<br><span class="exturl" data-url="aHR0cHM6Ly9tb2RvYm9hLm9yZy9lbi8=" title="https://modoboa.org/en/">https://modoboa.org/en/<i class="fa fa-external-link"></i></span> (基于Django Bootstrap Jquery for Linux)</p><p>本次部署hmailserver服务！</p><h5 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h5><ul><li>Windows Server 2012 R2 X64</li><li>Mysql 5.7 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv" title="https://dev.mysql.com/downloads/installer/">https://dev.mysql.com/downloads/installer/<i class="fa fa-external-link"></i></span></li><li>Apache2.4 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=" title="https://www.apachehaus.com/cgi-bin/download.plx">https://www.apachehaus.com/cgi-bin/download.plx<i class="fa fa-external-link"></i></span></li><li>hMailServer-5.6.7-B2425 <span class="exturl" data-url="aHR0cHM6Ly9jZG4ubXlzcWwuY29tLy9Eb3dubG9hZHMvTXlTUUxJbnN0YWxsZXIvbXlzcWwtaW5zdGFsbGVyLXdlYi1jb21tdW5pdHktOC4wLjEyLjAubXNp" title="https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi">https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi<i class="fa fa-external-link"></i></span></li><li>PHP 7.1 <span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWRzL3JlbGVhc2VzL3BocC03LjEuMjItV2luMzItVkMxNC14NjQuemlw" title="https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip">https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip<i class="fa fa-external-link"></i></span></li><li>MS VC14</li><li>libmysql</li></ul><a id="more"></a><h5 id="安装包准备"><a href="#安装包准备" class="headerlink" title="安装包准备"></a>安装包准备</h5><ul><li>Apache httpd-2.4.34-o102o-x64-vc14.zip</li><li>MS VC14 vc_redist.x64.rar</li><li>hmailserver hmailserver-5.6.7-b2425.rar</li><li>php php-7.1.22-win32-vc14-x64.zip</li><li>Webmail webmail-lite-php-8.zip</li><li>libmysql libmysql.zip</li><li>\\xx\xx\SoftWare\开发工具\Windows平台\mysql-installer-community-5.7.17.0.msi</li></ul><h5 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h5><p><img src="/images/pasted-205.png" alt="upload successful"></p><h5 id="安装Net3"><a href="#安装Net3" class="headerlink" title="安装Net3"></a>安装Net3</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;dism.exe /online /<span class="built_in">enable</span>-feature /all  /featurename:netfx3 /Source:D:\sources\sxs</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-206.png" alt="upload successful"></p><h5 id="安装Hmailserver"><a href="#安装Hmailserver" class="headerlink" title="安装Hmailserver"></a>安装Hmailserver</h5><p><img src="/images/pasted-207.png" alt="upload successful"><br><img src="/images/pasted-208.png" alt="upload successful"><br><img src="/images/pasted-209.png" alt="upload successful"><br><img src="/images/pasted-210.png" alt="upload successful"><br><img src="/images/pasted-211.png" alt="upload successful"><br><img src="/images/pasted-212.png" alt="upload successful"><br><img src="/images/pasted-213.png" alt="upload successful"><br><img src="/images/pasted-214.png" alt="upload successful"><br><img src="/images/pasted-215.png" alt="upload successful"><br><img src="/images/pasted-216.png" alt="upload successful"><br><img src="/images/pasted-217.png" alt="upload successful"><br><img src="/images/pasted-296.png" alt="upload successful"><br><img src="/images/pasted-219.png" alt="upload successful"><br><img src="/images/pasted-220.png" alt="upload successful"><br><img src="/images/pasted-221.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-218.png) --></p><p>上传 libmysql.dll 32bit至如下目录C:\Program Files (x86)\hMailServer\Bin</p><p><img src="/images/pasted-222.png" alt="upload successful"></p><p><img src="/images/pasted-223.png" alt="upload successful"></p><p><img src="/images/pasted-224.png" alt="upload successful"></p><h5 id="安装中文包"><a href="#安装中文包" class="headerlink" title="安装中文包"></a>安装中文包</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rldm5ldC90cmFuc2xhdGlvbl9nZXRsYW5ndWFnZS5waHA/bGFuZ3VhZ2U9Y2hpbmVzZQ==" title="https://www.hmailserver.com/devnet/translation_getlanguage.php?language=chinese">https://www.hmailserver.com/devnet/translation_getlanguage.php?language=chinese<i class="fa fa-external-link"></i></span> zh-hans.rar</p><p>C:\Program Files (x86)\hMailServer\Bin\hMailServer.INI</p><p>重启hmail服务，生效</p><p><img src="/images/pasted-225.png" alt="upload successful"></p><p><img src="/images/pasted-226.png" alt="upload successful"></p><p><img src="/images/pasted-227.png" alt="upload successful"></p><h5 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h5><p>将下载的zip文件解压到指定目录(D:\soft\apache24)</p><p><img src="/images/pasted-228.png" alt="upload successful"></p><p>修改ServerRoot<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Define SRVROOT <span class="string">"D:/Apache24"</span></span><br><span class="line">ServerRoot <span class="string">"<span class="variable">$&#123;SRVROOT&#125;</span>"</span></span><br></pre></td></tr></table></figure></p><p>修改DocumentRoot<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DocumentRoot <span class="string">"D:/Apache24/htdocs"</span></span><br></pre></td></tr></table></figure></p><p>安装Apache<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\soft\apache24\bin</span><br><span class="line">httpd.exe -k install</span><br><span class="line">The <span class="string">"Apache2.4"</span> is successfuly installed .</span><br><span class="line">Testing httpd.conf</span><br><span class="line">Error: reported here must be corrected before the service can be started.</span><br></pre></td></tr></table></figure></p><p>启动Apache服务<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\soft\apache24\bin</span><br><span class="line">net start Apache2.4</span><br><span class="line">Apache2.4 服务正在启动...</span><br><span class="line">Apache2.4 服务启动成功。</span><br></pre></td></tr></table></figure></p><h5 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h5><p>将下载的zip文件解压到指定目录(D:\soft\php-7.1.22)</p><p><img src="/images/pasted-229.png" alt="upload successful"></p><p>配置httpd.conf,添加PHP模块</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LoadModule php7_module <span class="string">"D:/soft/php-7.1.22/php7apache2_4.dll"</span></span><br></pre></td></tr></table></figure><p>添加扩展名<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .php</span><br><span class="line">AddType application/x-httpd-php-source .phps</span><br></pre></td></tr></table></figure></p><p>指定php.ini配置文件路径<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PHPIniDir <span class="string">"D:/soft/php-7.1.22"</span></span><br></pre></td></tr></table></figure></p><p>配置php.ini.将php安装目录下的php.ini-production改名为php.ini</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定EXT目录，相对目录会出错！</span></span><br><span class="line">extension_dir = <span class="string">"D:/soft/php-7.1.22/ext"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 开启常用的php扩展</span></span><br><span class="line">extension=php_mbstring.dll（php多字节字符串扩展）</span><br><span class="line">extension=php_curl.dll(webmail依赖)</span><br><span class="line">extension=php_mbstring.dll</span><br><span class="line">extension=php_mysqli.dll（mysqli库扩展）</span><br><span class="line">extension=php_openssl.dll</span><br><span class="line">extension=php_pdo_mysql.dll(webmail依赖)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 开启COM组件</span></span><br><span class="line">com.allow_dcom = <span class="literal">true</span></span><br><span class="line">extension=php_com_dotnet.dll</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置默认时区</span></span><br><span class="line">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure><p>测试PHP,将如下代码放置网站/目录测试<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-230.png" alt="upload successful"></p><p><img src="/images/pasted-231.png" alt="upload successful"></p><div class="note danger">            <font color="red"><br>Call to undefined function curl_init()错误<br>将php.ini中的;extension=php_curl.dll的注释去掉后，重启apache后仍然报Call to undefined function curl_init()的错误，只php安装目录下的libssh2.dll复制到apache的bin目录，并重新启动apache。<br></font><ul><li><span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWQjcGhwLTcuMg==" title="https://windows.php.net/download#php-7.2">https://windows.php.net/download#php-7.2<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC85ZDVjM2E4MWM3ZWY=" title="https://www.jianshu.com/p/9d5c3a81c7ef">https://www.jianshu.com/p/9d5c3a81c7ef<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82MzE5NWZmOTIwNjI=" title="https://www.jianshu.com/p/63195ff92062">https://www.jianshu.com/p/63195ff92062<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9kYW5pZWxhcmFuY2liaWEud29yZHByZXNzLmNvbS8yMDE1LzA5LzI3L2luc3RhbGxpbmctYXBhY2hlLTItNC1hbmQtcGhwLTctZm9yLWRldmVsb3BtZW50LW9uLXdpbmRvd3Mv" title="https://danielarancibia.wordpress.com/2015/09/27/installing-apache-2-4-and-php-7-for-development-on-windows/">https://danielarancibia.wordpress.com/2015/09/27/installing-apache-2-4-and-php-7-for-development-on-windows/<i class="fa fa-external-link"></i></span></li></ul>          </div><h5 id="安装PHPWebAdmin"><a href="#安装PHPWebAdmin" class="headerlink" title="安装PHPWebAdmin"></a>安装PHPWebAdmin</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2RvY3VtZW50YXRpb24vbGF0ZXN0Lz9wYWdlPWhvd3RvX2luc3RhbGxfcGhwd2ViYWRtaW4=" title="https://www.hmailserver.com/documentation/latest/?page=howto_install_phpwebadmin">https://www.hmailserver.com/documentation/latest/?page=howto_install_phpwebadmin<i class="fa fa-external-link"></i></span></p><ul><li>Apache or IIS (or any other PHP compatible web server)</li><li>PHP &gt;= 4.3.11 or PHP &gt;= 5.0.3. Due to bugs in PHP 4.3.10, hMailServer does not work with that version.For php version 5.3.15 / 5.4.5 and higher the COM API has been disabled as a module. The error probably will be PHP Fatal error: Class ‘COM’ not found in \phpwebadmin\initialize.php on line xx. Make sure you edit the php.ini file has been edited with the value extension=php_com_dotnet.dll in the extentions.</li><li>For IIS , install PHP from the Web Platform Installer, and then enable php_com_dotnet.dll from there.</li><li>In the PHP configuration, the following settings must be configured for PHPWebAdmin to work properly:<ul><li>register_globals must be set to off (register_globals was deprecated and doesn’t exist from PHP 7.x)</li><li>display_errors must be set to off</li></ul></li><li>For IIS 8.5 and higher, IIS App pool runs under Network Service. Network Service needs full rights to PHPWebAdmin folder which is an alternative to granting ‘read and execute’ permissions to IIS_IUSRS.</li></ul><h5 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerAdmin jianhu.yong@genewiz.com.cn</span><br><span class="line">  ServerName njmail.local.genewiz.com</span><br><span class="line">  DocumentRoot <span class="string">"C:/Program Files (x86)/hMailServer/PHPWebAdmin"</span></span><br><span class="line">  ErrorLog <span class="string">"logs/njmail.local.genewniz.com-error.log"</span></span><br><span class="line">  CustomLog <span class="string">"logs/njmail.local.genewniz.com-access.log"</span> common</span><br><span class="line"> </span><br><span class="line">&lt;Directory <span class="string">"C:/Program Files (x86)/hMailServer/PHPWebAdmin"</span>&gt;</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Possible values for the Options directive are "None", "All",</span></span><br><span class="line">    <span class="comment"># or any combination of:</span></span><br><span class="line">    <span class="comment">#   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Note that "MultiViews" must be named *explicitly* --- "Options All"</span></span><br><span class="line">    <span class="comment"># doesn't give it to you.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># The Options directive is both complicated and important.  Please see</span></span><br><span class="line">    <span class="comment"># http://httpd.apache.org/docs/2.4/mod/core.html#options</span></span><br><span class="line">    <span class="comment"># for more information.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># AllowOverride controls what directives may be placed in .htaccess files.</span></span><br><span class="line">    <span class="comment"># It can be "All", "None", or any combination of the keywords:</span></span><br><span class="line">    <span class="comment">#   Options FileInfo AuthConfig Limit</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    AllowOverride None</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Controls who can get stuff from this server.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;  </span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h5 id="配置config-php"><a href="#配置config-php" class="headerlink" title="配置config.php"></a>配置config.php</h5><p>Please rename config-dist.php to config.php. The file is found in the PHPWebAdmin root folder.</p><p><img src="/images/pasted-237.png" alt="upload successful"></p><p>访问登录页 <span class="exturl" data-url="aHR0cDovL25qbWFpbC5sb2NhbC5nZW5ld2l6LmNvbS9waHB3ZWJhZG1pbi8=" title="http://njmail.local.genewiz.com/phpwebadmin/">http://njmail.local.genewiz.com/phpwebadmin/<i class="fa fa-external-link"></i></span></p><h5 id="安装WebMail"><a href="#安装WebMail" class="headerlink" title="安装WebMail"></a>安装WebMail</h5><ul><li><span class="exturl" data-url="aHR0cHM6Ly9hZnRlcmxvZ2ljLmNvbS9kb2NzL3dlYm1haWwtbGl0ZS04" title="https://afterlogic.com/docs/webmail-lite-8">https://afterlogic.com/docs/webmail-lite-8<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9hZnRlcmxvZ2ljLmNvbS9kb2NzL3dlYm1haWwtbGl0ZS04L2NvbmZpZ3VyaW5nLXdlYm1haWw=" title="https://afterlogic.com/docs/webmail-lite-8/configuring-webmail">https://afterlogic.com/docs/webmail-lite-8/configuring-webmail<i class="fa fa-external-link"></i></span></li></ul><p>将下载的webmail-lite-php-8压缩包解压后，重命名为webmail</p><p>配置虚拟主机<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Alias <span class="string">"/webmail/"</span> <span class="string">"D:/soft/webmail/"</span></span><br><span class="line">&lt;Directory <span class="string">"D:/soft/webmail/"</span>&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride None</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><p>配置Webmail</p><div class="note ">            <p>默认账号密码<br>user:superadmin<br>password:空</p>          </div><p>检测依赖项目 <span class="exturl" data-url="aHR0cDovL25qbWFpbC5sb2NhbC5nZW5ld2l6LmNvbS93ZWJtYWlsLz9pbnN0YWxs" title="http://njmail.local.genewiz.com/webmail/?install">http://njmail.local.genewiz.com/webmail/?install<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-232.png" alt="upload successful"></p><p>修改默认用户密码</p><p><img src="/images/pasted-233.png" alt="upload successful"></p><p>数据库设置</p><p><img src="/images/pasted-297.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-234.png) --></p><p>开启日志监控</p><p><img src="/images/pasted-235.png" alt="upload successful"></p><p>添加HmailServer</p><p><img src="/images/pasted-298.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-236.png) --></p><hr><h5 id="邮件API部署"><a href="#邮件API部署" class="headerlink" title="邮件API部署"></a>邮件API部署</h5><p><img src="/images/pasted-299.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-238.png) --></p><h5 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 内网邮件API</span></span><br><span class="line">url(<span class="string">r'^email/'</span>, include(<span class="string">'njemail.urls'</span>, namespace=<span class="string">'email'</span>)),</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> EmailApiIndexView, EmailApiView</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># 首页</span></span><br><span class="line">    url(<span class="string">r'^index/$'</span>, EmailApiIndexView.as_view(), name=<span class="string">"email_index"</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 邮件接口</span></span><br><span class="line">    url(<span class="string">r'^api/$'</span>, EmailApiView.as_view(), name=<span class="string">"email_api"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailApiIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"email-api-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        email_api_test_form = EmailApiTestForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> email_api_test_form.is_valid():</span><br><span class="line">            <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">                ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>,<span class="string">''</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'ip'</span>: ip,</span><br><span class="line">                <span class="string">'email'</span>: [email],</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> SendMail(data=data, send_type=<span class="string">'api_test'</span>):</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'测试邮件已发送!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                <span class="string">'msg'</span>: <span class="string">'邮件地址格式有误!'</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailApiView</span><span class="params">(CSRFExemptMixin, LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">"email:email_index"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        info = json.loads(request.body)</span><br><span class="line">        email_api_form = EmailApiForm(info)</span><br><span class="line">        <span class="keyword">if</span> email_api_form.is_valid():</span><br><span class="line">            receivers = info[<span class="string">'receivers'</span>]</span><br><span class="line">            subject = info[<span class="string">'subject'</span>]</span><br><span class="line">            content = info[<span class="string">'content'</span>]</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'receivers'</span>: receivers,</span><br><span class="line">                <span class="string">'subject'</span>: subject,</span><br><span class="line">                <span class="string">'content'</span>: content</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> SendMail(data,send_type=<span class="string">"email_api"</span>):</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'邮件发送成功!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'邮件发送失败,请联系管理员!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                <span class="string">'msg'</span>: <span class="string">'邮件发送失败!'</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> i, j <span class="keyword">in</span> email_api_form.errors.items():</span><br><span class="line">                res[i] = j[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="客户端调用"><a href="#客户端调用" class="headerlink" title="客户端调用"></a>客户端调用</h5><div class="tabs" id="email_api"><ul class="nav-tabs"><li class="tab active"><a href="#email_api-1">cookies</a></li><li class="tab"><a href="#email_api-2">headers</a></li><li class="tab"><a href="#email_api-3">session</a></li><li class="tab"><a href="#email_api-4">php</a></li><li class="tab"><a href="#email_api-5">curl</a></li></ul><div class="tab-content"><div class="tab-pane active" id="email_api-1"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}<span class="comment"># 获取token</span>res = requests.get(<span class="string">'http://xx.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 获取sessionid</span>cookies = {}cookies[<span class="string">'csrftoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]res = requests.post(<span class="string">'http://njops.local.genewiz.com/login/'</span>, data=login_data, cookies=cookies)cookies[<span class="string">'sessionid'</span>] = res.history[<span class="number">0</span>].cookies[<span class="string">'sessionid'</span>]<span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 构造请求头</span>headers = {<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>}<span class="comment"># 发送邮件</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>, data=json.dumps(email_data), cookies=cookies, headers=headers)</code></pre></div><div class="tab-pane" id="email_api-2"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}<span class="comment"># 获取token</span>res = requests.get(<span class="string">'http://njops.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 构造请求头</span>headers = {}headers[<span class="string">'Cookie'</span>] = <span class="string">'csrftoken='</span>+res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 获取sessionid</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/login/'</span>,data=login_data,headers=headers)headers[<span class="string">'Cookie'</span>] = headers[<span class="string">'Cookie'</span>] + <span class="string">';'</span> + (<span class="string">'sessionid='</span>+res.history[<span class="number">0</span>].cookies[<span class="string">'sessionid'</span>])headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/json'</span><span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 发送邮件</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/email/api'</span>, data=json.dumps(email_data), headers=headers)</code></pre></div><div class="tab-pane" id="email_api-3"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}s = requests.Session()res = s.get(<span class="string">'http://xx.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 登录获取登录后的session</span>res = s.post(<span class="string">'http://njops.local.genewiz.com/login/'</span>, data=login_data)<span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 发送邮件</span>headers = {}headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/json'</span>res = s.post(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>, data=json.dumps(email_data), headers=headers)</code></pre></div><div class="tab-pane" id="email_api-4"><pre><code class="php">$request = <span class="keyword">new</span> HttpRequest();$request-&gt;setUrl(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>);$request-&gt;setMethod(HTTP_METH_POST);<span class="comment"># 需要先登陆获取csrftoken sessionid(此处省略)</span>$request-&gt;setHeaders(<span class="keyword">array</span>(  <span class="string">'cache-control'</span> =&gt; <span class="string">'no-cache'</span>,  <span class="string">'cookie'</span> =&gt; <span class="string">'csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65'</span>,  <span class="string">'content-type'</span> =&gt; <span class="string">'application/json'</span>));$request-&gt;setBody(<span class="string">'{</span><span class="string">  "receivers": ["test1@example.com", "test2@example.com"],</span><span class="string">  "content": "test",</span><span class="string">  "subject": "test"</span><span class="string">}'</span>);<span class="keyword">try</span> {  $response = $request-&gt;send();  <span class="keyword">echo</span> $response-&gt;getBody();} <span class="keyword">catch</span> (HttpException $ex) {  <span class="keyword">echo</span> $ex;}</code></pre></div><div class="tab-pane" id="email_api-5"><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要先登陆获取csrftoken sessionid(此处省略)</span></span><br><span class="line">curl -X POST \</span><br><span class="line">    http:<span class="regexp">//</span>xx.local.genewiz.com<span class="regexp">/email/</span>api<span class="regexp">/ \</span></span><br><span class="line"><span class="regexp">  -H ‘cache-control: no-cache’ \</span></span><br><span class="line"><span class="regexp">  -H ‘content-type: application/</span>json<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -H ‘</span>cookie: csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -b ‘</span>csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -d ‘</span>&#123;</span><br><span class="line">  <span class="string">“receivers”</span>: [<span class="string">“<span class="exturl" data-url="bWFpbHRvOnRlc3QxQGV4YW1wbGUuY29t" title="mailto:test1@example.com">test1@example.com<i class="fa fa-external-link"></i></span>“</span>, <span class="string">“<span class="exturl" data-url="bWFpbHRvOnRlc3QyQGV4YW1wbGUuY29t" title="mailto:test2@example.com">test2@example.com<i class="fa fa-external-link"></i></span>“</span>],</span><br><span class="line">  <span class="string">“content”</span>: <span class="string">“test”</span>,</span><br><span class="line">  <span class="string">“subject”</span>: <span class="string">“test”</span></span><br><span class="line">&#125;<span class="string">‘</span></span><br></pre></td></tr></table></figure></div></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>下机数据自动处理By peaktrace with Docker</title>
      <link href="/uncategorized/1962248623.html"/>
      <url>/uncategorized/1962248623.html</url>
      
        <content type="html"><![CDATA[<div class="note danger">            <font color="red">Centos7.2版本较低，通过docker-compose构建时候会出现如下错误：Error response from daemon: OCI runtime create failed<br>建议Centos7.4以上，或者通过yum update升级</font>          </div><h5 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h5><h6 id="旧的版本"><a href="#旧的版本" class="headerlink" title="旧的版本"></a>旧的版本</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h6 id="添加安装源"><a href="#添加安装源" class="headerlink" title="添加安装源"></a>添加安装源</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h6 id="安装Docker-1"><a href="#安装Docker-1" class="headerlink" title="安装Docker"></a>安装Docker</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure><h6 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h6 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h6 id="Docker-compose构建"><a href="#Docker-compose构建" class="headerlink" title="Docker-compose构建"></a>Docker-compose构建</h6><div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1"><i class="fa fa-cogs" style="font-size:16px" title></i> Docker-compose Build</a></li><li class="tab"><a href="#-2"><i class="fa fa-cogs" style="font-size:16px" title></i>  Docker-compose Image</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><div class="note danger"><p><strong>注意事项</strong><br>  执行docker-compose命令时，务必进入docker-compose.yml所在的目录，否则无法正常执行。</p></div><p></p><h6 id="上传项目至服务器"><a href="#上传项目至服务器" class="headerlink" title="上传项目至服务器"></a>上传项目至服务器</h6><p>路径：/opt/clims</p><p></p><p></p><h6 id="配置docker-compose-yml"><a href="#配置docker-compose-yml" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h6><div class="note danger"><p><strong>注意事项</strong><br>宿主机下机数据路径务必与容器内部路径一致,请根据实际情况修改!</p></div><p></p><p></p><p><img src="/images/pasted-199.png" alt="upload successful"></p><p></p><p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">‘3’</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    db:</span></span><br><span class="line"><span class="attr">      container_name:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">      image:</span> <span class="attr">mysql:5.6</span></span><br><span class="line"><span class="attr">      environment:</span></span><br><span class="line"><span class="attr">        MYSQL_ROOT_PASSWORD:</span> <span class="string">xxxxxxxx</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">“3306:3306”</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./mysql/data:/var/lib/mysql</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    web:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./nginx</span></span><br><span class="line">        <span class="comment">#image: nginx:test</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">“80:80”</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./nginx/conf:/opt/nginx/conf</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./django/clims:/opt/clims-status</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">status</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    status:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">django</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./django</span></span><br><span class="line">        <span class="comment">#image: django:test</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="comment"># command: uwsgi  –emperor uwsgi.ini</span></span><br><span class="line"><span class="attr">        command:</span> <span class="string">uwsgi</span> <span class="bullet">–ini</span> <span class="string">/opt/clims/uwsgi/uwsgi.ini</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">“8001:8001”</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./django/clims:/opt/clims</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">db</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    pipeline:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">pipeline</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./pipeline</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/internal:/opt/pipeline/internal</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/external:/opt/pipeline/external</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/cron:/var/spool/cron</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/sanger-pipeline/clims-in-uat:/sanger-pipeline/clims-in-uat</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/sanger-pipeline/clims-out-uat:/sanger-pipeline/clims-out-uat</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">db</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">status</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">web</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">    data:</span></span><br><span class="line"><span class="attr">    clims:</span></span><br><span class="line">    <span class="attr">conf:</span></span><br></pre></td></tr></table></figure></p><p></p><h6 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p></p><div class="note info"><p><strong>备注</strong><br>执行此命令会自动构建镜像，并以此镜像自动创建容器，至此已完成自动化部署，可以访问http://宿主机IP/即可！</p></div><p></p><h6 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h6><p><img src="/images/pasted-200.png" alt="upload successful"></p><p></p><p></p><h6 id="上传镜像至本地仓库"><a href="#上传镜像至本地仓库" class="headerlink" title="上传镜像至本地仓库"></a>上传镜像至本地仓库</h6><ul><p></p><p><li>苏州Harbor仓库地址：<span class="exturl" data-url="aHR0cHM6Ly94eC5sb2NhbC5nZW5ld2l6LmNvbQ==" title="https://xx.local.genewiz.com">https://xx.local.genewiz.com<i class="fa fa-external-link"></i></span><!-- * 苏州Harbor仓库地址：https://gwharbor03.local.genewiz.com --><br></li><br></p></ul><p></p><p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 登录本地仓库</span><br><span class="line">docker login <span class="exturl" data-url="aHR0cHM6Ly94eC5sb2NhbC5nZW5ld2l6LmNvbQ==" title="https://xx.local.genewiz.com">https://xx.local.genewiz.com<i class="fa fa-external-link"></i></span></span><br></pre></td></tr></table></figure></p><p></p><p><img src="/images/pasted-301.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-201.png) --></p><p></p><p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 本地镜像标记TAG</span><br><span class="line">docker tag clims_pipeline:latest xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">docker tag clims_web:latest xx.local.genewiz.com/clims/web:latest</span><br><span class="line">docker tag clims_status:latest xx.local.genewiz.com/clims/status:latest</span><br><span class="line">docker tag mysql:5.6 xx.local.genewiz.com/clims/mysql:5.6</span><br><span class="line">// 上传</span><br><span class="line">docker push xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/web:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/status:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/mysql:5.6</span><br></pre></td></tr></table></figure></p><p></p><h6 id="登录仓库查看上传镜像"><a href="#登录仓库查看上传镜像" class="headerlink" title="登录仓库查看上传镜像"></a>登录仓库查看上传镜像</h6><p><img src="/images/pasted-202.png" alt="upload successful"><br></p></div><div class="tab-pane" id="-2"><div class="note danger"><strong>注意事项</strong><br><p>执行docker-compose命令时，务必进入docker-compose.yml所在的目录，否则无法正常执行。</p></div>  <p></p><h6 id="上传项目至服务器-1"><a href="#上传项目至服务器-1" class="headerlink" title="上传项目至服务器"></a>上传项目至服务器</h6><p>路径：/opt/clims</p><p></p><p></p><h6 id="配置docker-compose-yml-1"><a href="#配置docker-compose-yml-1" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h6><div class="note danger"><strong>注意事项</strong><br><p>宿主机下机数据路径务必与容器内部路径一致,请根据实际情况修改!</p></div>  <p></p><p></p><p><img src="/images/pasted-204.png" alt="upload successful"></p><p></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">‘3’</span></span><br><span class="line">services:</span><br><span class="line">    db:</span><br><span class="line">      container_name: mysql</span><br><span class="line">      <span class="comment">#image: mysql:5.6</span></span><br><span class="line">      image: xx.local.genewiz.com/clims/mysql:5.6</span><br><span class="line">      environment:</span><br><span class="line">        MYSQL_ROOT_PASSWORD: xxxxxxxx</span><br><span class="line">      ports:</span><br><span class="line">        - <span class="string">“3306:3306”</span></span><br><span class="line">      volumes:</span><br><span class="line">        - ./mysql/data:/var/lib/mysql</span><br><span class="line"> </span><br><span class="line">    web:</span><br><span class="line">        container_name: nginx</span><br><span class="line">        <span class="comment">#build: ./nginx</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/web:latest</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">        - <span class="string">“80:80”</span></span><br><span class="line">        volumes:</span><br><span class="line">        - ./nginx/conf:/opt/nginx/conf</span><br><span class="line">        - ./django/clims:/opt/clims-status</span><br><span class="line">        depends_on:</span><br><span class="line">        - status</span><br><span class="line"> </span><br><span class="line">    status:</span><br><span class="line">        container_name: django</span><br><span class="line">        <span class="comment">#build: ./django</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/status:latest</span><br><span class="line">        restart: always</span><br><span class="line">        <span class="comment"># command: uwsgi  –emperor uwsgi.ini</span></span><br><span class="line">        <span class="built_in">command</span>: uwsgi –ini /opt/clims/uwsgi/uwsgi.ini</span><br><span class="line">        ports:</span><br><span class="line">         - <span class="string">“8001:8001”</span></span><br><span class="line">        volumes:</span><br><span class="line">        - ./django/clims:/opt/clims</span><br><span class="line">        depends_on:</span><br><span class="line">         - db</span><br><span class="line"> </span><br><span class="line">    pipeline:</span><br><span class="line">        container_name: pipeline</span><br><span class="line">        <span class="comment">#build: ./pipeline</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">        restart: always</span><br><span class="line">        volumes:</span><br><span class="line">        - ./pipeline/internal:/opt/pipeline/internal</span><br><span class="line">        - ./pipeline/external:/opt/pipeline/external</span><br><span class="line">        - ./pipeline/cron:/var/spool/cron</span><br><span class="line">        - /sanger-pipeline/clims-in-uat:/sanger-pipeline/clims-in-uat</span><br><span class="line">        - /sanger-pipeline/clims-out-uat:/sanger-pipeline/clims-out-uat</span><br><span class="line">        depends_on:</span><br><span class="line">         - db</span><br><span class="line">         - status</span><br><span class="line">         - web</span><br><span class="line"> </span><br><span class="line">volumes:</span><br><span class="line">    data:</span><br><span class="line">    clims:</span><br><span class="line">    conf:</span><br></pre></td></tr></table></figure><br><div class="note danger"><strong>注意事项</strong><p>此时构建镜像直接从本地仓库获取，而不是本地编译Dockerfile!</p></div><br><br><h6 id="开始构建-1"><a href="#开始构建-1" class="headerlink" title="开始构建"></a>开始构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div></div></div><h5 id="容器启停"><a href="#容器启停" class="headerlink" title="容器启停"></a>容器启停</h5><h6 id="容器停止"><a href="#容器停止" class="headerlink" title="容器停止"></a>容器停止</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure><h6 id="容器启动"><a href="#容器启动" class="headerlink" title="容器启动"></a>容器启动</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose start</span><br></pre></td></tr></table></figure><h6 id="容器重启"><a href="#容器重启" class="headerlink" title="容器重启"></a>容器重启</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><h6 id="容器重新构建"><a href="#容器重新构建" class="headerlink" title="容器重新构建"></a>容器重新构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h5 id="Pipeline使用注意事项"><a href="#Pipeline使用注意事项" class="headerlink" title="Pipeline使用注意事项"></a>Pipeline使用注意事项</h5><h6 id="Json配置文件说明"><a href="#Json配置文件说明" class="headerlink" title="Json配置文件说明"></a>Json配置文件说明</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"INPUT_ROOT_DIRECTORY"</span>: <span class="string">"/sanger-pipeline/clims-in-uat"</span>, //本地下机路径</span><br><span class="line">  <span class="string">"OUTPUT_ROOT_DIRECTORY"</span>: <span class="string">"/sanger-pipeline/clims-out-uat"</span>, //本地下机路径</span><br><span class="line">  <span class="string">"INPUT_SMB_DIRECTORY"</span>: <span class="string">"\\\\10.105.23.227\\seqdata-in"</span>, //相对应Samba路径</span><br><span class="line">  <span class="string">"OUTPUT_SMB_DIRECTORY"</span>: <span class="string">"\\\\10.105.23.227\\seqdata"</span>, //相对应Samba路径</span><br><span class="line">  <span class="string">"PEAKTRACE_SERVER"</span>:<span class="string">"10.105.21.181"</span>, //Peaktrace所在服务器IP</span><br><span class="line">  <span class="string">"PEAKTRACE_USER"</span>:<span class="string">"root"</span>, //Peaktrace服务器账号</span><br><span class="line">  <span class="string">"PEAKTRACE_PASSWORD"</span>:<span class="string">"xxxxxxxx"</span>, //Peaktrace服务器账号密码</span><br><span class="line">  <span class="string">"PEAKTRACE_EXEC_ARGS"</span>: <span class="string">"-al no -c -10 -n 0 -xn yes"</span>, //Peaktrace参数</span><br><span class="line">  <span class="string">"PEAKTRACE_UNITS"</span>:<span class="string">"140000"</span>, //告警阈值</span><br><span class="line">  <span class="string">"PEAKTRACE_DAYS"</span>:<span class="string">"700"</span>, //告警阈值</span><br><span class="line">  <span class="string">"MYSQL_HOST"</span>:<span class="string">"db"</span>, //容器DB主机</span><br><span class="line">  <span class="string">"MYSQL_USER"</span>:<span class="string">"root"</span>, //容器DB账号</span><br><span class="line">  <span class="string">"MYSQL_PASSWORD"</span>:<span class="string">"xxxxxxxx"</span>, //容器DB密码</span><br><span class="line">  <span class="string">"MYSQL_DB"</span>:<span class="string">"pipelinedb"</span>, //数据库</span><br><span class="line">  <span class="string">"STATUS_URL"</span>:<span class="string">"http://10.105.21.181/"</span> // 详情页面地址</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h6><p>默认均关闭，需要手动打开,请合理设置时间间隔！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Internal Pipeline</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/internal/climspipe.py &amp;&gt;&gt; /tmp/pipeline-internal.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># External Pipeline</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/external/climspipe.py &amp;&gt;&gt; /tmp/pipeline-external.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># PeakTrace License Monitor</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/internal/pt_license_monitor.py</span></span><br></pre></td></tr></table></figure><div class="note info">            <p>生产环境，已通过Peaktrace处理过的目录，请提前加入数据库中，否则会被重新处理，请慎重操作！</p>          </div><h5 id="Nginx-域名配置（可选）"><a href="#Nginx-域名配置（可选）" class="headerlink" title="Nginx 域名配置（可选）"></a>Nginx 域名配置（可选）</h5><div class="note info">            <p>Nginx默认监听所有IP地址，容器部署完成后，直接访问宿主机IP地址即可！</p><p>如需配置域名，请替换如下域名，配置相应DNS记录,重启容器即可生效</p>          </div><p><img src="/images/pasted-203.png" alt="upload successful"></p><h5 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h5><div class="note danger">            <font color="red">docker WARNING: IPv4 forwarding is disabled?</font>          </div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf or vim /usr/lib/sysctl.d/00-system.conf</span><br><span class="line"> </span><br><span class="line">添加如下代码：</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"> </span><br><span class="line">查看</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h5 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h5><p><img src="/images/pasted-312.png" alt="upload successful"><br><img src="/images/pasted-321.png" alt="upload successful"><br><img src="/images/pasted-319.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-310.png) --></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>下机数据自动处理By peaktrace</title>
      <link href="/uncategorized/4039255390.html"/>
      <url>/uncategorized/4039255390.html</url>
      
        <content type="html"><![CDATA[<h5 id="处理流程"><a href="#处理流程" class="headerlink" title="处理流程"></a>处理流程</h5><p><img src="/images/pasted-198.png" alt="upload successful"></p><a id="more"></a><h5 id="安装PeakTrace"><a href="#安装PeakTrace" class="headerlink" title="安装PeakTrace"></a>安装PeakTrace</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">tar -zxv peaktrace_6911_linux_el7_x86_64 </span><br><span class="line">cd peaktrace_6911_linux_el7_x86_64</span><br><span class="line"> </span><br><span class="line"><span class="comment"># installs peaktrace and codemeter on CentOS 7</span></span><br><span class="line">yum --nogpgcheck localinstall CodeMeter<span class="number">-6.60</span><span class="number">.2878</span><span class="number">-501.</span>x86_64.rpm AxProtector<span class="number">-10.10</span><span class="number">.2878</span><span class="number">-501.</span>x86_64.rpm</span><br><span class="line">chmod <span class="number">755</span> peaktrace &amp;&amp; cp peaktrace /usr/bin/peaktrace</span><br><span class="line">cp peaktrace<span class="number">.1</span>.gz /usr/local/share/man/man1/peaktrace<span class="number">.1</span>.gz</span><br><span class="line">cmu -h</span><br></pre></td></tr></table></figure><h5 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">mysqladmin -hlocalhost -uroot password <span class="string">"xxx"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"create database pipelinedb character set utf8;"</span> | mysql -hlocalhost -uroot -p<span class="string">'xxx'</span></span><br></pre></td></tr></table></figure><h5 id="安装Django环境"><a href="#安装Django环境" class="headerlink" title="安装Django环境"></a>安装Django环境</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -r requirement.txt </span><br><span class="line"></span><br><span class="line">asn1crypto==0.24.0</span><br><span class="line">bcrypt==3.1.4</span><br><span class="line">biopython==1.72</span><br><span class="line">cffi==1.11.5</span><br><span class="line">cryptography==2.4.1</span><br><span class="line">diff-match-patch==20181111</span><br><span class="line">Django==1.10.4</span><br><span class="line">django-auth-ldap==1.3.0</span><br><span class="line">django-crispy-forms==1.7.2</span><br><span class="line">django-formtools==2.1</span><br><span class="line">django-import-export==1.0.1</span><br><span class="line">django-pure-pagination==0.3.0</span><br><span class="line">django-ranged-response==0.2.0</span><br><span class="line">django-simple-captcha==0.4.6</span><br><span class="line">enum34==1.1.6</span><br><span class="line">et-xmlfile==1.0.1</span><br><span class="line">idna==2.7</span><br><span class="line">image==1.5.24</span><br><span class="line">ipaddress==1.0.22</span><br><span class="line">jdcal==1.4</span><br><span class="line">MySQL-python==1.2.5</span><br><span class="line">numpy==1.15.1</span><br><span class="line">odfpy==1.3.6</span><br><span class="line">openpyxl==2.5.11</span><br><span class="line">paramiko==2.4.1</span><br><span class="line">Pillow==5.3.0</span><br><span class="line">psycopg2-binary==2.7.5</span><br><span class="line">pyasn1==0.4.4</span><br><span class="line">pycparser==2.19</span><br><span class="line">PyNaCl==1.3.0</span><br><span class="line">python-ldap==2.5.2</span><br><span class="line">PyYAML==3.13</span><br><span class="line">six==1.11.0</span><br><span class="line">SQLAlchemy==1.2.11</span><br><span class="line">tablib==0.12.1</span><br><span class="line">unicodecsv==0.14.1</span><br><span class="line">uWSGI==2.0.17.1</span><br><span class="line">xlrd==1.1.0</span><br><span class="line">xlwt==1.3.0</span><br></pre></td></tr></table></figure><h5 id="修改Django-DB配置"><a href="#修改Django-DB配置" class="headerlink" title="修改Django DB配置"></a>修改Django DB配置</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'pipelinedb'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'xxxxxxxx'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'127.0.0.1'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><h5 id="同步静态文件"><a href="#同步静态文件" class="headerlink" title="同步静态文件"></a>同步静态文件</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><h5 id="配置uwsgi"><a href="#配置uwsgi" class="headerlink" title="配置uwsgi"></a>配置uwsgi</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line"><span class="comment"># 项目目录</span></span><br><span class="line"><span class="built_in">chdir</span>=/opt/clims</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定项目的application</span></span><br><span class="line">module=clims.wsgi</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定sock的文件路径</span></span><br><span class="line">socket=/opt/clims/uwsgi/uwsgi.sock</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启用主进程</span></span><br><span class="line">master=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 进程个数</span></span><br><span class="line">workers=2</span><br><span class="line"> </span><br><span class="line">pidfile=/opt/clims/uwsgi/uwsgi.pid</span><br><span class="line"><span class="comment"># 自动移除unix Socket和pid文件当服务停止的时候</span></span><br><span class="line">vacuum=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定IP端口</span></span><br><span class="line">http=10.105.21.181:8001</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定静态文件</span></span><br><span class="line">static-map=/static=/opt/clims/statics</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启动uwsgi的用户名和用户组</span></span><br><span class="line">uid=root</span><br><span class="line">gid=root</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 序列化接受的内容，如果可能的话</span></span><br><span class="line">thunder-lock=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启用线程</span></span><br><span class="line"><span class="built_in">enable</span>-threads=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置自中断时间</span></span><br><span class="line">harakiri=30</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置缓冲</span></span><br><span class="line">post-buffering=4096</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置日志目录</span></span><br><span class="line">daemonize=/opt/clims/uwsgi/uwsgi.log</span><br></pre></td></tr></table></figure><h5 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --ini /opt/clims/uwsgi/uwsgi8001.ini</span><br></pre></td></tr></table></figure><h5 id="停止项目"><a href="#停止项目" class="headerlink" title="停止项目"></a>停止项目</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkill -9 uwsgi</span><br><span class="line"> </span><br><span class="line">or</span><br><span class="line"> </span><br><span class="line">ps -ef|grep uwsgi |grep -v grep|xargs <span class="built_in">kill</span> -9</span><br></pre></td></tr></table></figure><h5 id="启动pipeline"><a href="#启动pipeline" class="headerlink" title="启动pipeline"></a>启动pipeline</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">通过设置定时任务即可！</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>目录同步-线上部署</title>
      <link href="/uncategorized/150957718.html"/>
      <url>/uncategorized/150957718.html</url>
      
        <content type="html"><![CDATA[<h5 id="线上环境部署"><a href="#线上环境部署" class="headerlink" title="线上环境部署"></a>线上环境部署</h5><h6 id="安装python2-7"><a href="#安装python2-7" class="headerlink" title="安装python2.7"></a>安装python2.7</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/2.7.13/Python-2.7.13rc1.tgz</span><br><span class="line">tar zxvf Python-2.7.13rc1.tgz </span><br><span class="line"><span class="built_in">cd</span> Python-2.7.13rc1</span><br><span class="line">yum -y install sqlite-devel openssl-devel tk-devel readline-devel bzip2-devel gdbm-devel</span><br><span class="line">./configure --prefix=/opt/app/python2.7/</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">/opt/app/python2.7/bin/python get-pip.py</span><br><span class="line">/opt/app/python2.7/bin/pip install virtualenvwrapper</span><br></pre></td></tr></table></figure><h6 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> PATH=/opt/app/python2.7/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> WORKON_HOME=/opt/virtualenvs</span><br><span class="line"><span class="built_in">export</span> VIRTUALENVWRAPPER_PYTHON=/opt/app/python2.7/bin/python</span><br><span class="line"><span class="built_in">source</span> /opt/app/python2.7/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure><h6 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkvirtualenv -p /opt/app/python2.7/bin/python DeviceOnline</span><br><span class="line">pip install -r /opt/DeviceOnline/venv/requirment.txt -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure><h5 id="目录创建"><a href="#目录创建" class="headerlink" title="目录创建"></a>目录创建</h5><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title="进入虚拟环境"></a>进入虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">workon DeviceOnline</span><br></pre></td></tr></table></figure><h6 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(DeviceOnline) [root@gwszsmb01 DeviceOnline]<span class="comment"># ./run.py </span></span><br><span class="line">usage: run.py [-h] [--force] [--configfile CONFIGFILE] folder_name</span><br><span class="line">run.py: error: too few arguments</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Example</span></span><br><span class="line">(DeviceOnline) [root@gwszsmb01 DeviceOnline]<span class="comment"># ./run.py Linne</span></span><br></pre></td></tr></table></figure><h6 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title="退出虚拟环境"></a>退出虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>目录同步</title>
      <link href="/uncategorized/2863113024.html"/>
      <url>/uncategorized/2863113024.html</url>
      
        <content type="html"><![CDATA[<h5 id="同步示例"><a href="#同步示例" class="headerlink" title="同步示例"></a>同步示例</h5><p><img src="/images/pasted-188.png" alt="upload successful"></p><a id="more"></a><h5 id="目录流程"><a href="#目录流程" class="headerlink" title="目录流程"></a>目录流程</h5><p><img src="/images/pasted-189.png" alt="upload successful"></p><h5 id="初次安装"><a href="#初次安装" class="headerlink" title="初次安装"></a>初次安装</h5><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title="进入虚拟环境"></a>进入虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">source ../../DeviceOnline/bin/activate</span><br></pre></td></tr></table></figure><h6 id="进入run-py所在目录"><a href="#进入run-py所在目录" class="headerlink" title="进入run.py所在目录"></a>进入run.py所在目录</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd ../DeviceOnline</span><br></pre></td></tr></table></figure><h6 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(venv) [root@localhost DeviceOnline]<span class="comment"># ./run.py -h</span></span><br><span class="line">usage: run.py [-h] [--force] [--configfile CONFIGFILE] folder_name</span><br><span class="line"> </span><br><span class="line">positional arguments:</span><br><span class="line">  folder_name           The Name of Device</span><br><span class="line"> </span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message <span class="keyword">and</span> exit</span><br><span class="line">  --force               Force installation</span><br><span class="line">  --configfile CONFIGFILE</span><br><span class="line">                        Configuration file to use</span><br></pre></td></tr></table></figure><h6 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">./run.py folder_name</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-190.png" alt="upload successful"></p><blockquote class="pullquote note info"><p>使用场景：<br>本地Samba未安装lsyncd同步软件<br>本地Samba &amp; Azrue Samba服务器均未创建SyncUser用户<br>本地Samba SyncUser公钥尚未同步至Azrue Samba</p></blockquote><h5 id="非初次安装"><a href="#非初次安装" class="headerlink" title="非初次安装"></a>非初次安装</h5><p><img src="/images/pasted-191.png" alt="upload successful"></p><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p><code>../DeviceOnline/install.cfg</code></p><p><img src="/images/pasted-192.png" alt="upload successful"></p><h5 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h5><h6 id="Lsyncd未安装"><a href="#Lsyncd未安装" class="headerlink" title="Lsyncd未安装"></a>Lsyncd未安装</h6><p><img src="/images/pasted-193.png" alt="upload successful"></p><h6 id="SyncUser未创建"><a href="#SyncUser未创建" class="headerlink" title="SyncUser未创建"></a>SyncUser未创建</h6><p><img src="/images/pasted-194.png" alt="upload successful"></p><h6 id="公钥未同步"><a href="#公钥未同步" class="headerlink" title="公钥未同步"></a>公钥未同步</h6><p><img src="/images/pasted-195.png" alt="upload successful"></p><h6 id="目录重名"><a href="#目录重名" class="headerlink" title="目录重名"></a>目录重名</h6><p><img src="/images/pasted-196.png" alt="upload successful"></p><h5 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h5><p><img src="/images/pasted-327.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-197.png) --></p><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">An installer for GENEWIZ Device Online.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Create Device Folder Name IN Local &amp; Azrue Samba Servers.</span></span><br><span class="line"><span class="string">Config Lsyncd Service IN Local Samba Server.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> configparser</span><br><span class="line"><span class="keyword">except</span> ImportError:</span><br><span class="line">    <span class="keyword">import</span> ConfigParser <span class="keyword">as</span> configparser</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> system</span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> utils</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deploy_key</span><span class="params">(key, host, username, password, sync_user)</span>:</span></span><br><span class="line">    <span class="string">"""Deploy Public key to target machines"""</span></span><br><span class="line">    client = paramiko.SSHClient()</span><br><span class="line">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    client.connect(host, username=username, password=password)</span><br><span class="line">    client.exec_command(<span class="string">'mkdir -p /home/&#123;&#125;/.ssh/'</span>.format(sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chown &#123;&#125;.&#123;&#125; /home/&#123;&#125;/.ssh/'</span>.format(sync_user, sync_user, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'echo "&#123;&#125;" &gt; /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(key, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chmod 600 /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chown &#123;&#125;.&#123;&#125; /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(sync_user, sync_user, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chmod 700 /home/&#123;&#125;/.ssh/'</span>.format(sync_user))</span><br><span class="line">    client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdirs</span><span class="params">(host, username, password, folder_path, sync_user)</span>:</span></span><br><span class="line">    <span class="string">"""Make dirs"""</span></span><br><span class="line">    client = paramiko.SSHClient()</span><br><span class="line">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    client.connect(host, username=username, password=password)</span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> folder_path:</span><br><span class="line">        client.exec_command(<span class="string">'mkdir -p &#123;&#125;'</span>.format(path))</span><br><span class="line">        client.exec_command(<span class="string">'chmod -R 2776 &#123;&#125;'</span>.format(path))</span><br><span class="line">        client.exec_command(<span class="string">'chown &#123;&#125;."&#123;&#125;" &#123;&#125;'</span>.format(sync_user, <span class="string">'domain users'</span>, path))</span><br><span class="line">    client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SentMail</span><span class="params">(msg_data, mail_to, mail_cc)</span>:</span></span><br><span class="line">    <span class="string">"""Send Email"""</span></span><br><span class="line">    mail_host = <span class="string">'10.xx.xx.xx'</span></span><br><span class="line">    mail_user = <span class="string">'xx@genewiz.com.cn'</span></span><br><span class="line">    <span class="comment"># mail_pass = '********'</span></span><br><span class="line">    mail_sender = <span class="string">'xx@genewiz.com.cn'</span></span><br><span class="line">    mail_to = mail_to</span><br><span class="line">    mail_cc = mail_cc</span><br><span class="line">    subject = <span class="string">'【GENEWIZ-IT】设备目录上线通知'</span></span><br><span class="line">    <span class="comment"># message = MIMEMultipart()</span></span><br><span class="line">    tr_messages_list = []</span><br><span class="line">    li_messages_list = []</span><br><span class="line">    <span class="keyword">for</span> smb_tag, smb_info <span class="keyword">in</span> msg_data.items():</span><br><span class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> smb_info[<span class="string">'hosts'</span>]:</span><br><span class="line">            hostname = host[<span class="string">'hostname'</span>]</span><br><span class="line">            folder_auth = host[<span class="string">'folder_auth'</span>]</span><br><span class="line">            create_time = host[<span class="string">'create_time'</span>]</span><br><span class="line">            folder_group = host[<span class="string">'folder_group'</span>]</span><br><span class="line">            folder_name = host[<span class="string">'folder_name'</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'local'</span> <span class="keyword">in</span> smb_tag:</span><br><span class="line">                smb_path_internal_in = os.path.join(host[<span class="string">'smb_path_internal_in'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line">                smb_path_external_in = os.path.join(host[<span class="string">'smb_path_external_in'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line">                smb_path_out = os.path.join(host[<span class="string">'smb_path_out'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> service <span class="keyword">in</span> smb_info[<span class="string">'services'</span>]:</span><br><span class="line">                    li_messages = <span class="string">'''</span></span><br><span class="line"><span class="string">                        &lt;li&gt;&lt;strong&gt;服务: &#123;&#125;&lt;/strong&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;日志目录: &#123;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;配置文件: &#123;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li style="margin-bottom:15px"&gt;系统服务: &#123;&#125;【自启动】&lt;/li&gt;                                            </span></span><br><span class="line"><span class="string">                    '''</span>.format(service[<span class="string">'name'</span>], service[<span class="string">'log_file_path'</span>], service[<span class="string">'config_path'</span>], service[<span class="string">'init_path'</span>])</span><br><span class="line">                    li_messages_list.append(li_messages)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> path <span class="keyword">in</span> host[<span class="string">'path'</span>]:</span><br><span class="line">                tr_messages = <span class="string">'''</span></span><br><span class="line"><span class="string">                    &lt;tr&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;height: 27px;line-height: 27px;background: #fff;padding:0 10px;color:#4285F4" &gt;&#123;0&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td  style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;height: 27px;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;1&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 20px"&gt;&#123;2&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;3&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;4&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;5&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 20px;color: red"&gt;&#123;6&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                '''</span>.format(smb_tag, hostname, folder_name, path, folder_auth, folder_group, create_time)</span><br><span class="line">                tr_messages_list.append(tr_messages)</span><br><span class="line"></span><br><span class="line">    mail_msg = <span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';color:#333;font-weight: bold;"&gt;您的设备目录已创建,详情如下：&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;table cellspacing="0" cellpadding="0" style="border: 1px solid #c4cacd;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">            &lt;tbody&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-left: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;类型&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;IP&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录路径&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;权限&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录属组&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;创建时间&lt;/th&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                %s</span></span><br><span class="line"><span class="string">            &lt;/tbody&gt;</span></span><br><span class="line"><span class="string">        &lt;/table&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';font-weight:bold;color:#333;border-bottom: 1px solid #eee"&gt;本地下机路径&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul style="list-style: none;margin: 0;padding: 0;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径-内单【IN】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径-外单【IN】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径【OUT】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';font-weight:bold;color:#333;border-bottom: 1px solid #eee"&gt;目录同步服务&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul style="list-style: none;margin: 0;padding: 0;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">        %s</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:12px;font-family:'Microsoft YaHei';color:red;"&gt;本邮件是由系统自动发出的，请不要回复本邮件！&lt;/p&gt;</span></span><br><span class="line"><span class="string">        '''</span> % (<span class="string">""</span>.join(tr_messages_list), smb_path_internal_in, smb_path_external_in, smb_path_out, <span class="string">""</span>.join(li_messages_list))</span><br><span class="line"></span><br><span class="line">    message = MIMEText(mail_msg, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">    message[<span class="string">'From'</span>] = Header(mail_sender)</span><br><span class="line">    message[<span class="string">'To'</span>] = Header(<span class="string">','</span>.join(mail_to))</span><br><span class="line">    message[<span class="string">'Cc'</span>] = Header(<span class="string">','</span>.join(mail_cc))</span><br><span class="line">    message[<span class="string">'Subject'</span>] = Header(subject, <span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        smtpObj = smtplib.SMTP()</span><br><span class="line">        smtpObj.connect(mail_host, <span class="number">25</span>)</span><br><span class="line">        <span class="comment"># SZ SMTP Server do not require login</span></span><br><span class="line">        <span class="comment"># smtpObj.login(mail_user,mail_pass)</span></span><br><span class="line">        smtpObj.sendmail(mail_sender, mail_to + mail_cc, message.as_string())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(input_args)</span>:</span></span><br><span class="line">    <span class="string">"""Install process."""</span></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">"--force"</span>, action=<span class="string">"store_true"</span>, default=<span class="literal">False</span>,help=<span class="string">"Force installation"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"--configfile"</span>, default=<span class="string">"installer.cfg"</span>,help=<span class="string">"Configuration file to use"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"folder_name"</span>, type=str,help=<span class="string">"The Name of Device"</span>)</span><br><span class="line">    args = parser.parse_args(input_args)</span><br><span class="line"></span><br><span class="line">    folder_name = args.folder_name</span><br><span class="line">    basedir = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line"></span><br><span class="line">    utils.printcolor(<span class="string">"Welcome to Genewiz installer for Device Online!\n"</span>, utils.GREEN)</span><br><span class="line">    config = configparser.SafeConfigParser()</span><br><span class="line">    <span class="keyword">with</span> open(args.configfile) <span class="keyword">as</span> fp:</span><br><span class="line">        config.readfp(fp)</span><br><span class="line"></span><br><span class="line">    mail_to = config.get(<span class="string">'notify'</span>, <span class="string">'mail_to'</span>).split(<span class="string">','</span>)</span><br><span class="line">    mail_cc= config.get(<span class="string">'notify'</span>, <span class="string">'mail_cc'</span>).split(<span class="string">','</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if Lsyncd is installed?</span></span><br><span class="line">    utils.printcolor(<span class="string">"1.Check if Lsyncd is installed?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line">    code,res = utils.exec_cmd(<span class="string">'which lsyncd'</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">        utils.printcolor(<span class="string">"[Error]: lsyncd is not installed."</span>, utils.RED)</span><br><span class="line">        name, version, _id = platform.linux_distribution()</span><br><span class="line">        <span class="keyword">if</span> version.startswith(<span class="string">'6'</span>):</span><br><span class="line">            lsyncd_rpm = os.path.join(basedir, <span class="string">'scripts/files/lsyncd-2.1.5-0.el6.x86_64.rpm'</span>)</span><br><span class="line">        <span class="keyword">elif</span> version.startswith(<span class="string">'7'</span>):</span><br><span class="line">            lsyncd_rpm = os.path.join(basedir, <span class="string">'scripts/files/lsyncd-2.1.5-6.el7.x86_64.rpm'</span>)</span><br><span class="line">        utils.printcolor(<span class="string">"[Info]: Installing lsyncd for you, please wait..."</span>, utils.BLUE)</span><br><span class="line">        package.backend.install_many(config.get(<span class="string">'requirement'</span>, <span class="string">'package'</span>).split(<span class="string">','</span>))</span><br><span class="line">        utils.exec_cmd(<span class="string">'rpm -ivh &#123;&#125;'</span>.format(lsyncd_rpm))</span><br><span class="line">        code, res = utils.exec_cmd(<span class="string">'which lsyncd'</span>)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: Lsyncd installation is complete. &#123;&#125;"</span>.format([res.strip()]), utils.GREEN)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: Lsyncd is installed &#123;&#125;"</span>.format([res.strip()]), utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if SyncUser is Created?</span></span><br><span class="line">    utils.printcolor(<span class="string">''</span>, utils.BLACK)</span><br><span class="line">    utils.printcolor(<span class="string">"2.Check if SyncUser is Created?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get all samba servers</span></span><br><span class="line">    hosts = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> section <span class="keyword">in</span> config.sections():</span><br><span class="line">        <span class="keyword">if</span> section.startswith(<span class="string">'smb-local'</span>):</span><br><span class="line">            hosts[section] = &#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> config.items(section)&#125;</span><br><span class="line">        <span class="keyword">elif</span> section.startswith(<span class="string">'smb-azure'</span>):</span><br><span class="line">            hosts[section] = &#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> config.items(section)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get local and azure servers</span></span><br><span class="line">    azure_hosts = []</span><br><span class="line">    local_hosts = []</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> hosts.keys():</span><br><span class="line">        <span class="keyword">if</span> key.startswith(<span class="string">'smb-local'</span>):</span><br><span class="line">            local_hosts.append(hosts[key])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            azure_hosts.append(hosts[key])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> hosts.values():</span><br><span class="line">        client = paramiko.SSHClient()</span><br><span class="line">        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        client.connect(host[<span class="string">'hostname'</span>], <span class="number">22</span>, username=host[<span class="string">'username'</span>], password=host[<span class="string">'password'</span>])</span><br><span class="line">        cmd = <span class="string">'id SyncUser'</span></span><br><span class="line">        stdin, stdout, stderr = client.exec_command(cmd)</span><br><span class="line">        stdout = stdout.read()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> stdout:</span><br><span class="line">            utils.printcolor(<span class="string">"[Error]: the SyncUser was not detected for &#123;&#125;"</span>.format(host[<span class="string">'hostname'</span>]), utils.RED)</span><br><span class="line">            utils.printcolor(<span class="string">"[Info]: Creating SyncUser for &#123;&#125;, please wait..."</span>.format(host[<span class="string">'hostname'</span>]), utils.BLUE)</span><br><span class="line">            cmd = <span class="string">'useradd SyncUser'</span></span><br><span class="line">            client.exec_command(cmd)</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: SyncUser is created"</span>, utils.GREEN)</span><br><span class="line">            utils.printcolor(<span class="string">''</span>, utils.BLACK)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: detected SyncUser in &#123;&#125;\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if can ssh pass the key?</span></span><br><span class="line">    utils.printcolor(<span class="string">"3.Check if can ssh pass the key?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">        key = os.path.join(basedir, <span class="string">'scripts/files/SyncUser_id_rsa'</span>)</span><br><span class="line">        private_key = paramiko.RSAKey.from_private_key_file(key)</span><br><span class="line">        client = paramiko.SSHClient()</span><br><span class="line">        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            client.connect(host[<span class="string">'hostname'</span>], <span class="number">22</span>, username=<span class="string">'SyncUser'</span>, pkey=private_key)</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: login &#123;&#125; with private key\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            utils.printcolor(<span class="string">"[Error]: &#123;&#125; for &#123;&#125;"</span>.format(str(e), host[<span class="string">'hostname'</span>]), utils.RED)</span><br><span class="line">            utils.printcolor(<span class="string">"[Info]: Initializing user permissions for &#123;&#125;, please wait..."</span>.format(host[<span class="string">'hostname'</span>]), utils.BLUE)</span><br><span class="line">            key = open(os.path.expanduser(os.path.join(basedir,<span class="string">'scripts/files/SyncUser_id_rsa.pub'</span>))).read()</span><br><span class="line">            deploy_key(key, host[<span class="string">'hostname'</span>], host[<span class="string">'username'</span>], host[<span class="string">'password'</span>], host[<span class="string">'sync_user'</span>])</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: Permission initialization succeeded in &#123;&#125;\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if the directory name conflicts?</span></span><br><span class="line">    utils.printcolor(<span class="string">"4.Check if the directory name conflicts?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line"></span><br><span class="line">    has_created_folders = []</span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        path_internal_in = host[<span class="string">'path_internal_in'</span>]</span><br><span class="line">        path_external_in = host[<span class="string">'path_external_in'</span>]</span><br><span class="line">        path_out = host[<span class="string">'path_out'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_internal_in):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_internal_in, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_external_in):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_external_in, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_out):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_out, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Directory deduplication</span></span><br><span class="line">    has_created_folders_unique = list(set(has_created_folders))</span><br><span class="line">    <span class="keyword">if</span> folder_name <span class="keyword">in</span> has_created_folders_unique:</span><br><span class="line">        utils.printcolor(<span class="string">"Error: Directory name conflict - &#123;&#125;, please change the directory name."</span>.format(folder_name),utils.RED)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: No directory conflict."</span>.format(folder_name),utils.GREEN)</span><br><span class="line">        utils.printcolor(<span class="string">""</span>, utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ask for confirm</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> args.force:</span><br><span class="line">        answer = utils.user_input(<span class="string">"Will create a directory and synchronization service,do you confirm? (Y/n) "</span>)</span><br><span class="line">        <span class="keyword">if</span> answer.lower().startswith(<span class="string">"n"</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># mail dict</span></span><br><span class="line">    msg_data = &#123;</span><br><span class="line">        <span class="string">'local_smb'</span>: &#123;<span class="string">'hosts'</span>: [], <span class="string">'services'</span>: []&#125;,</span><br><span class="line">        <span class="string">'azrue_smb'</span>: &#123;<span class="string">'hosts'</span>: []&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create device folder in Local Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        folder_path_internal_in = os.path.join(host[<span class="string">'path_internal_in'</span>], folder_name)</span><br><span class="line">        folder_path_external_in = os.path.join(host[<span class="string">'path_external_in'</span>], folder_name)</span><br><span class="line">        folder_path_out = os.path.join(host[<span class="string">'path_out'</span>], folder_name)</span><br><span class="line">        folder_path = [folder_path_internal_in, folder_path_external_in, folder_path_out]</span><br><span class="line">        mkdirs(host[<span class="string">'hostname'</span>],host[<span class="string">'username'</span>],host[<span class="string">'password'</span>],folder_path,host[<span class="string">'sync_user'</span>])</span><br><span class="line">        tmp_data = &#123;&#125;</span><br><span class="line">        tmp_data[<span class="string">'hostname'</span>] = host[<span class="string">'hostname'</span>]</span><br><span class="line">        tmp_data[<span class="string">'path'</span>] = folder_path</span><br><span class="line">        tmp_data[<span class="string">'folder_name'</span>] = folder_name</span><br><span class="line">        tmp_data[<span class="string">'folder_auth'</span>] = <span class="string">'2766'</span></span><br><span class="line">        tmp_data[<span class="string">'folder_group'</span>] = <span class="string">'SyncUser:Domain User'</span></span><br><span class="line">        tmp_data[<span class="string">'smb_path_internal_in'</span>] = host[<span class="string">'smb_path_internal_in'</span>]</span><br><span class="line">        tmp_data[<span class="string">'smb_path_external_in'</span>] = host[<span class="string">'smb_path_external_in'</span>]</span><br><span class="line">        tmp_data[<span class="string">'smb_path_out'</span>] = host[<span class="string">'smb_path_out'</span>]</span><br><span class="line">        tmp_data[<span class="string">'create_time'</span>] = datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        msg_data[<span class="string">'local_smb'</span>][<span class="string">'hosts'</span>].append(tmp_data)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success-LocalSamba]: &#123;&#125; is created in &#123;&#125;"</span>.format(folder_path, host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create device folder in Azrue Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">        folder_path_out = os.path.join(host[<span class="string">'path_out'</span>], folder_name)</span><br><span class="line">        folder_path = [folder_path_out]</span><br><span class="line">        mkdirs(host[<span class="string">'hostname'</span>], host[<span class="string">'username'</span>], host[<span class="string">'password'</span>], folder_path, host[<span class="string">'sync_user'</span>])</span><br><span class="line">        tmp_data = &#123;&#125;</span><br><span class="line">        tmp_data[<span class="string">'hostname'</span>] = host[<span class="string">'hostname'</span>]</span><br><span class="line">        tmp_data[<span class="string">'path'</span>] = folder_path</span><br><span class="line">        tmp_data[<span class="string">'folder_name'</span>] = folder_name</span><br><span class="line">        tmp_data[<span class="string">'folder_auth'</span>] = <span class="string">'2766'</span></span><br><span class="line">        tmp_data[<span class="string">'folder_group'</span>] = <span class="string">'SyncUser:Domain User'</span></span><br><span class="line">        tmp_data[<span class="string">'create_time'</span>] = datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        msg_data[<span class="string">'azrue_smb'</span>][<span class="string">'hosts'</span>].append(tmp_data)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success-AzureSamba]: &#123;&#125; is created in &#123;&#125;"</span>.format(folder_path, host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create Lsyncd services in Local Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> local_host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        key = os.path.join(basedir, <span class="string">'scripts/files/SyncUser_id_rsa'</span>)</span><br><span class="line">        <span class="keyword">for</span> azure_host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">            <span class="keyword">if</span> azure_host.has_key(<span class="string">'tag'</span>):</span><br><span class="line">                logfile = <span class="string">'Sync_'</span> + folder_name + <span class="string">'_DR'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logfile = <span class="string">'Sync_'</span> + folder_name</span><br><span class="line">            statusfile = logfile</span><br><span class="line">            source = os.path.join(local_host[<span class="string">'path_out'</span>],folder_name)</span><br><span class="line">            target = azure_host[<span class="string">'hostname'</span>] + <span class="string">':'</span> + os.path.join(azure_host[<span class="string">'path_out'</span>],folder_name)</span><br><span class="line">            rsh = azure_host[<span class="string">'sync_user'</span>]</span><br><span class="line">            sync_cfg_tpl = open(os.path.join(basedir, <span class="string">'scripts/files/sync-cfg.tpl'</span>)).read() % (logfile,logfile,statusfile,statusfile,source,target,key,rsh)</span><br><span class="line">            sync_init_tpl = open(os.path.join(basedir, <span class="string">'scripts/files/sync-init.tpl'</span>)).read() % (logfile,res.strip(),logfile,logfile,logfile)</span><br><span class="line">            f = open(os.path.join(<span class="string">'/etc'</span>,logfile + <span class="string">'.lua'</span>), <span class="string">'wb'</span>)</span><br><span class="line">            f.write(sync_cfg_tpl)</span><br><span class="line">            f.flush()</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">            f = open(os.path.join(<span class="string">'/etc/init.d'</span>,logfile), <span class="string">'wb'</span>)</span><br><span class="line">            f.write(sync_init_tpl)</span><br><span class="line">            f.flush()</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">            os.chmod(os.path.join(<span class="string">'/etc/init.d'</span>,logfile), <span class="number">0755</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                os.makedirs(os.path.join(<span class="string">'/var/log'</span>, logfile))</span><br><span class="line">            <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            system.enable_and_start_service(logfile)</span><br><span class="line"></span><br><span class="line">            tmp_data = &#123;&#125;</span><br><span class="line">            tmp_data[<span class="string">'name'</span>] = logfile</span><br><span class="line">            tmp_data[<span class="string">'log_file_path'</span>] = os.path.join(<span class="string">'/var/log'</span>, logfile)</span><br><span class="line">            tmp_data[<span class="string">'config_path'</span>] = os.path.join(<span class="string">'/etc'</span>, logfile + <span class="string">'.lua'</span>)</span><br><span class="line">            tmp_data[<span class="string">'init_path'</span>] = os.path.join(<span class="string">'/etc/init.d'</span>, logfile)</span><br><span class="line">            msg_data[<span class="string">'local_smb'</span>][<span class="string">'services'</span>].append(tmp_data)</span><br><span class="line"></span><br><span class="line">    utils.printcolor(<span class="string">"Congratulations!"</span>,utils.GREEN)</span><br><span class="line">    SentMail(msg_data, mail_to, mail_cc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>域账号密码自助-项目部署</title>
      <link href="/uncategorized/4173984491.html"/>
      <url>/uncategorized/4173984491.html</url>
      
        <content type="html"><![CDATA[<h5 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h5><p><code>Windows + Apache + Mod_Wsgi + Django + Mysql</code></p><blockquote class="pullquote note warning"><p>注意事项：Windows需要为英文版本，中文版本报错会有乱码！</p></blockquote><h5 id="安装Python2-7"><a href="#安装Python2-7" class="headerlink" title="安装Python2.7"></a>安装Python2.7</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv" title="https://www.python.org/downloads/">https://www.python.org/downloads/<i class="fa fa-external-link"></i></span></p><a id="more"></a><h5 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h5><h6 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h6><p><img src="/images/pasted-168.png" alt="upload successful"></p><p><img src="/images/pasted-169.png" alt="upload successful"></p><p><img src="/images/pasted-170.png" alt="upload successful"></p><p><img src="/images/pasted-171.png" alt="upload successful"></p><p><img src="/images/pasted-172.png" alt="upload successful"></p><p><img src="/images/pasted-173.png" alt="upload successful"></p><p><img src="/images/pasted-174.png" alt="upload successful"></p><p><img src="/images/pasted-175.png" alt="upload successful"></p><p><img src="/images/pasted-176.png" alt="upload successful"></p><h6 id="3-2-创建数据库"><a href="#3-2-创建数据库" class="headerlink" title="3.2 创建数据库"></a>3.2 创建数据库</h6><p><img src="/images/pasted-177.png" alt="upload successful"></p><p><img src="/images/pasted-178.png" alt="upload successful"></p><h5 id="4-创建虚拟环境"><a href="#4-创建虚拟环境" class="headerlink" title="4.创建虚拟环境"></a>4.创建虚拟环境</h5><blockquote class="pullquote note info"><ul><li>使不同应用开发环境独立</li><li>环境升级不影响其他应用，也不会影响全局的python环境</li><li>防止系统中出现包管理混乱和版本冲突</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装virtualenvwrapper</span></span><br><span class="line">pip install virtualenvwrapper-win</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建</span></span><br><span class="line">mkvirtualenv ADManager</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 进入虚拟机环境</span></span><br><span class="line">workon ADManager</span><br></pre></td></tr></table></figure><h5 id="5-离线安装-ldap-amp-mysql-python"><a href="#5-离线安装-ldap-amp-mysql-python" class="headerlink" title="5.离线安装 ldap &amp; mysql-python"></a>5.离线安装 ldap &amp; mysql-python</h5><blockquote class="pullquote note warning"><p>MySQL_python &amp; python_ldap 在windows上无法直接通过pip install 完成安装<br><span class="exturl" data-url="aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLw==" title="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/<i class="fa fa-external-link"></i></span> (解决方案)</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(ADManager) D:\&gt;<span class="built_in">cd</span> D:\ShareFloders\NG-IT\AD_Manager\package</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;dir</span><br><span class="line"> </span><br><span class="line"> Directory of D:\ShareFloders\NG-IT\AD_Manager\package</span><br><span class="line">03/19/2018  11:47 AM           821,050 MySQL_python-1.2.5-cp27-none-win_amd64.whl</span><br><span class="line">01/23/2018  10:55 PM         1,086,402 python_ldap-2.5.2-cp27-cp27m-win_amd64.whl</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;pip install MySQL_python-1.2.5-cp27-none-win_amd64.whl</span><br><span class="line">Successfully installed MySQL-python-1.2.5</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;pip install python_ldap-2.5.2-cp27-cp27m-win_amd64.whl</span><br><span class="line">Successfully installed python-ldap-2.5.2</span><br></pre></td></tr></table></figure><h5 id="6-部署Django环境"><a href="#6-部署Django环境" class="headerlink" title="6.部署Django环境"></a>6.部署Django环境</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><h5 id="7-上传CODE至服务器"><a href="#7-上传CODE至服务器" class="headerlink" title="7.上传CODE至服务器"></a>7.上传CODE至服务器</h5><p>省略</p><h5 id="8-配置数据库信息"><a href="#8-配置数据库信息" class="headerlink" title="8.配置数据库信息"></a>8.配置数据库信息</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">settings.py</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'DATABASE NAME'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'USER'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'PASSWORD'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'DATABASE IP'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-配置邮件服务器"><a href="#9-配置邮件服务器" class="headerlink" title="9.配置邮件服务器"></a>9.配置邮件服务器</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">settings.py</span><br><span class="line"><span class="comment"># Email Config</span></span><br><span class="line">EMAIL_HOST = <span class="string">'MAIL Server'</span></span><br><span class="line">EMAIL_PORT = <span class="string">'MAIL PORT'</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'USER'</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'PASSWORS'</span></span><br><span class="line">EMAIL_USE_TLS = <span class="literal">True</span></span><br><span class="line">EMAIL_FROM = <span class="string">'MAIL FROM'</span></span><br></pre></td></tr></table></figure><h5 id="10-配置Apache"><a href="#10-配置Apache" class="headerlink" title="10.配置Apache"></a>10.配置Apache</h5><h6 id="10-1-MS-VC14安装"><a href="#10-1-MS-VC14安装" class="headerlink" title="10.1 MS VC14安装"></a>10.1 MS VC14安装</h6><p><img src="/images/pasted-179.png" alt="upload successful"></p><p>Apache依赖于 MicroSoft VC14，需要安装！</p><h6 id="10-2-官网下载"><a href="#10-2-官网下载" class="headerlink" title="10.2 官网下载"></a>10.2 官网下载</h6><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=" title="https://www.apachehaus.com/cgi-bin/download.plx">https://www.apachehaus.com/cgi-bin/download.plx<i class="fa fa-external-link"></i></span></p><p>httpd-2.4.34-o102o-x64-vc14.zip</p><p><img src="/images/pasted-181.png" alt="upload successful"></p><h6 id="10-3-Mod-Wsgi"><a href="#10-3-Mod-Wsgi" class="headerlink" title="10.3 Mod_Wsgi"></a>10.3 Mod_Wsgi</h6><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dyYWhhbUR1bXBsZXRvbi9tb2Rfd3NnaQ==" title="https://github.com/GrahamDumpleton/mod_wsgi">https://github.com/GrahamDumpleton/mod_wsgi<i class="fa fa-external-link"></i></span></p><p>mod_wsgi-windows-4.4.12.rar</p><h6 id="10-4-配置Apache"><a href="#10-4-配置Apache" class="headerlink" title="10.4 配置Apache"></a>10.4 配置Apache</h6><p>解压httpd-2.4.34-o102o-x64-vc14.zip,将apache24目录放至 D:\apache24</p><p>解压mod_wsgi-windows-4.4.12.rar，将‪mod_wsgi-windows-4.4.12\Apache24-win64-VC10\modules\mod_wsgi-py27-VC9.so文件放至D:\apache24\modules目录</p><p><img src="/images/pasted-182.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf，添加mod_wsgi.so 模块</p><p><img src="/images/pasted-183.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf,修改SRVROOT目录</p><p><img src="/images/pasted-184.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf,打开虚拟主机</p><p><img src="/images/pasted-185.png" alt="upload successful"></p><p>修改D:\Apache24\conf\extra\httpd-vhosts.conf</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin jianhu.yong@genewiz.com.cn</span><br><span class="line">    DocumentRoot <span class="string">"D:/app01/ADManager"</span></span><br><span class="line">    ServerName pwd.local.genewiz.com</span><br><span class="line">    ErrorLog <span class="string">"logs/pwd.local.genewiz.com-error.log"</span></span><br><span class="line">    CustomLog <span class="string">"logs/pwd.local.genewiz.com-access.log"</span> common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">WSGIScriptAlias / D:/app01/ADManager/ADManager/wsgi.py</span><br><span class="line">&lt;Directory D:/app01/ADManager/ADManager/&gt;</span><br><span class="line">&lt;Files wsgi.py&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line">Alias /static/ D:/app01/ADManager/statics/</span><br><span class="line">&lt;Directory D:/app01/ADManager/statics/&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># virtual env</span></span><br><span class="line">WSGIPythonPath D:/app01/ADManager;D:/python-envs/ADManager/Lib/site-packages</span><br></pre></td></tr></table></figure><h6 id="10-5-安装Apache服务"><a href="#10-5-安装Apache服务" class="headerlink" title="10.5 安装Apache服务"></a>10.5 安装Apache服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Apache24\bin</span><br><span class="line">httpd.exe -k install</span><br><span class="line">The <span class="string">"Apache2.4"</span> is successfuly installed .</span><br><span class="line">Testing httpd.conf</span><br><span class="line">Error: reported here must be corrected before the service can be started.</span><br></pre></td></tr></table></figure><h6 id="10-6-启动Apache服务"><a href="#10-6-启动Apache服务" class="headerlink" title="10.6 启动Apache服务"></a>10.6 启动Apache服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Apache24\bin</span><br><span class="line">net start Apache2.4</span><br><span class="line">Apache2.4 服务正在启动...</span><br><span class="line">Apache2.4 服务启动成功。</span><br></pre></td></tr></table></figure><h6 id="10-7-Apache服务管理工具"><a href="#10-7-Apache服务管理工具" class="headerlink" title="10.7 Apache服务管理工具"></a>10.7 Apache服务管理工具</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">启动D:\Apache24\bin\ApacheMonitor.exe</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-186.png" alt="upload successful"></p><h6 id="10-8-Apache运行账号权限设置"><a href="#10-8-Apache运行账号权限设置" class="headerlink" title="10.8 Apache运行账号权限设置"></a>10.8 Apache运行账号权限设置</h6><p>默认服务 没有权限执行powershell 需要在服务器上面设置登录</p><p><img src="/images/pasted-187.png" alt="upload successful"></p><h5 id="11-其他"><a href="#11-其他" class="headerlink" title="11.其他"></a>11.其他</h5><blockquote><p>ImportError: No system module ‘pywintypes’ (pywintypes27.dll) 错误</p><p>拷贝 Lib\site-packages\pywin32_system32目录下的pywintypes27.dll pythoncom27.dll 至Lib\site-packages\win32\lib目录下即可！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>域账号密码自助-前端DEMO</title>
      <link href="/uncategorized/586407947.html"/>
      <url>/uncategorized/586407947.html</url>
      
        <content type="html"><![CDATA[<p><img src="/images/pasted-167.png" alt="upload successful"><br><a id="more"></a><br><img src="/images/pasted-163.png" alt="upload successful"><br><img src="/images/pasted-164.png" alt="upload successful"><br><img src="/images/pasted-165.png" alt="upload successful"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>域账号密码自助-通知模板</title>
      <link href="/uncategorized/1296339277.html"/>
      <url>/uncategorized/1296339277.html</url>
      
        <content type="html"><![CDATA[<img src="/images/pasted-331.png" class="pull-left"><img src="/images/pasted-332.png" class="pull-right">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>域账号密码自助-后台逻辑</title>
      <link href="/uncategorized/2579722334.html"/>
      <url>/uncategorized/2579722334.html</url>
      
        <content type="html"><![CDATA[<h5 id="密码修改-重置核心类"><a href="#密码修改-重置核心类" class="headerlink" title="密码修改|重置核心类"></a>密码修改|重置核心类</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> pythoncom</span><br><span class="line"><span class="keyword">import</span> win32com.client</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NTUser</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># Uses ADSI to change password under user privileges</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, username)</span>:</span></span><br><span class="line">        <span class="comment"># 初始化</span></span><br><span class="line">        pythoncom.CoInitialize()</span><br><span class="line">        self.adsiNS = win32com.client.Dispatch(<span class="string">'ADsNameSpaces'</span>)</span><br><span class="line">        Userpath = <span class="string">"WinNT://10.105.42.13/"</span> + username + <span class="string">",user"</span></span><br><span class="line">        self.adsNTUser = self.adsiNS.GetObject(<span class="string">""</span>, Userpath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">modify</span><span class="params">(self, old_password, new_password)</span>:</span></span><br><span class="line">        self.adsNTUser.ChangePassword(old_password, new_password)</span><br><span class="line">        <span class="comment"># 释放资源</span></span><br><span class="line">        pythoncom.CoUninitialize()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reset</span><span class="params">(self, new_password)</span>:</span></span><br><span class="line">        self.adsNTUser.SetPassword(new_password)</span><br><span class="line">        <span class="comment"># 释放资源</span></span><br><span class="line">        pythoncom.CoUninitialize()</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="密码修改"><a href="#密码修改" class="headerlink" title="密码修改"></a>密码修改</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdModifyView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>:current_year</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        pwd_modify_form = PwdModifyForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> pwd_modify_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_old = request.POST.get(<span class="string">"pwd_old"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new1 = request.POST.get(<span class="string">"pwd_new1"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new2 = request.POST.get(<span class="string">"pwd_new2"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="comment"># try:</span></span><br><span class="line">            <span class="comment">#     user_profile = UserProfile.objects.get(username=username)</span></span><br><span class="line">            <span class="comment"># except Exception as e:</span></span><br><span class="line">            <span class="comment">#     print e</span></span><br><span class="line">            <span class="comment">#     user_profile = UserProfile()</span></span><br><span class="line">            <span class="keyword">if</span> pwd_new1 != pwd_new2:</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'pwd-modify.html'</span>,&#123;</span><br><span class="line">                    <span class="string">'pwd_new_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                    <span class="string">"msg"</span>: <span class="string">"2次密码输入不一致!"</span>,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    <span class="string">'pwd_modify_form'</span>:pwd_modify_form</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                nt = NTUser(username=username)</span><br><span class="line">                nt.modify(pwd_old, pwd_new1)</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                user_profile.password = make_password(pwd_new1)</span><br><span class="line">                user_profile.save()</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'username'</span>: username,</span><br><span class="line">                    <span class="string">'email'</span>: <span class="string">'&#123;0&#125;@genewiz.com.cn'</span>.format(username),</span><br><span class="line">                    <span class="string">'ip'</span>: ip,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_modify_pwd'</span>):</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">True</span>,</span><br><span class="line">                        user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'密码修改成功'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'pwd-modify-success.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                        <span class="string">'ip'</span>: ip,</span><br><span class="line">                        <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                        <span class="string">"msg"</span>: <span class="string">"成功"</span>,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">except</span> pythoncom.com_error, (hr, msg, exc, arg):</span><br><span class="line">                stderr = exc[<span class="number">2</span>]</span><br><span class="line">            <span class="comment"># cmd = 'Set-ADAccountPassword -Identity &#123;0&#125; -OldPassword (ConvertTo-SecureString -AsPlainText "&#123;1&#125;" -Force) -NewPassword (ConvertTo-SecureString -AsPlainText "&#123;2&#125;" -Force)'.format(username, pwd_old, pwd_new1)</span></span><br><span class="line">            <span class="comment"># p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)</span></span><br><span class="line">            <span class="comment"># stdout, stderr = p.communicate()</span></span><br><span class="line">                <span class="comment"># 释放资源</span></span><br><span class="line">                pythoncom.CoUninitialize()</span><br><span class="line">                <span class="keyword">if</span> stderr:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">'found'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'username_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>: pwd_modify_form,</span><br><span class="line">                            <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">elif</span> <span class="string">'correct'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'旧密码有误,请重新输入!(输错5次,帐号将被锁定!)'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'pwd_old_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>: pwd_modify_form,</span><br><span class="line">                            <span class="string">'msg'</span>: <span class="string">'旧密码有误!'</span>,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">elif</span> <span class="string">'meet'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status = <span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip = ip,</span><br><span class="line">                            username = username,</span><br><span class="line">                            comment = <span class="string">'新密码不满足|复杂性|历史性|要求!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">"msg"</span>: <span class="string">"新密码不满足|复杂性|历史性|要求!"</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">elif</span> <span class="string">'denied'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        cmd = <span class="string">'powershell -command Get-ADUser -Identity %s -Properties lockedout'</span> % username</span><br><span class="line">                        p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">                        stdout, stderr = p.communicate()</span><br><span class="line">                        data_list = stdout.strip().split(<span class="string">'\r\n'</span>)</span><br><span class="line">                        <span class="keyword">while</span> <span class="string">''</span> <span class="keyword">in</span> data_list:</span><br><span class="line">                            data_list.remove(<span class="string">''</span>)</span><br><span class="line">                        data = &#123;&#125;</span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> data_list:</span><br><span class="line">                            temp_list = [i.strip() <span class="keyword">for</span> i <span class="keyword">in</span> i.split(<span class="string">':'</span>)]</span><br><span class="line">                            <span class="keyword">if</span> len(temp_list) == <span class="number">2</span>:</span><br><span class="line">                                k, v = temp_list</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                k = temp_list[<span class="number">0</span>]</span><br><span class="line">                                v = <span class="string">":"</span>.join(temp_list[<span class="number">1</span>:])</span><br><span class="line">                            data[k] = v</span><br><span class="line">                        <span class="keyword">if</span> data[<span class="string">'LockedOut'</span>] == <span class="string">'True'</span>:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=<span class="string">'帐号已被锁定!'</span></span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                                <span class="string">'username_lock_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                                <span class="string">'msg'</span>: <span class="string">'帐号已被锁定!'</span>,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year</span><br><span class="line">                            &#125;)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=<span class="string">'访问被拒绝，请稍后重试!'</span></span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                                <span class="string">'username_lock_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                                <span class="string">'msg'</span>: <span class="string">'访问被拒绝，请稍后重试!'</span>,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year</span><br><span class="line">                            &#125;)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=stderr[:<span class="number">100</span>]</span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">"msg"</span>: <span class="string">"发生未知错误，请联系管理员!"</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                <span class="comment"># else:</span></span><br><span class="line">                <span class="comment">#     user_profile, created = UserProfile.objects.get_or_create(username=username)</span></span><br><span class="line">                <span class="comment">#     user_profile.password = make_password(pwd_new1)</span></span><br><span class="line">                <span class="comment">#     user_profile.save()</span></span><br><span class="line">                <span class="comment">#     data = &#123;</span></span><br><span class="line">                <span class="comment">#         'username': username,</span></span><br><span class="line">                <span class="comment">#         'email': '&#123;0&#125;@genewiz.com.cn'.format(username),</span></span><br><span class="line">                <span class="comment">#         'ip': ip,</span></span><br><span class="line">                <span class="comment">#         'current_year': current_year</span></span><br><span class="line">                <span class="comment">#     &#125;</span></span><br><span class="line">                <span class="comment">#     if SendMail(data, send_type='user_modify_pwd'):</span></span><br><span class="line">                <span class="comment">#         UserActionLog.objects.create(</span></span><br><span class="line">                <span class="comment">#             status=True,</span></span><br><span class="line">                <span class="comment">#             user_type='user_modify_pwd',</span></span><br><span class="line">                <span class="comment">#             client_ip=ip,</span></span><br><span class="line">                <span class="comment">#             username=username,</span></span><br><span class="line">                <span class="comment">#             comment='密码修改成功'</span></span><br><span class="line">                <span class="comment">#         )</span></span><br><span class="line">                <span class="comment">#         return render(request, 'pwd-modify-success.html', &#123;</span></span><br><span class="line">                <span class="comment">#             'pwd_modify_form':pwd_modify_form,</span></span><br><span class="line">                <span class="comment">#             'ip': ip,</span></span><br><span class="line">                <span class="comment">#             'time': time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()),</span></span><br><span class="line">                <span class="comment">#             "msg": "成功",</span></span><br><span class="line">                <span class="comment">#             'current_year': current_year</span></span><br><span class="line">                <span class="comment">#         &#125;)</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                <span class="string">'pwd_modify_form'</span>:pwd_modify_form</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdResetView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        username = request.GET.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">if</span> username:</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status = <span class="literal">False</span>,</span><br><span class="line">                        user_type = <span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                        client_ip = ip,</span><br><span class="line">                        username = username,</span><br><span class="line">                        comment = <span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"pwd-reset.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'username'</span>:username,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> user_profile.rescue_email:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'pwd-reset2.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'pwd-reset3.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset.html"</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        pwd_reset_form = PwdResetForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> pwd_reset_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">            reset_code = request.POST.get(<span class="string">"reset_code"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new1 = request.POST.get(<span class="string">"pwd_new1"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new2 = request.POST.get(<span class="string">"pwd_new2"</span>, <span class="string">""</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">if</span> pwd_new1 != pwd_new2:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'2次密码输入不一致!'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request,<span class="string">'pwd-reset3.html'</span>,&#123;</span><br><span class="line">                    <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                    <span class="string">"msg"</span>: <span class="string">"2次密码输入不一致!"</span>,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    <span class="string">'pwd_reset_form'</span>: pwd_reset_form,</span><br><span class="line">                    <span class="string">'user_profile'</span>:user_profile</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                email_verify_record = EmailVerifyRecord.objects.get(code=reset_code,email=email, send_type=<span class="string">'user_reset_pwd_code'</span>,user=user_profile, is_used=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'重置码有误或已使用过!'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>, &#123;</span><br><span class="line">                    <span class="string">'pwd_reset_code_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                    <span class="string">"msg"</span>: <span class="string">"重置码有误或已使用过!"</span>,</span><br><span class="line">                    <span class="string">'pwd_reset_form'</span>:pwd_reset_form,</span><br><span class="line">                    <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">if</span> email_verify_record:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    nt = NTUser(username=username)</span><br><span class="line">                    nt.reset(pwd_new1)</span><br><span class="line">                    data = &#123;</span><br><span class="line">                        <span class="string">'username'</span>: username,</span><br><span class="line">                        <span class="string">'email'</span>: <span class="string">'&#123;0&#125;@genewiz.com.cn'</span>.format(username),</span><br><span class="line">                        <span class="string">'ip'</span>: ip,</span><br><span class="line">                        <span class="string">'pwd_new1'</span>: pwd_new1,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_reset_pwd'</span>):</span><br><span class="line">                        email_verify_record.is_used = <span class="literal">True</span></span><br><span class="line">                        email_verify_record.save()</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">True</span>,</span><br><span class="line">                            user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'密码重置成功'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">'pwd-reset-success.html'</span>, &#123;</span><br><span class="line">                            <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                            <span class="string">'pwd_reset_form'</span>: pwd_reset_form,</span><br><span class="line">                            <span class="string">'ip'</span>: ip,</span><br><span class="line">                            <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                            <span class="string">"msg"</span>: <span class="string">"成功"</span>,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                <span class="comment"># cmd = 'Set-ADAccountPassword -identity "&#123;0&#125;" -Reset -NewPassword (ConvertTo-SecureString -AsPlainText "&#123;1&#125;" -Force)'.format(username, pwd_new1)</span></span><br><span class="line">                <span class="comment"># x = PxPowerShell()</span></span><br><span class="line">                <span class="comment"># x.start_process()</span></span><br><span class="line">                <span class="comment"># result = x.run(cmd)</span></span><br><span class="line">                <span class="comment"># x.stop_process()</span></span><br><span class="line">                <span class="comment"># p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)</span></span><br><span class="line">                <span class="comment"># stdout, stderr = p.communicate()</span></span><br><span class="line">                <span class="keyword">except</span> pythoncom.com_error, (hr, msg, exc, arg):</span><br><span class="line">                    stderr = exc[<span class="number">2</span>]</span><br><span class="line">                    <span class="comment"># 释放资源</span></span><br><span class="line">                    pythoncom.CoUninitialize()</span><br><span class="line">                    <span class="keyword">if</span> stderr:</span><br><span class="line">                        <span class="keyword">if</span> <span class="string">'meet'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=<span class="string">'新密码不满足|复杂性|历史性|要求!'</span></span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>,&#123;</span><br><span class="line">                                <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">"msg"</span>: <span class="string">"新密码不满足|复杂性|历史性|要求!"</span>,</span><br><span class="line">                                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                                <span class="string">'pwd_reset_form'</span>:pwd_reset_form</span><br><span class="line">                            &#125;)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=stderr[:<span class="number">100</span>]</span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>,&#123;</span><br><span class="line">                                <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">"msg"</span>: <span class="string">"发生未知错误，请联系管理员!"</span>,</span><br><span class="line">                                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                                <span class="string">'pwd_reset_form'</span>:pwd_reset_form</span><br><span class="line">                            &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            username = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>, &#123;</span><br><span class="line">                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                <span class="string">'pwd_reset_form'</span>: pwd_reset_form,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="密码重置码"><a href="#密码重置码" class="headerlink" title="密码重置码"></a>密码重置码</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdResetCodeView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        username = request.GET.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">        user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">        email = user_profile.rescue_email</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: username,</span><br><span class="line">            <span class="string">'email'</span>: email,</span><br><span class="line">            <span class="string">'ip'</span>: ip,</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_reset_pwd_code'</span>):</span><br><span class="line">            UserActionLog.objects.create(</span><br><span class="line">                status=<span class="literal">True</span>,</span><br><span class="line">                user_type = <span class="string">'user_reset_pwd_code'</span>,</span><br><span class="line">                client_ip=ip,</span><br><span class="line">                username=username,</span><br><span class="line">                comment=<span class="string">'发送密码重置码'</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(&#123;<span class="string">'status'</span>:<span class="string">'success'</span>, <span class="string">'msg'</span>:<span class="string">'重置码发送成功，请查收!'</span>&#125;), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="邮箱绑定"><a href="#邮箱绑定" class="headerlink" title="邮箱绑定"></a>邮箱绑定</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailBindView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'email-bind-index.html'</span>, &#123;</span><br><span class="line">            <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">            <span class="string">'image_url'</span>: image_url,</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        email_bind_form = EmailBindForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> email_bind_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">            pwd = request.POST.get(<span class="string">'pwd'</span>, <span class="string">''</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status = <span class="literal">False</span>,</span><br><span class="line">                        user_type = <span class="string">'user_bind_email'</span>,</span><br><span class="line">                        client_ip = ip,</span><br><span class="line">                        username = username,</span><br><span class="line">                        comment = <span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"email-bind-index.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'email_bind_form'</span>: email_bind_form,</span><br><span class="line">                        <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                        <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                user = authenticate(username=username, password=pwd)</span><br><span class="line">                <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    <span class="keyword">if</span> user_profile.rescue_email:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_bind_email'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'外部邮箱已绑定，请不要重复绑定!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">'email-bind-fail.html'</span>, &#123;</span><br><span class="line">                            <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                            <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        user_profile.rescue_email = email</span><br><span class="line">                        user_profile.save()</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">True</span>,</span><br><span class="line">                            user_type=<span class="string">'user_bind_email'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'外部邮箱绑定成功!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">'email-bind-success.html'</span>, &#123;</span><br><span class="line">                            <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                            <span class="string">'email_bind_form'</span>: email_bind_form,</span><br><span class="line">                            <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                            <span class="string">'ip'</span>: ip</span><br><span class="line">                        &#125;)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'email-bind-index.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'pwd_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'密码错误！'</span>,</span><br><span class="line">                        <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                        <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                        <span class="string">'email_bind_form'</span>: email_bind_form,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-bind-index.html'</span>, &#123;</span><br><span class="line">                <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                <span class="string">'email_bind_form'</span>:email_bind_form,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="邮箱修改"><a href="#邮箱修改" class="headerlink" title="邮箱修改"></a>邮箱修改</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailModifyView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        username = request.GET.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> username:</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">False</span>,</span><br><span class="line">                        user_type = <span class="string">'user_modify_email'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"email-modify-index.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'username'</span>: username,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                <span class="keyword">if</span> user_profile.rescue_email:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'email-modify-submit.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    &#125;)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span>  render(request, <span class="string">'email-modify-fail.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-modify-index.html'</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        email_modify_form = EmailModifyForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> email_modify_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            email_new = request.POST.get(<span class="string">'email_new'</span>, <span class="string">''</span>)</span><br><span class="line">            reset_code = request.POST.get(<span class="string">"reset_code"</span>, <span class="string">""</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                email_verify_record = EmailVerifyRecord.objects.get(code=reset_code,email=email, send_type=<span class="string">'user_reset_email_code'</span>,user=user_profile, is_used=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_modify_email'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'重置码有误或已使用过!'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"email-modify-submit.html"</span>, &#123;</span><br><span class="line">                <span class="string">'email_reset_code_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                <span class="string">"msg"</span>: <span class="string">"重置码有误或已使用过!"</span>,</span><br><span class="line">                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                <span class="string">'email_modify_form'</span>:email_modify_form,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br><span class="line">            user_profile.rescue_email = email_new</span><br><span class="line">            user_profile.save()</span><br><span class="line">            email_verify_record.is_used = <span class="literal">True</span></span><br><span class="line">            email_verify_record.save()</span><br><span class="line">            UserActionLog.objects.create(</span><br><span class="line">                status=<span class="literal">True</span>,</span><br><span class="line">                user_type=<span class="string">'user_modify_email'</span>,</span><br><span class="line">                client_ip=ip,</span><br><span class="line">                username=username,</span><br><span class="line">                comment=<span class="string">'邮箱修改成功-'</span> + email_new</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-modify-success.html'</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                <span class="string">'email_modify_form'</span>:email_modify_form,</span><br><span class="line">                <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                <span class="string">'ip'</span>: ip</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            username = request.POST.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-modify-submit.html'</span>,&#123;</span><br><span class="line">                <span class="string">'email_modify_form'</span>:email_modify_form,</span><br><span class="line">                <span class="string">'user_profile'</span>:user_profile,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="用户解锁"><a href="#用户解锁" class="headerlink" title="用户解锁"></a>用户解锁</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserUnlockView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        username = request.GET.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> username:</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">False</span>,</span><br><span class="line">                        user_type=<span class="string">'user_unlock'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"user-unlock-index.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'username'</span>: username,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># try:</span></span><br><span class="line">                <span class="comment">#     user_profile = UserProfile.objects.get(username=username)</span></span><br><span class="line">                <span class="comment"># except Exception as e:</span></span><br><span class="line">                <span class="comment">#     print e</span></span><br><span class="line">                <span class="comment">#     user_profile = UserProfile()</span></span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'user-unlock-submit.html'</span>, &#123;</span><br><span class="line">                    <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                    <span class="string">'image_url'</span>: image_url</span><br><span class="line">                &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"user-unlock-index.html"</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip =  request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        user_unlock_form = UserUnlockForm(request.POST)</span><br><span class="line">        username = request.POST.get(<span class="string">"username"</span>, <span class="string">''</span>)</span><br><span class="line">        user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">        <span class="keyword">if</span> user_unlock_form.is_valid():</span><br><span class="line">            cmd = <span class="string">'powershell -Command Unlock-ADAccount -Identity %s'</span> % username</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_unlock'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'帐号解锁失败'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'user-unlock-success.html'</span>, &#123;</span><br><span class="line">                    <span class="string">'msg'</span>:<span class="string">'解锁失败'</span>,</span><br><span class="line">                    <span class="string">'username'</span>:username,</span><br><span class="line">                    <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                    <span class="string">'ip'</span>:ip</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'username'</span>: username,</span><br><span class="line">                    <span class="string">'email'</span>: <span class="string">'&#123;0&#125;@genewiz.com.cn'</span>.format(username),</span><br><span class="line">                    <span class="string">'ip'</span>: ip,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_unlock'</span>):</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">True</span>,</span><br><span class="line">                        user_type=<span class="string">'user_unlock'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'帐号解锁成功'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'user-unlock-success.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'msg'</span>:<span class="string">'解锁成功'</span>,</span><br><span class="line">                        <span class="string">'username'</span>:username,</span><br><span class="line">                        <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                        <span class="string">'ip'</span>:ip</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'user-unlock-submit.html'</span>, &#123;</span><br><span class="line">                <span class="string">'user_unlock_form'</span>: user_unlock_form,</span><br><span class="line">                <span class="string">'user_profile'</span>:user_profile,</span><br><span class="line">                <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line"></span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="邮箱重置码"><a href="#邮箱重置码" class="headerlink" title="邮箱重置码"></a>邮箱重置码</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailResetCodeView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        username = request.GET.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">        user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">        email = user_profile.rescue_email</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: username,</span><br><span class="line">            <span class="string">'email'</span>: email,</span><br><span class="line">            <span class="string">'ip'</span>: ip,</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_reset_email_code'</span>):</span><br><span class="line">            UserActionLog.objects.create(</span><br><span class="line">                status=<span class="literal">True</span>,</span><br><span class="line">                user_type=<span class="string">'user_reset_email_code'</span>,</span><br><span class="line">                client_ip=ip,</span><br><span class="line">                username=username,</span><br><span class="line">                comment=<span class="string">'发送邮箱验证码成功-'</span> + email</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(&#123;<span class="string">'status'</span>:<span class="string">'success'</span>, <span class="string">'msg'</span>:<span class="string">'邮箱重置码发送成功，请查收!'</span>&#125;), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>域账号密码自助-相关表结构设计</title>
      <link href="/uncategorized/3852621189.html"/>
      <url>/uncategorized/3852621189.html</url>
      
        <content type="html"><![CDATA[<h6 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserProfile</span><span class="params">(AbstractUser)</span>:</span></span><br><span class="line">    company = (</span><br><span class="line">        (<span class="string">'suzhou'</span>, <span class="string">u'苏州'</span>),</span><br><span class="line">        (<span class="string">'beijing'</span>, <span class="string">u'北京'</span>),</span><br><span class="line">        (<span class="string">'tianjing'</span>, <span class="string">u"天津"</span>),</span><br><span class="line">        (<span class="string">'guangzhou'</span>, <span class="string">u'广州'</span>),</span><br><span class="line">        (<span class="string">'nanjing'</span>, <span class="string">u"南京"</span>),</span><br><span class="line">        (<span class="string">'usa'</span>, <span class="string">u"美国"</span>),</span><br><span class="line">        (<span class="string">'lizhi'</span>, <span class="string">u"离职"</span>)</span><br><span class="line">    )</span><br><span class="line">    uid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'用户UID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'用户SID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    dn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'DN名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>,)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"邮箱"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    rescue_email = models.EmailField(max_length=<span class="number">50</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u"救援邮箱"</span>)</span><br><span class="line">    is_enabled = models.BooleanField(default=<span class="literal">True</span>, verbose_name=<span class="string">u'帐号启用'</span>)</span><br><span class="line">    is_lockedout = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u'帐号锁定'</span>)</span><br><span class="line">    is_dial_in = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u'VPN权限'</span>)</span><br><span class="line">    gender = models.CharField(max_length=<span class="number">10</span>, choices=((<span class="string">"male"</span>, <span class="string">"男"</span>), (<span class="string">"female"</span>, <span class="string">"女"</span>)), default=<span class="string">"male"</span>, verbose_name=<span class="string">u'性别'</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'联系方式'</span>)</span><br><span class="line">    department = models.CharField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'部门'</span>)</span><br><span class="line">    company = models.CharField(choices=company, max_length=<span class="number">50</span>, null=<span class="literal">True</span>,blank=<span class="literal">True</span>, help_text=<span class="string">u'所属公司'</span>, verbose_name=<span class="string">u'所属公司'</span>)</span><br><span class="line">    birday = models.DateField(null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u"生日"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"image/%Y/%m/%m"</span>, blank=<span class="literal">True</span>, default=<span class="string">u"image/default.png"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    check = models.URLField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'在线检查'</span>)</span><br><span class="line">    quit_time = models.DateField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'离职时间'</span>)</span><br><span class="line">    created_time = models.CharField(max_length=<span class="number">100</span>,verbose_name=<span class="string">u"创建时间"</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>,)</span><br><span class="line">    pwd_last_set_time = models.CharField(max_length=<span class="number">100</span>,verbose_name=<span class="string">u"密码最后一次设置时间"</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>,)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_groups</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.usergroup_set.all()</span><br><span class="line">    list_groups.short_description = <span class="string">u'属组信息'</span></span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserGroup</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'组名'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    uid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'组UID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'组SID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gc = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'GC'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gs = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'GS'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    dn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'DN'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    members = models.ManyToManyField(UserProfile)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户组信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.dn</span><br></pre></td></tr></table></figure><h6 id="邮箱验证码"><a href="#邮箱验证码" class="headerlink" title="邮箱验证码"></a>邮箱验证码</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecord</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    action_type = (</span><br><span class="line">        (<span class="string">"user_reset_pwd_code"</span>, <span class="string">u"重置密码"</span>),</span><br><span class="line">        (<span class="string">"email_modify"</span>, <span class="string">u"修改邮箱"</span>),</span><br><span class="line">        (<span class="string">'user_reset_email_code'</span>, <span class="string">u'重置邮箱'</span>)</span><br><span class="line">    )</span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>, default=<span class="string">''</span>)</span><br><span class="line">    code = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"验证码"</span>)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"邮箱"</span>)</span><br><span class="line">    is_used= models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否使用"</span>)</span><br><span class="line">    send_type = models.CharField(choices=action_type, max_length=<span class="number">100</span>, verbose_name=<span class="string">u"验证码类型"</span>)</span><br><span class="line">    send_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"发送时间"</span>)</span><br><span class="line">    <span class="comment"># datetime.now() model编译时间生成默认时间</span></span><br><span class="line">    <span class="comment"># datetime.now classs实例化时生成的时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"邮箱验证码"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;0&#125;(&#123;1&#125;)'</span>.format(self.code, self.email)</span><br></pre></td></tr></table></figure><h5 id="用户日志"><a href="#用户日志" class="headerlink" title="用户日志"></a>用户日志</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserActionLog</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user_type = (</span><br><span class="line">        (<span class="string">"user_modify_pwd"</span>, <span class="string">u"修改密码"</span>),</span><br><span class="line">        (<span class="string">"user_reset_pwd"</span>, <span class="string">u"重置密码"</span>),</span><br><span class="line">        (<span class="string">"user_unlock"</span>, <span class="string">u"账号解锁"</span>),</span><br><span class="line">        (<span class="string">"user_bind_email"</span>, <span class="string">u"绑定外部邮箱"</span>),</span><br><span class="line">        (<span class="string">"user_modify_email"</span>, <span class="string">u"修改外部邮箱"</span>),</span><br><span class="line">        (<span class="string">'user_reset_pwd_code'</span>, <span class="string">u'密码重置码'</span>),</span><br><span class="line">        (<span class="string">'user_reset_email_code'</span>, <span class="string">u'邮箱重置码'</span>)</span><br><span class="line">    )</span><br><span class="line">    status = models.BooleanField(verbose_name=<span class="string">u'状态'</span>, default=<span class="literal">True</span>)</span><br><span class="line">    user_type = models.CharField(verbose_name=<span class="string">u'类型'</span>, max_length=<span class="number">100</span>, choices=user_type)</span><br><span class="line">    client_ip = models.CharField(verbose_name=<span class="string">'客户端IP'</span>,max_length=<span class="number">128</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    username = models.CharField(verbose_name=<span class="string">'用户'</span>,max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    comment = models.CharField(verbose_name=<span class="string">'备注'</span>,max_length=<span class="number">1000</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    add_time = models.DateTimeField(verbose_name=<span class="string">u"添加时间"</span>, default=datetime.now)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户操作日志"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdModifySuccess</span><span class="params">(UserActionLog)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"密码修改成功"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdResetSuccess</span><span class="params">(UserActionLog)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"密码重置成功"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserUnlockSuccess</span><span class="params">(UserActionLog)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"账号解锁成功"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdmActionLog</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    adm_type = (</span><br><span class="line">        (<span class="string">"adm_update"</span>, <span class="string">u"更新信息"</span>),</span><br><span class="line">        (<span class="string">"adm_disable"</span>, <span class="string">u"禁用帐号"</span>),</span><br><span class="line">        (<span class="string">"adm_disable_lizhi"</span>, <span class="string">u"禁用帐号[离职]"</span>),</span><br><span class="line">        (<span class="string">"adm_enable"</span>, <span class="string">u"启用帐号"</span>),</span><br><span class="line">        (<span class="string">"adm_unlock"</span>, <span class="string">u"解锁帐号"</span>),</span><br><span class="line">        (<span class="string">"adm_reset_pwd"</span>, <span class="string">u"重置密码"</span>),</span><br><span class="line">        (<span class="string">"adm_enable_vpn"</span>, <span class="string">u"启用VPN"</span>),</span><br><span class="line">        (<span class="string">"adm_disable_vpn"</span>, <span class="string">u"禁用VPN"</span>)</span><br><span class="line">    )</span><br><span class="line">    status = models.BooleanField(verbose_name=<span class="string">u'状态'</span>, default=<span class="literal">True</span>)</span><br><span class="line">    adm_type= models.CharField(verbose_name=<span class="string">u'类型'</span>, max_length=<span class="number">100</span>, choices=adm_type)</span><br><span class="line">    client_ip = models.CharField(verbose_name=<span class="string">'客户端IP'</span>, max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    username = models.CharField(verbose_name=<span class="string">'用户'</span>,max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    comment = models.CharField(verbose_name=<span class="string">'备注'</span>,max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sa = models.CharField(verbose_name=<span class="string">'操作用户'</span>, max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"管理员操作日志"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端相关</title>
      <link href="/uncategorized/1656965246.html"/>
      <url>/uncategorized/1656965246.html</url>
      
        <content type="html"><![CDATA[<p>响应式布局<br>meta:vp</p><p>IE:<br>meta:compat</p><p>col-xs-<em><br>col-sm-</em><br>col-md-<em><br>col-lg-</em></p><p> col-<em>-push-</em><br>  col-<em>-pull-</em></p><p>  <div class="clearfix"></div> 清除浮动<br>  col-<em>-offset-</em><br>  hidden-xs<br>  visible-xs</p><p>  导航栏目<br>  navbar-fixed-bottom<br>  navbar-fixed-top<br>  navbar-static-top</p><p><span class="exturl" data-url="aHR0cHM6Ly9wbGFjZWhvbGRlci5jb20v" title="https://placeholder.com/">https://placeholder.com/<i class="fa fa-external-link"></i></span><br>google-code-prettify</p><p>cdn加速<br>cdn.code.baidu.com</p><p><span class="exturl" data-url="aHR0cDovL3BsdWdpbnMuanF1ZXJ5LmNvbS9zaW5nbGVwYWdlbmF2Lw==" title="http://plugins.jquery.com/singlepagenav/">http://plugins.jquery.com/singlepagenav/<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9kYW5lZGVuLmdpdGh1Yi5pby9hbmltYXRlLmNzcy8=" title="https://daneden.github.io/animate.css/">https://daneden.github.io/animate.css/<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTExMjcwMTkvYXJ0aWNsZS9kZXRhaWxzLzc3MTY1MDYy" title="https://blog.csdn.net/u011127019/article/details/77165062">https://blog.csdn.net/u011127019/article/details/77165062<i class="fa fa-external-link"></i></span></p><p>chartjs.org</p><p>bootstrap模版<br><span class="exturl" data-url="aHR0cHM6Ly9ib290c3dhdGNoLmNvbQ==" title="https://bootswatch.com">https://bootswatch.com<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9pY29tb29uLmlvLw==" title="https://icomoon.io/">https://icomoon.io/<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Django项目实战</title>
      <link href="/Django/3085239228.html"/>
      <url>/Django/3085239228.html</url>
      
        <content type="html"><![CDATA[<p>Django app</p><ul><li>users-用户管理</li><li>course-课程管理</li><li>organization-机构和教师管理</li><li>operation-用户操作管理</li></ul><a id="more"></a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Users\jianhu.yong&gt;mkvirtualenv mxonline</span><br><span class="line">New python executable <span class="keyword">in</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe</span><br><span class="line">Installing setuptools, pip, wheel...done.</span><br><span class="line"></span><br><span class="line">(mxonline) C:\Users\jianhu.yong&gt;</span><br><span class="line">(mxonline) C:\Users\jianhu.yong&gt;pip install django==<span class="number">1.9</span></span><br><span class="line">Collecting django==<span class="number">1.9</span></span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/ea/<span class="number">9</span>b/b5a6360b3dfcd88d4bad70f59da26cbde4bdec395a31bb26dc840e806a50/Django<span class="number">-1.9</span>-py2.py3-none-any.whl (<span class="number">6.6</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">6.6</span>MB <span class="number">79</span>kB/s</span><br><span class="line">Installing collected packages: django</span><br><span class="line">Successfully installed django<span class="number">-1.9</span></span><br><span class="line"></span><br><span class="line">(mxonline) C:\Users\jianhu.yong&gt;cd Downloads</span><br><span class="line">(mxonline) C:\Users\jianhu.yong\Downloads&gt;pip install MySQL_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Processing c:\users\jianhu.yong\downloads\mysql_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Installing collected packages: MySQL-python</span><br><span class="line">Successfully installed MySQL-python<span class="number">-1.2</span><span class="number">.5</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-116.png" alt="upload successful"><br><img src="/images/pasted-117.png" alt="upload successful"><br><img src="/images/pasted-118.png" alt="upload successful"></p><p>数据库配置<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'mxonline'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'127.0.0.1'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>新建数据库</p><p><img src="/images/pasted-119.png" alt="upload successful"></p><p>生成默认数据表<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">makemigrations</span></span><br><span class="line"><span class="attribute">migtate</span></span><br></pre></td></tr></table></figure></p><p>userapp model设计<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; startapp users</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp users C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\tests.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\migrations\__init__.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-120.png" alt="upload successful"><br>默认的user表不满足我们的需求，因此需要定制user表<br>自定义userprofile覆盖默认user表</p><figure class="highlight python"><figcaption><span>users.model</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserProfile</span><span class="params">(AbstractUser)</span>:</span></span><br><span class="line">    nick_name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u'昵称'</span>, default=<span class="string">""</span>)</span><br><span class="line">    birday = models.DateField(verbose_name=<span class="string">u"生日"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gender = models.CharField(max_length=<span class="number">5</span>, choices=((<span class="string">"male"</span>, <span class="string">u"男"</span>),(<span class="string">"female"</span>, <span class="string">u"女"</span>)), default=<span class="string">"female"</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, default=<span class="string">u""</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"image/%Y/%m/%m"</span>,default=<span class="string">u"image/default.png"</span>, max_length=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'users'</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">AUTH_USER_MODEL = <span class="string">"users.UserProfile"</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-121.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(mxonline) C:\Users\jianhu.yong\Downloads&gt;pip install pillow</span><br><span class="line">Collecting pillow</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">48</span>/<span class="number">91</span>/f058672c494e186dc900bb6253e8cbde3307da17aed0a2d1ebcfb80ab766/Pillow<span class="number">-5.2</span><span class="number">.0</span>-cp27-cp27m-win_amd64.whl (<span class="number">1.5</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">1.5</span>MB <span class="number">2.4</span>MB/s</span><br><span class="line">Installing collected packages: pillow</span><br><span class="line">Successfully installed pillow<span class="number">-5.2</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-122.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations users</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations users C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'users'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model UserProfile</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; migrate users</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate users C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: users</span><br><span class="line">Running migrations:</span><br><span class="line">  Rendering model states... DONE</span><br><span class="line">  Applying users<span class="number">.0001</span>_initial... OK</span><br><span class="line">The following content types are stale <span class="keyword">and</span> need to be deleted:</span><br><span class="line"></span><br><span class="line">    auth | user</span><br><span class="line"></span><br><span class="line">Any objects related to these content types by a foreign key will also</span><br><span class="line">be deleted. Are you sure you want to delete these content types?</span><br><span class="line">If yo<span class="string">u're unsure, answer '</span>no<span class="string">'.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type '</span>yes<span class="string">' to continue, or '</span>no<span class="string">' to cancel:  yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Process finished with exit code 0</span></span><br></pre></td></tr></table></figure><p>app设计需要避免循环引用(a调用b，b调用a，最后ab都无法执行)<br><img src="/images/pasted-123.png" alt="upload successful"><br><img src="/images/pasted-124.png" alt="upload successful"></p><p>EmailVerifyRecord邮箱验证码设计<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecord</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    code = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"验证码"</span>)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"邮箱"</span>)</span><br><span class="line">    send_type = models.CharField(choices=((<span class="string">"register"</span>, <span class="string">u"注册"</span>),(<span class="string">"forget"</span>, <span class="string">u"找回密码"</span>)), max_length=<span class="number">10</span>)</span><br><span class="line">    send_time = models.DateTimeField(default=datetime.now)</span><br><span class="line">    <span class="comment"># datetime.now() model编译时间生成默认时间</span></span><br><span class="line">    <span class="comment"># datetime.now classs实例化时生成的时间</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"邮箱验证码"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">```        </span><br><span class="line">PageBanner轮播图</span><br><span class="line">``` python</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Banner</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    title =  models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"标题"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"banner/%Y/%m/"</span>, verbose_name=<span class="string">u"轮播图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    url = models.URLField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"访问地址"</span>)</span><br><span class="line">    index = models.IntegerField(default=<span class="number">100</span>,verbose_name=<span class="string">u"顺序"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"轮播图"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">```        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">courses models设计：</span><br><span class="line">新建app</span><br><span class="line"></span><br><span class="line">- courses课程基本信息</span><br><span class="line">- lesson 章节信息</span><br><span class="line">- video 视频信息</span><br><span class="line">- courseResouce 课程资源</span><br><span class="line"></span><br><span class="line">``` python models.py</span><br><span class="line"><span class="comment"># conding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程描述"</span>)</span><br><span class="line">    detail = models.TextField(verbose_name=<span class="string">u"课程详情"</span>)</span><br><span class="line">    <span class="comment"># TextField不限制max_length</span></span><br><span class="line">    defree = models.CharField(choices=((<span class="string">"cj"</span>, <span class="string">u"初级"</span>),(<span class="string">"zj"</span>, <span class="string">u"中级"</span>),(<span class="string">"bj"</span>, <span class="string">u"高级"</span>)), max_length=<span class="number">2</span>)</span><br><span class="line">    learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长（分钟数）"</span>)</span><br><span class="line">    students= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习人数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏人数"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"courses/%y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    click_nums = models.ImageField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lesson</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span> , verbose_name=<span class="string">u"章节名"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"章节"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Video</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    lesson = models.ForeignKey(Lesson, verbose_name=<span class="string">u"章节"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span> , verbose_name=<span class="string">u"视频名"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"视频"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseResource</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span> , verbose_name=<span class="string">u"名称"</span>)</span><br><span class="line">    download = models.FileField(upload_to=<span class="string">"course/resourse/%Y/%m"</span>, verbose_name=<span class="string">u"资源文件"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程资源"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; startapp organization</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp organization C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\tests.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\migrations\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\__init__.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>CourseOrg 课程机构基本信息</li><li>Teacher 教师基本信息</li><li>CityDict 城市信息</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CityDict</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"城市"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"描述"</span>)</span><br><span class="line">    add_time= models.DateTimeField(default=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"城市"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseOrg</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"机构名称"</span>)</span><br><span class="line">    desc = models.TextField(verbose_name=<span class="string">u"机构描述"</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏数"</span>)</span><br><span class="line">    image= models.ImageField(upload_to=<span class="string">"org/%Y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">150</span>, verbose_name=<span class="string">u"机构地址"</span>)</span><br><span class="line">    city = models.ForeignKey(CityDict, verbose_name=<span class="string">u"所在城市"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程机构"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    org =  models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"所属机构"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"教师名"</span>)</span><br><span class="line">    work_years= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"工作年限"</span>)</span><br><span class="line">    work_company = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"就职公司"</span>)</span><br><span class="line">    work_position = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"公司职位"</span>)</span><br><span class="line">    points = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"教学特点"</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    fav_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏数"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"教师"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">```        </span><br><span class="line"></span><br><span class="line">operation app设计</span><br><span class="line"></span><br><span class="line">- UserAsk 用户咨询</span><br><span class="line">- CourseComments 用户评论</span><br><span class="line">- UserFavorite 用户收藏</span><br><span class="line">- UserMessage 用户消息</span><br><span class="line">- UserCourse 用户学习的课程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">``` python</span><br><span class="line">manage.py@MxOnline &gt; startapp operation</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp operation C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\migrations\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\tests.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> users.models <span class="keyword">import</span> UserProfile</span><br><span class="line"><span class="keyword">from</span> courses.models <span class="keyword">import</span>  Course</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAsk</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"姓名"</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, verbose_name=<span class="string">u"手机"</span>)</span><br><span class="line">    course_name= models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    add_time= models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户咨询"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseComments</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''课程评论'''</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    comments = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"评论"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程评论"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFavorite</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    fav_id = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"数据ID"</span>)</span><br><span class="line">    fav_type= models.IntegerField(choices=((<span class="number">1</span>,<span class="string">"课程"</span>), (<span class="number">2</span>,<span class="string">"课程机构"</span>), (<span class="number">3</span>, <span class="string">"讲师"</span>)), default=<span class="number">1</span>, verbose_name=<span class="string">u"收藏类型"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户收藏"</span></span><br><span class="line">        verbose_name_plural =verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>   <span class="title">UserMessage</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"接收用户"</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>, verbose_name=<span class="string">u"消息内容"</span>)</span><br><span class="line">    has_read = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否已读"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户消息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserCourse</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p>添加至install apps settings.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'courses'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model Course</span><br><span class="line">    - Create model CourseResource</span><br><span class="line">    - Create model Lesson</span><br><span class="line">    - Create model Video</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'operation'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model CourseComments</span><br><span class="line">    - Create model UserAsk</span><br><span class="line">    - Create model UserCourse</span><br><span class="line">    - Create model UserFavorite</span><br><span class="line">    - Create model UserMessage</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'users'</span>:</span><br><span class="line">  <span class="number">0002</span>_banner_emailverifyrecord.py:</span><br><span class="line">    - Create model Banner</span><br><span class="line">    - Create model EmailVerifyRecord</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'organization'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model CityDict</span><br><span class="line">    - Create model CourseOrg</span><br><span class="line">    - Create model Teacher</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\migrations\<span class="number">0002</span>_banner_emailverifyrecord.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\courses\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p>新建apps包统一管理app</p><p><img src="/images/pasted-125.png" alt="upload successful"></p><p><img src="/images/pasted-126.png" alt="upload successful"></p><p><img src="/images/pasted-127.png" alt="upload successful"></p><p>默认打钩，会在导入模块内容之前加入apps.xxx</p><p><img src="/images/pasted-128.png" alt="upload successful"><br>通过设置解决import出错问题</p><p>但是python 运行会提示模块找不到错误</p><p>settings.py</p><p>后台管理系统</p><ul><li>权限管理</li><li>少前端样式</li><li>快速开发</li></ul><p><span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMTo4MDAwL2FkbWlu" title="http://127.0.0.1:8000/admin">http://127.0.0.1:8000/admin<i class="fa fa-external-link"></i></span></p><p>创建diango admin后台用户出错<br><img src="/images/pasted-129.png" alt="upload successful"><br><img src="/images/pasted-130.png" alt="upload successful"></p><p>重新修改下即可！</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; createsuperuser</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> createsuperuser C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Username:  admin</span><br><span class="line">Email address:  test@qq.com</span><br><span class="line">Warning: Password input may be echoed.</span><br><span class="line">Password:  admin123</span><br><span class="line">Warning: Password input may be echoed.</span><br><span class="line">Password (again):  admin123</span><br><span class="line">Superuser created successfully.</span><br></pre></td></tr></table></figure><p>修改django admin修改为中文</p><p>settings.py<br><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#需要改成False，否侧django在数据库中存的时间为UTC国际时间！</span></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br></pre></td></tr></table></figure></p><p>xadmin设置</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(mxonline) C:\Users\jianhu.yong\PycharmProjects\MxOnline&gt;pip install xadmin</span><br><span class="line">Collecting xadmin</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">1</span>d/e9/<span class="number">2</span>ac160c532d0d462142fa90aa86a0e317295e8d86fa4caf84d04f6e24c49/xadmin<span class="number">-0.6</span><span class="number">.1</span>.tar.gz (<span class="number">1.0</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">1.0</span>MB <span class="number">19</span>kB/s</span><br><span class="line">Requirement already satisfied: setuptools <span class="keyword">in</span> c:\users\jianhu.yong\envs\mxonline\lib\site-packages (<span class="keyword">from</span> xadmin) (<span class="number">39.2</span><span class="number">.0</span>)</span><br><span class="line">Requirement already satisfied: django&lt;<span class="number">2.0</span><span class="number">.0</span>,&gt;=<span class="number">1.9</span><span class="number">.0</span> <span class="keyword">in</span> c:\users\jianhu.yong\envs\mxonline\lib\site-packages (<span class="keyword">from</span> xadmin) (<span class="number">1.9</span>)</span><br><span class="line">Collecting django-crispy-forms&gt;=<span class="number">1.6</span><span class="number">.0</span> (<span class="keyword">from</span> xadmin)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">9</span>a/<span class="number">05</span>/<span class="number">6</span>bad05742d185ec2fabfa4deab05cafde286eb3f383fba24b3674340aca2/django_crispy_forms<span class="number">-1.7</span><span class="number">.2</span>-py2.py3-none-any.whl (<span class="number">105</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">112</span>kB <span class="number">14</span>kB/s</span><br><span class="line">Collecting django-formtools&gt;=<span class="number">1.0</span> (<span class="keyword">from</span> xadmin)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">97</span>/<span class="number">3</span>f/b8e04c41c028d5cdad651393abea1f686d846c717d8ab5d5ebe2974f711c/django_formtools<span class="number">-2.1</span>-py2.py3-none-any.whl (<span class="number">132</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">133</span>kB <span class="number">25</span>kB/s</span><br><span class="line">Collecting httplib2==<span class="number">0.9</span><span class="number">.2</span> (<span class="keyword">from</span> xadmin)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/ff/a9/<span class="number">5751</span>cdf17a70ea89f6dde23ceb1705bfb638fd8cee00f845308bf8d26397/httplib2<span class="number">-0.9</span><span class="number">.2</span>.tar.gz (<span class="number">205</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">215</span>kB <span class="number">23</span>kB/s</span><br><span class="line">Building wheels <span class="keyword">for</span> collected packages: xadmin, httplib2</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> xadmin ... done</span><br><span class="line">  Stored <span class="keyword">in</span> directory: C:\Users\jianhu.yong\AppData\Local\pip\Cache\wheels\<span class="number">4</span>f\d7\<span class="number">9</span>a\<span class="number">4699</span>d04c2239f4ad9764de8d236d9df1344574067dd61ab201</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> httplib2 ... done</span><br><span class="line">  Stored <span class="keyword">in</span> directory: C:\Users\jianhu.yong\AppData\Local\pip\Cache\wheels\<span class="number">36</span>\f2\<span class="number">49</span>\<span class="number">5</span>adbf90fba31e02a7784e1147d7f8b6c4af3718739e568c8cb</span><br><span class="line">Successfully built xadmin httplib2</span><br><span class="line">Installing collected packages: django-crispy-forms, django-formtools, httplib2, xadmin</span><br><span class="line">Successfully installed django-crispy-forms<span class="number">-1.7</span><span class="number">.2</span> django-formtools<span class="number">-2.1</span> httplib2<span class="number">-0.9</span><span class="number">.2</span> xadmin<span class="number">-0.6</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'users'</span>,</span><br><span class="line">    <span class="string">'courses'</span>,</span><br><span class="line">    <span class="string">'organization'</span>,</span><br><span class="line">    <span class="string">'operation'</span>,</span><br><span class="line">    <span class="string">'xadmin'</span>,</span><br><span class="line">    <span class="string">'crispy_forms'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">import</span>  xadmin</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">    url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-131.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">No changes detected</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br><span class="line">manage.py@MxOnline &gt; migrate</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: xadmin, users, sessions, admin, auth, courses, contenttypes, organization, operation</span><br><span class="line">Running migrations:</span><br><span class="line">  Rendering model states... DONE</span><br><span class="line">  Applying xadmin<span class="number">.0001</span>_initial... OK</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cDovL3NzaHdzZmMuZ2l0aHViLmlvL3hhZG1pbi8=" title="http://sshwsfc.github.io/xadmin/">http://sshwsfc.github.io/xadmin/<i class="fa fa-external-link"></i></span></p><p>基于源码安装xadmin</p><ul><li>可自定义</li><li>功能最新 比pypi</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NzaHdzZmMveGFkbWlu" title="https://github.com/sshwsfc/xadmin">https://github.com/sshwsfc/xadmin<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-132.png" alt="upload successful"></p><p><img src="/images/pasted-133.png" alt="upload successful"></p><p><img src="/images/pasted-134.png" alt="upload successful"></p><p><img src="/images/pasted-135.png" alt="upload successful"></p><p><img src="/images/pasted-136.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">'apps'</span>))</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">'extra_apps'</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-137.png" alt="upload successful"></p><p><img src="/images/pasted-138.png" alt="upload successful"></p><p><img src="/images/pasted-139.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install future</span><br><span class="line">pip install six</span><br><span class="line">pip install django_import_export</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">No changes detected</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br><span class="line">manage.py@MxOnline &gt; migrate</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: xadmin, users, sessions, admin, auth, courses, contenttypes, organization, operation</span><br><span class="line">Running migrations:</span><br><span class="line">  Rendering model states... DONE</span><br><span class="line">  Applying xadmin<span class="number">.0002</span>_log... OK</span><br><span class="line">  Applying xadmin<span class="number">.0003</span>_auto_20160715_0100... OK</span><br></pre></td></tr></table></figure><p>设置脚本文件模版neirong</p><p><img src="/images/pasted-142.png" alt="upload successful"></p><p>通过xadmin注册model</p><p><img src="/images/pasted-141.png" alt="upload successful"></p><p>注册剩余models</p><p>xadmin全局配置</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xadmin <span class="keyword">import</span>  views</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> EmailVerifyRecord,Banner</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span><span class="params">(object)</span>:</span></span><br><span class="line">    enable_themes = <span class="literal">True</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line">xadmin.site.register(views.BaseAdminView, BaseSetting)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span><span class="params">(object)</span>:</span></span><br><span class="line">    site_title = <span class="string">'MX后台管理系统'</span></span><br><span class="line">    site_footer = <span class="string">'MX在线网'</span></span><br><span class="line">xadmin.site.register(views.CommAdminView, GlobalSettings)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-143.png" alt="upload successful"></p><p>xadmin主题bug<br><code>[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure</code></p><figure class="highlight python"><figcaption><span>xadmin\plugins\themes.py</span></figcaption><table><tr><td class="code"><pre><span class="line">flag = <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> flag:</span><br><span class="line">    h = httplib2.Http()</span><br><span class="line">    resp, content = h.request(<span class="string">"https://bootswatch.com/api/3.json"</span>, <span class="string">'GET'</span>, <span class="string">''</span>,</span><br><span class="line">        headers=&#123;<span class="string">"Accept"</span>: <span class="string">"application/json"</span>, <span class="string">"User-Agent"</span>: self.request.META[<span class="string">'HTTP_USER_AGENT'</span>]&#125;)</span><br><span class="line">    <span class="keyword">if</span> six.PY3:</span><br><span class="line">        content = content.decode()</span><br><span class="line">    watch_themes = json.loads(content)[<span class="string">'themes'</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    content = requests.get(<span class="string">"https://bootswatch.com/api/3.json"</span>)</span><br><span class="line">    <span class="keyword">if</span> six.PY3:</span><br><span class="line">        content = content.text.decode()</span><br><span class="line">    watch_themes = json.loads(content.text)[<span class="string">'themes'</span>]</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-144.png" alt="upload successful"><br>修改为中文显示</p><figure class="highlight python"><figcaption><span>__init__.py</span></figcaption><table><tr><td class="code"><pre><span class="line">default_app_config = <span class="string">'operation.apps.OperationConfig'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>apps.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> django.apps <span class="keyword">import</span> AppConfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OperationConfig</span><span class="params">(AppConfig)</span>:</span></span><br><span class="line">    name = <span class="string">'operation'</span></span><br><span class="line">    verbose_name = <span class="string">u"用户操作"</span></span><br></pre></td></tr></table></figure><p>首页和登录页的配置<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url(<span class="string">r'^$'</span>, TemplateView.as_view(template_name=<span class="string">'index.html'</span>), name=<span class="string">'index'</span>),</span><br><span class="line">url(<span class="string">r'^login/$'</span>, TemplateView.as_view(template_name=<span class="string">'login.html'</span>), name=<span class="string">'login'</span>),</span><br></pre></td></tr></table></figure></p><p>用户登录配置</p><figure class="highlight python"><figcaption><span>urls.py</span></figcaption><table><tr><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">    url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">    url(<span class="string">r'^$'</span>, TemplateView.as_view(template_name=<span class="string">'index.html'</span>), name=<span class="string">'index'</span>),</span><br><span class="line">    <span class="comment"># url(r'^login/$', TemplateView.as_view(template_name='login.html'), name='login'),</span></span><br><span class="line">    url(<span class="string">r'^login/$'</span>, user_login, name=<span class="string">'login'</span>),</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>views.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_login</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">''</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">''</span>)</span><br><span class="line">        user = authenticate(username=user_name,password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;&#125;)</span><br><span class="line">```        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">自定义auth认证变量</span><br><span class="line">重写authenticate方法</span><br><span class="line"></span><br><span class="line">``` python views.py</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> authenticate, login</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.backends <span class="keyword">import</span> ModelBackend</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> UserProfile</span><br><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> Q</span><br><span class="line"><span class="comment"># 完成并集操作获得关系</span></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomBackend</span><span class="params">(ModelBackend)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span><span class="params">(self, username=None, password=None, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = UserProfile.objects.get(Q(username=username)|Q(email=username))</span><br><span class="line">            <span class="keyword">if</span> user.check_password(password):</span><br><span class="line">                <span class="keyword">return</span> user</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">'users.views.CustomBackend'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>views方法基于类，不基于函数书写</p><figure class="highlight python"><figcaption><span>views.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span>  django.views.generic.base <span class="keyword">import</span> View</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">''</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">''</span>)</span><br><span class="line">        user = authenticate(username=user_name,password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;<span class="string">'msg'</span>:<span class="string">'用户名或密码错误！'</span>&#125;)</span><br></pre></td></tr></table></figure><p>form实现登入</p><p><img src="/images/pasted-145.png" alt="upload successful"></p><p>session &amp; cookies自动登录机制</p><ul><li>cookies 浏览器本地存储方式机制，可以存储很多信息，存储在某个域名之下，存储在本地不安全！</li><li>session 服务器生成，存储在服务器端，安全，发送给用户，存储在cookies之中！</li></ul><p><img src="/images/pasted-146.png" alt="upload successful"><br><img src="/images/pasted-147.png" alt="upload successful"><br><img src="/images/pasted-149.png" alt="upload successful"><br><img src="/images/pasted-148.png" alt="upload successful"></p><p>value 用户名密码加密字符串，服务器对session id取出value 并解密，实现自动登录 ！</p><p><img src="/images/pasted-150.png" alt="upload successful"><br>注释掉 自动登录就失效了！</p><p>用户注册</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% load staticfiles %&#125;</span><br></pre></td></tr></table></figure><p>验证码插件</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21iaS9kamFuZ28tc2ltcGxlLWNhcHRjaGE=" title="https://github.com/mbi/django-simple-captcha">https://github.com/mbi/django-simple-captcha<i class="fa fa-external-link"></i></span></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Install django-simple-captcha via pip: pip install  django-simple-captcha</span><br><span class="line"></span><br><span class="line">Add captcha to the INSTALLED_APPS <span class="keyword">in</span> your settings.py</span><br><span class="line"></span><br><span class="line">Run python manage.py migrate</span><br><span class="line"></span><br><span class="line">Add an entry to your urls.py:</span><br><span class="line"></span><br><span class="line">urlpatterns += [</span><br><span class="line">    url(<span class="string">r'^captcha/'</span>, include(<span class="string">'captcha.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install django-simple-captcha==<span class="number">0.4</span><span class="number">.6</span></span><br></pre></td></tr></table></figure><p>配置邮箱设置！<br><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mail Config</span></span><br><span class="line">EMAIL_HOST = <span class="string">'smtp.laohulab.com'</span></span><br><span class="line">EMAIL_PORT = <span class="number">25</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'postmaster@qq.com'</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'XXXX'</span></span><br><span class="line">EMAIL_USE_TLS =<span class="literal">False</span></span><br><span class="line">EMAIL_FROM = <span class="string">'postmaster@qq.com'</span></span><br></pre></td></tr></table></figure></p><p>注册邮件发送<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line">__author__ = <span class="string">'jianhu.yong'</span></span><br><span class="line">__date__ = <span class="string">'2018/7/5 16:29'</span></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> django.core.mail <span class="keyword">import</span> send_mail</span><br><span class="line"><span class="keyword">from</span> users.models <span class="keyword">import</span> EmailVerifyRecord</span><br><span class="line"><span class="keyword">from</span> MxOnline.settings <span class="keyword">import</span> EMAIL_FROM</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_str</span><span class="params">(randomlength=<span class="number">8</span>)</span>:</span></span><br><span class="line">    str = <span class="string">''</span></span><br><span class="line">    chars = <span class="string">'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789'</span></span><br><span class="line">    length = len(chars) <span class="number">-1</span></span><br><span class="line">    random =Random()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(randomlength):</span><br><span class="line">        str += chars[random.randint(<span class="number">0</span>, length)]</span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_register_email</span><span class="params">(email, send_type=<span class="string">'register'</span>)</span>:</span></span><br><span class="line">    email_record = EmailVerifyRecord()</span><br><span class="line">    code = random_str(<span class="number">16</span>)</span><br><span class="line">    email_record.code = code</span><br><span class="line">    email_record.email = email</span><br><span class="line">    email_record.send_type = send_type</span><br><span class="line">    email_record.save()</span><br><span class="line"></span><br><span class="line">    email_title = <span class="string">''</span></span><br><span class="line">    email_body = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> send_type == <span class="string">'register'</span>:</span><br><span class="line">        email_title = <span class="string">'MX在线网注册激活链接'</span></span><br><span class="line">        email_body = <span class="string">'请点击下面的链接激活你的账号：http://127.0.0.1:8000/active/&#123;0&#125;'</span>.format(code)</span><br><span class="line">        send_status = send_mail(email_title, email_body, EMAIL_FROM, [email])</span><br><span class="line">        <span class="keyword">if</span> send_status:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> send_type == <span class="string">'forget'</span>:</span><br><span class="line">        email_title = <span class="string">'MX在线网密码重置链接'</span></span><br><span class="line">        email_body = <span class="string">'请点击下面的链接重置密码：http://127.0.0.1:8000/reset/&#123;0&#125;'</span>.format(code)</span><br><span class="line">        send_status = send_mail(email_title, email_body, EMAIL_FROM, [email])</span><br><span class="line">        <span class="keyword">if</span> send_status:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><p>激活用户设置<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">    url(<span class="string">r'^active/(?P&lt;active_code&gt;\w+)/$'</span>, ActiveUserView.as_view(), name=<span class="string">'user_active'</span>),</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ActiveUserView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, active_code)</span>:</span></span><br><span class="line">        all_records = EmailVerifyRecord.objects.filter(code=active_code)</span><br><span class="line">        <span class="keyword">if</span> all_records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> all_records:</span><br><span class="line">                email = record.email</span><br><span class="line">                user = UserProfile.objects.get(email=email)</span><br><span class="line">                user.is_active = <span class="literal">True</span></span><br><span class="line">                user.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'active_fail.html'</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">密码找回</span><br><span class="line">``` python</span><br><span class="line">    url(<span class="string">r'^forget/$'</span>, ForgetPwdView.as_view(), name=<span class="string">'forget_pwd'</span>),</span><br><span class="line">    url(<span class="string">r'^reset/(?P&lt;active_code&gt;\w+)/$'</span>, ResetView.as_view(), name=<span class="string">'reset_pwd'</span>),</span><br><span class="line">    url(<span class="string">r'^modify/$'</span>, ModifyPwdView.as_view(), name=<span class="string">'modify_pwd'</span>),</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        register_form = RegisterForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'register.html'</span>, &#123;<span class="string">'register_form'</span>:register_form&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        register_form = RegisterForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">            user_name = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> UserProfile.objects.filter(email=user_name):</span><br><span class="line">                <span class="keyword">return</span>  render(request, <span class="string">'register.html'</span>, &#123;<span class="string">'msg'</span>:<span class="string">'用户已存在！'</span>,<span class="string">'register_form'</span>: register_form&#125;)</span><br><span class="line">            pass_word = request.POST.get(<span class="string">'password'</span>, <span class="string">''</span>)</span><br><span class="line">            user_profile =UserProfile()</span><br><span class="line">            user_profile.username = user_name</span><br><span class="line">            user_profile.email = user_name</span><br><span class="line">            user_profile.is_active = <span class="literal">False</span></span><br><span class="line">            user_profile.password = make_password(pass_word)</span><br><span class="line">            user_profile.save()</span><br><span class="line"></span><br><span class="line">            send_register_email(user_name, <span class="string">'register'</span>)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'register.html'</span>, &#123;<span class="string">'register_form'</span>: register_form&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ForgetPwdView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        forgetpwd_form = ForgetPwdForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'forgetpwd.html'</span>, &#123;<span class="string">'forgetpwd_form'</span>:forgetpwd_form&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        forgetpwd_form = ForgetPwdForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> forgetpwd_form.is_valid():</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            send_register_email(email, <span class="string">'forget'</span>)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'send_success.html'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'forgetpwd.html'</span>, &#123;<span class="string">'forgetpwd_form'</span>:forgetpwd_form&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResetView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, active_code)</span>:</span></span><br><span class="line">        all_records = EmailVerifyRecord.objects.filter(code=active_code)</span><br><span class="line">        <span class="keyword">if</span> all_records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> all_records:</span><br><span class="line">                email = record.email</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'password_reset.html'</span>, &#123;<span class="string">'email'</span>:email&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'active_fail.html'</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModifyPwdView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        modify_form = ModifyPwdForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> modify_form.is_valid():</span><br><span class="line">            pwd1 = request.POST.get(<span class="string">'password1'</span>, <span class="string">''</span>)</span><br><span class="line">            pwd2 = request.POST.get(<span class="string">'password2'</span>, <span class="string">''</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> pwd1 != pwd2:</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'password_reset.html'</span>, &#123;<span class="string">'email'</span>:email, <span class="string">'msg'</span>:<span class="string">'密码不一致！'</span>&#125;)</span><br><span class="line">            user = UserProfile.objects.get(email=email)</span><br><span class="line">            user.password = make_password(pwd2)</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'password_reset'</span>, &#123;<span class="string">'email'</span>:email, <span class="string">'modify_form'</span>:modify_form&#125;)</span><br></pre></td></tr></table></figure></p><p>MEDIA_URL配置 调用静态image<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</span><br><span class="line">        ,</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">                <span class="string">'django.core.context_processors.media'</span></span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># upload setting</span></span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">'media'</span>)</span><br></pre></td></tr></table></figure><pre><code># 配置上传文件的访问处理函数url(r&apos;^media/(?P&lt;path&gt;.*)$&apos;, serve, {&apos;document_root&apos;:MEDIA_ROOT}),</code></pre><p>from django.views.static import  serve<br>from MxOnline.settings import MEDIA_ROOT    </p><p>django分页功能！<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phbWVzcGFjaWxlby9kamFuZ28tcHVyZS1wYWdpbmF0aW9u" title="https://github.com/jamespacileo/django-pure-pagination">https://github.com/jamespacileo/django-pure-pagination<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-151.png" alt="upload successful"><br>p = Paginator(all_orgs,  request=request)<br>p = Paginator(all_orgs, 5,  request=request)</p><p><img src="/images/pasted-152.png" alt="upload successful"><br>使用默认，分页样式无法控制</p><p>列表筛选功能</p><p>机构排名和课程学习人数排序</p><p>modelform提交</p><p>外键关系<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123; course.lesson_set.all.count &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &#123;%  for user_course in course.usercourse_set.all %&#125;</span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"40"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; user_course.user.image &#125;&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            &#123;% endfor %&#125;</span><br><span class="line">                            </span><br><span class="line">                            </span><br><span class="line">    def get_zj_nums(self):</span><br><span class="line">        return self.lesson_set.all().count()</span><br><span class="line"></span><br><span class="line">    def get_learn_users(self):</span><br><span class="line">        return self.usercourse_set.all()[:5]</span><br><span class="line">        </span><br><span class="line">&#123;&#123;course.get_zj_nums&#125;&#125;</span><br><span class="line">&#123;% for usercourse in course.get_learn_users %&#125;</span><br></pre></td></tr></table></figure></p><p>用户上传文件<br>html<br>enctype=”multipart/form-data”</p><p>后端：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadImageView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        image_form = UploadImageForm(request.POST, request.FILES)</span><br><span class="line">        <span class="keyword">if</span> image_form.is_valid():</span><br><span class="line">            image = image_form.cleaned_data[<span class="string">'image'</span>]</span><br><span class="line">            request.user.image = image</span><br><span class="line">            request.user.save()</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def post(self, request):</span></span><br><span class="line">    <span class="comment">#     image_form = UploadImageForm(request.POST, request.FILES, instance=request.user)</span></span><br><span class="line">    <span class="comment">#     if image_form.is_valid():</span></span><br><span class="line">    <span class="comment">#         image_form.save()</span></span><br><span class="line">```    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">4040</span> <span class="number">500</span>配置    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">django xadmin 进阶开发</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">debug 改成true时候</span><br><span class="line">注释</span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">'static'</span>)</span><br><span class="line"> url(<span class="string">r'^static/(?P&lt;path&gt;.*)$'</span>, serve, &#123;<span class="string">'document_root'</span>:STATIC_ROOT&#125;),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model icon配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model_icon = <span class="string">'fa fa-user'</span></span><br><span class="line">开源图标库</span><br><span class="line">https://fontawesome.com/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![upload successful](/images/pasted<span class="number">-153.</span>png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">倒叙排列</span><br><span class="line">ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line"></span><br><span class="line">设置字段只读</span><br><span class="line">readonly_fields = [<span class="string">'click_nums'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line"></span><br><span class="line">移除某个字段显示</span><br><span class="line">exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line"></span><br><span class="line">需要注意是否和readonly_fields冲突</span><br><span class="line"></span><br><span class="line">关联外键字段，添加搜索功能（针对外键数量很多是，自动搜索方便）</span><br><span class="line">relfield_style = <span class="string">'fk-ajax'</span></span><br><span class="line"></span><br><span class="line">报错</span><br><span class="line">TypeError: Related Field got invalid lookup: icontains</span><br><span class="line"><span class="number">1</span></span><br><span class="line">原因</span><br><span class="line">出错原因是你配置的ModelAdmin类中，元组search_fields中的项不是字符类型。</span><br><span class="line"></span><br><span class="line">解决</span><br><span class="line">删除元组search_fields中类型不符的项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xadmin inline模式</span><br><span class="line">``` python</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LessonInline</span><span class="params">(object)</span>:</span></span><br><span class="line">    model = Lesson</span><br><span class="line">    extra = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline]</span><br><span class="line">xadmin.site.register(Course, CourseAdmin)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LessonInline</span><span class="params">(object)</span>:</span></span><br><span class="line">    model = Lesson</span><br><span class="line">    extra = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseResourceInline</span><span class="params">(object)</span>:</span></span><br><span class="line">    model = CourseResource</span><br><span class="line">    extra = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line">xadmin.site.register(Course, CourseAdmin)</span><br></pre></td></tr></table></figure></p><p>同一个model 后台注册2个管理器，分别管理同一张表！<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course_org = models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"课程机构"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程描述"</span>)</span><br><span class="line">    detail = models.TextField(verbose_name=<span class="string">u"课程详情"</span>)</span><br><span class="line">    teacher = models.ForeignKey(Teacher, verbose_name=<span class="string">u"讲师"</span>, null=<span class="literal">True</span>,  blank=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># TextField不限制max_length</span></span><br><span class="line">    degree = models.CharField(choices=((<span class="string">"cj"</span>, <span class="string">u"初级"</span>),(<span class="string">"zj"</span>, <span class="string">u"中级"</span>),(<span class="string">"bj"</span>, <span class="string">u"高级"</span>)), max_length=<span class="number">2</span>, verbose_name=<span class="string">u"难度"</span>)</span><br><span class="line">    learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长（分钟数）"</span>)</span><br><span class="line">    students= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习人数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏人数"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"courses/%y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    category = models.CharField(default=<span class="string">u"后端开发"</span>, max_length=<span class="number">20</span>, verbose_name=<span class="string">u"课程类别"</span>)</span><br><span class="line">    tag = models.CharField(default=<span class="string">""</span>, max_length=<span class="number">10</span>, verbose_name= <span class="string">u"课程标签"</span>)</span><br><span class="line">    youneed_know = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程须知"</span>, default=<span class="string">""</span>)</span><br><span class="line">    teacher_tell = models.CharField(max_length=<span class="number">300</span> , verbose_name=<span class="string">u"老师告诉你学到什么"</span>, default=<span class="string">""</span>)</span><br><span class="line">    is_banner = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否轮播"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_zj_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.lesson_set.all().count()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_learn_users</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.usercourse_set.all()[:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerCourse</span><span class="params">(Course)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"轮播课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        qs = super(CourseAdmin, self).queryset()</span><br><span class="line">        qs = qs.filter(is_banner=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> qs</span><br><span class="line">xadmin.site.register(Course, CourseAdmin)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerCourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        qs = super(BannerCourseAdmin, self).queryset()</span><br><span class="line">        qs = qs.filter(is_banner=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> qs</span><br><span class="line">xadmin.site.register(BannerCourse, BannerCourseAdmin)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list_editable</span><br><span class="line">list_editable = [<span class="string">'name'</span>,<span class="string">'degree'</span>]</span><br></pre></td></tr></table></figure></p><p>list中 函数的引用<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course_org = models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"课程机构"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程描述"</span>)</span><br><span class="line">    detail = models.TextField(verbose_name=<span class="string">u"课程详情"</span>)</span><br><span class="line">    teacher = models.ForeignKey(Teacher, verbose_name=<span class="string">u"讲师"</span>, null=<span class="literal">True</span>,  blank=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># TextField不限制max_length</span></span><br><span class="line">    degree = models.CharField(choices=((<span class="string">"cj"</span>, <span class="string">u"初级"</span>),(<span class="string">"zj"</span>, <span class="string">u"中级"</span>),(<span class="string">"bj"</span>, <span class="string">u"高级"</span>)), max_length=<span class="number">2</span>, verbose_name=<span class="string">u"难度"</span>)</span><br><span class="line">    learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长（分钟数）"</span>)</span><br><span class="line">    students= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习人数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏人数"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"courses/%y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    category = models.CharField(default=<span class="string">u"后端开发"</span>, max_length=<span class="number">20</span>, verbose_name=<span class="string">u"课程类别"</span>)</span><br><span class="line">    tag = models.CharField(default=<span class="string">""</span>, max_length=<span class="number">10</span>, verbose_name= <span class="string">u"课程标签"</span>)</span><br><span class="line">    youneed_know = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程须知"</span>, default=<span class="string">""</span>)</span><br><span class="line">    teacher_tell = models.CharField(max_length=<span class="number">300</span> , verbose_name=<span class="string">u"老师告诉你学到什么"</span>, default=<span class="string">""</span>)</span><br><span class="line">    is_banner = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否轮播"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_zj_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.lesson_set.all().count()</span><br><span class="line">    get_zj_nums.short_description = <span class="string">u'章节数'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_learn_users</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.usercourse_set.all()[:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>,<span class="string">'get_zj_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    list_editable = [<span class="string">'name'</span>,<span class="string">'degree'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br></pre></td></tr></table></figure></p><p>自定义html代码<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">go_to</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">from</span> django.utils.safestring <span class="keyword">import</span> mark_safe</span><br><span class="line">        <span class="keyword">return</span> mark_safe(<span class="string">'&lt;a href="http://www.baidu.com/&#123;0&#125;" target="_blank"&gt;Link&lt;/a&gt;'</span>.format(self.name))</span><br><span class="line">        go_to.short_description = <span class="string">u'章节数'</span></span><br><span class="line">        </span><br><span class="line">list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>,<span class="string">'get_zj_nums'</span>,<span class="string">'go_to'</span>]</span><br></pre></td></tr></table></figure></p><p>定时刷新<br>refresh_times = [3, 5]<br><img src="/images/pasted-154.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">数据发生变更触发操作</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_models</span><span class="params">(self)</span>:</span></span><br><span class="line">        obj = self.new_obj</span><br><span class="line">        obj.save()</span><br><span class="line">        course_org = obj.course_org</span><br><span class="line">        <span class="keyword">if</span> course_org:</span><br><span class="line">            course_org.course_nums = Course.objects.filter(course_org=course_org).count()</span><br><span class="line">            course_org.save()</span><br><span class="line">```            </span><br><span class="line">xadmin集成富文本编辑工具</span><br><span class="line">https://github.com/zhangfisher/DjangoUeditor</span><br><span class="line"></span><br><span class="line">pip install DjangoUeditor</span><br><span class="line">setting.py 配置 instal app</span><br><span class="line">url配置</span><br><span class="line">拷贝DjangoUeditor static html文件</span><br><span class="line"></span><br><span class="line">``` html</span><br><span class="line">&#123;% autoescape off %&#125;</span><br><span class="line">&#123;&#123; course.detail &#125;&#125;</span><br><span class="line">&#123;% endautoescape %&#125;</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dncHl0aG9uL2FydGljbGUvZGV0YWlscy83OTU4NTIwNQ==" title="https://blog.csdn.net/wgpython/article/details/79585205">https://blog.csdn.net/wgpython/article/details/79585205<i class="fa fa-external-link"></i></span></p><p>uedit插件</p><p>excel插件</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbl90dXJuL2FydGljbGUvZGV0YWlscy81NTUxNzc1OQ==" title="https://blog.csdn.net/win_turn/article/details/55517759">https://blog.csdn.net/win_turn/article/details/55517759<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL2RqYW5nby1zaW1wbGUtY2FwdGNoYS5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvdXNhZ2UuaHRtbCNpbnN0YWxsYXRpb24=" title="http://django-simple-captcha.readthedocs.io/en/latest/usage.html#installation">http://django-simple-captcha.readthedocs.io/en/latest/usage.html#installation<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cDovL3Byb2plY3RzZWR1LmNvbS8yMDE3LzA4LzE1L2NlbnRvczctJUU0JUI4JThCJUU5JTgwJTlBJUU4JUJGJTg3bmdpbngtdXdzZ2klRTklODMlQTglRTclQkQlQjJkamFuZ28lRTUlQkElOTQlRTclOTQlQTgv" title="http://projectsedu.com/2017/08/15/centos7-%E4%B8%8B%E9%80%9A%E8%BF%87nginx-uwsgi%E9%83%A8%E7%BD%B2django%E5%BA%94%E7%94%A8/">http://projectsedu.com/2017/08/15/centos7-%E4%B8%8B%E9%80%9A%E8%BF%87nginx-uwsgi%E9%83%A8%E7%BD%B2django%E5%BA%94%E7%94%A8/<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Django models</title>
      <link href="/Django/1160884897.html"/>
      <url>/Django/1160884897.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; makemigrations messages</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations messages C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">No changes detected <span class="keyword">in</span> app <span class="string">'messages'</span></span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p>解决方案<br>settings配置文件中添加app信息即可</p><figure class="highlight python"><figcaption><span>models.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMessage</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>,verbose_name=<span class="string">u"用户名"</span>)</span><br><span class="line">    email = models.EmailField(verbose_name=<span class="string">u"邮箱"</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"联系地址"</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>,verbose_name=<span class="string">u"留言信息"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户留言信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>urls.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> message.views <span class="keyword">import</span> getform</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^form/'</span>,getform, name=<span class="string">'form_get'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows安装mysql-python</title>
      <link href="/Django/559006889.html"/>
      <url>/Django/559006889.html</url>
      
        <content type="html"><![CDATA[<h5 id="安装mysql-python"><a href="#安装mysql-python" class="headerlink" title=" 安装mysql-python"></a><i class="fa fa-caret-right fa-lg"></i> 安装mysql-python</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install mysql-python</span><br></pre></td></tr></table></figure><p>出现如下错误<br><img src="/images/pasted-110.png" alt="upload successful"></p><a id="more"></a><h5 id="解决方案"><a href="#解决方案" class="headerlink" title=" 解决方案"></a><i class="fa fa-caret-right fa-lg"></i> 解决方案</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLyNteXNxbC1weXRob24=" title="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python">https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-111.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;pip install C:\Users\jianhu.yong\Downloads\MySQL_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Processing c:\users\jianhu.yong\downloads\mysql_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Installing collected packages: MySQL-python</span><br><span class="line">Successfully installed MySQL-python<span class="number">-1.2</span><span class="number">.5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Django基础知识</title>
      <link href="/Django/1958507969.html"/>
      <url>/Django/1958507969.html</url>
      
        <content type="html"><![CDATA[<h5 id="创建Django项目"><a href="#创建Django项目" class="headerlink" title=" 创建Django项目"></a><i class="fa fa-caret-right fa-lg"></i> 创建Django项目</h5><p><img src="/images/pasted-95.png" alt="upload successful"></p><a id="more"></a><h5 id="django目录结构"><a href="#django目录结构" class="headerlink" title=" django目录结构"></a><i class="fa fa-caret-right fa-lg"></i> django目录结构</h5><p><img src="/images/pasted-88.png" alt><br>保存django项目的urls、settings、uwsgi文件</p><h5 id="新建项目app"><a href="#新建项目app" class="headerlink" title=" 新建项目app"></a><i class="fa fa-caret-right fa-lg"></i> 新建项目app</h5><p><img src="/images/pasted-90.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; startapp message</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp message C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\tests.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\migrations\__init__.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="新建静态文件夹"><a href="#新建静态文件夹" class="headerlink" title=" 新建静态文件夹"></a><i class="fa fa-caret-right fa-lg"></i> 新建静态文件夹</h5><p><img src="/images/pasted-91.png" alt="upload successful"><br><img src="/images/pasted-92.png" alt="upload successful"><br><img src="/images/pasted-93.png" alt="upload successful"><br>主要存放静态文件 js css img等</p><h5 id="新建日志文件夹"><a href="#新建日志文件夹" class="headerlink" title=" 新建日志文件夹"></a><i class="fa fa-caret-right fa-lg"></i> 新建日志文件夹</h5><p><img src="/images/pasted-94.png" alt="upload successful"></p><h5 id="新建用户上传文件夹"><a href="#新建用户上传文件夹" class="headerlink" title=" 新建用户上传文件夹"></a><i class="fa fa-caret-right fa-lg"></i> 新建用户上传文件夹</h5><p><img src="/images/pasted-96.png" alt="upload successful"></p><h5 id="新建apps-package"><a href="#新建apps-package" class="headerlink" title=" 新建apps package"></a><i class="fa fa-caret-right fa-lg"></i> 新建apps package</h5><p><img src="/images/pasted-102.png" alt="upload successful"><br><img src="/images/pasted-101.png" alt="upload successful"></p><p><img src="/images/pasted-103.png" alt="upload successful"><br>集中管理diango app</p><p>将message app移动至apps文件夹内</p><p><img src="/images/pasted-104.png" alt="upload successful"><br><img src="/images/pasted-99.png" alt="upload successful"><br><img src="/images/pasted-105.png" alt="upload successful"></p><div class="note info">            <p>当我们在其他目录导入message时候，需要通过apps.message来导入！<br>例如：<code>from apps.message import views</code><br>直接<code>import message</code>会提示错误</p>          </div><p><img src="/images/pasted-108.png" alt="upload successful"></p><div class="note danger">            <p>当我们想通过<code>import message import views</code>导入却发现有错误，这是需要将apps目录标记为<code>Sources Root</code>即可，但是又会带来另外一个问题，在命令行里面启动django项目，会提示message找不到的错误，这时需要修改<code>settings</code>配置文件中的<code>BASEDIR</code>变量即可！</p><p><code>sys.path.append(os.path.join(BASE_DIR,&#39;apps&#39;))</code><br><code>sys.path.insert(0, os.path.join(BASE_DIR, &#39;apps&#39;))</code></p>          </div><p><img src="/images/pasted-109.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;workon</span><br><span class="line"></span><br><span class="line">Pass a name to activate one of the following virtualenvs:</span><br><span class="line">==============================================================================</span><br><span class="line">testvir01</span><br><span class="line"></span><br><span class="line">C:\WINDOWS\system32&gt;workon testvir01</span><br><span class="line">(testvir01) C:\Windows\System32&gt;cd C:\Users\jianhu.yong\PycharmProjects\djangodemo\</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;dir</span><br><span class="line"> 驱动器 C 中的卷没有标签。</span><br><span class="line"> 卷的序列号是 D8C0-E83A</span><br><span class="line"></span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\djangodemo 的目录</span><br><span class="line"></span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">32</span>    &lt;DIR&gt;          .</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">32</span>    &lt;DIR&gt;          ..</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">37</span>    &lt;DIR&gt;          .idea</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">29</span>    &lt;DIR&gt;          apps</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          djangodemo</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          log</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">32</span>               <span class="number">807</span> manage.py</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">20</span>    &lt;DIR&gt;          media</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          static</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          templates</span><br><span class="line">               <span class="number">1</span> 个文件            <span class="number">807</span> 字节</span><br><span class="line">               <span class="number">9</span> 个目录 <span class="number">45</span>,<span class="number">607</span>,<span class="number">804</span>,<span class="number">928</span> 可用字节</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;python manage.py runserver</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"manage.py"</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">import</span>  message</span><br><span class="line">ImportError: No module named message</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;</span><br></pre></td></tr></table></figure><h5 id="Django留言板项目简单实战"><a href="#Django留言板项目简单实战" class="headerlink" title=" Django留言板项目简单实战"></a><i class="fa fa-caret-right fa-lg"></i> Django留言板项目简单实战</h5><p><img src="/images/pasted-112.png" alt="upload successful"></p><h5 id="安装mysql-python"><a href="#安装mysql-python" class="headerlink" title=" 安装mysql-python"></a><i class="fa fa-angle-double-right fa-lg"></i> 安装mysql-python</h5><a href="/Django/559006889.html" title="Windows安装mysql-python">Windows安装mysql-python</a><h5 id="settings配置"><a href="#settings配置" class="headerlink" title=" settings配置"></a><i class="fa fa-angle-double-right fa-lg"></i> settings配置</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'testdb01'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'127.0.0.1'</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</span><br><span class="line">        ,</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/1.10/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR,<span class="string">'static'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="migration生成数据表"><a href="#migration生成数据表" class="headerlink" title=" migration生成数据表"></a><i class="fa fa-angle-double-right fa-lg"></i> migration生成数据表</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">No changes detected</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; migrate</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying auth<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying admin<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying admin<span class="number">.0002</span>_logentry_remove_auto_add... OK</span><br><span class="line">  Applying contenttypes<span class="number">.0002</span>_remove_content_type_name... OK</span><br><span class="line">  Applying auth<span class="number">.0002</span>_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth<span class="number">.0003</span>_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth<span class="number">.0004</span>_alter_user_username_opts... OK</span><br><span class="line">  Applying auth<span class="number">.0005</span>_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth<span class="number">.0006</span>_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth<span class="number">.0007</span>_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth<span class="number">.0008</span>_alter_user_username_max_length... OK</span><br><span class="line">  Applying sessions<span class="number">.0001</span>_initial... OK</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="编写views-py"><a href="#编写views-py" class="headerlink" title=" 编写views.py"></a><i class="fa fa-angle-double-right fa-lg"></i> 编写views.py</h5><figure class="highlight python"><figcaption><span>views.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getform</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'message_form.html'</span>)</span><br></pre></td></tr></table></figure><h5 id="配置urls-py"><a href="#配置urls-py" class="headerlink" title=" 配置urls.py"></a><i class="fa fa-angle-double-right fa-lg"></i> 配置urls.py</h5><figure class="highlight python"><figcaption><span>urls.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> message.views <span class="keyword">import</span> getform</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^form/'</span>,getform, name=<span class="string">'form_get'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="静态文件配置"><a href="#静态文件配置" class="headerlink" title=" 静态文件配置"></a><i class="fa fa-angle-double-right fa-lg"></i> 静态文件配置</h5><figure class="highlight html"><figcaption><span>message_form.html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/css/style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'form_get' %&#125;"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">class</span>=<span class="string">"smart-green"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>留言信息</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>请留下你的信息.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=</span></span><br><span class="line"><span class="tag">        &#123;% <span class="attr">if</span> <span class="attr">not</span> <span class="attr">message.name</span> == <span class="string">'bobbytest'</span> %&#125;</span></span><br><span class="line"><span class="tag">            '<span class="attr">bobby</span> <span class="attr">has</span> <span class="attr">test</span>'</span></span><br><span class="line"><span class="tag">        &#123;% <span class="attr">else</span> %&#125;</span></span><br><span class="line"><span class="tag">            <span class="attr">bobby</span></span></span><br><span class="line"><span class="tag">        &#123;% <span class="attr">endif</span> %&#125; <span class="attr">class</span>=<span class="string">"error"</span> <span class="attr">placeholder</span>=<span class="string">"请输入您的姓名"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>邮箱 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">type</span>=<span class="string">"email"</span>  <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; message.email &#125;&#125;"</span> <span class="attr">placeholder</span>=<span class="string">"请输入邮箱地址"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>联系地址 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"address"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; message.address &#125;&#125;"</span> <span class="attr">placeholder</span>=<span class="string">"请输入联系地址"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>留言 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"message"</span> <span class="attr">name</span>=<span class="string">"message"</span>  <span class="attr">placeholder</span>=<span class="string">"请输入你的建议"</span>&gt;</span>&#123;&#123; message.message &#125;&#125;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"success-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>style.css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.smart-green</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: auto;</span><br><span class="line">    <span class="attribute">margin-right</span>: auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#F8F8F8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">20px</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span> Arial, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">24px</span> <span class="string">"Trebuchet MS"</span>, Arial, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">30px</span> -<span class="number">30px</span> <span class="number">10px</span> -<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#9DC45F</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#949494</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#89AF4C</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">h1</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">label</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5E5E5E</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span>, <span class="selector-class">.smart-green</span> <span class="selector-tag">input</span><span class="selector-attr">[type="email"]</span>, <span class="selector-class">.smart-green</span> <span class="selector-tag">textarea</span>, <span class="selector-class">.smart-green</span> <span class="selector-tag">select</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#E5E5E5</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#FBFBFB</span>;</span><br><span class="line">    <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(238, 238, 238, 0.2);</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(238, 238, 238, 0.2);</span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">14px</span>/<span class="number">14px</span> Arial, Helvetica, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-class">.button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#9DC45F</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">25px</span> <span class="number">10px</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#949494</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-class">.button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#80A24A</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error-msg</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.success-msg</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#80A24A</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="启动Django服务"><a href="#启动Django服务" class="headerlink" title=" 启动Django服务"></a><i class="fa fa-angle-double-right fa-lg"></i> 启动Django服务</h5><p><span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMTo4MDAwL2Zvcm0v" title="http://127.0.0.1:8000/form/">http://127.0.0.1:8000/form/<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-115.png" alt="upload successful"></p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Django-搭建开发环境</title>
      <link href="/Django/3444653517.html"/>
      <url>/Django/3444653517.html</url>
      
        <content type="html"><![CDATA[<h5 id="pycharm安装"><a href="#pycharm安装" class="headerlink" title=" pycharm安装"></a><i class="fa fa-caret-right fa-lg"></i> pycharm安装</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9weWNoYXJtLw==" title="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/<i class="fa fa-external-link"></i></span></p><h5 id="mysql安装"><a href="#mysql安装" class="headerlink" title=" mysql安装"></a><i class="fa fa-caret-right fa-lg"></i> mysql安装</h5><p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy93aW5kb3dzLw==" title="https://dev.mysql.com/downloads/windows/">https://dev.mysql.com/downloads/windows/<i class="fa fa-external-link"></i></span></p><a id="more"></a><p><img src="/images/pasted-75.png" alt><br><img src="/images/pasted-76.png" alt><br><img src="/images/pasted-77.png" alt><br><img src="/images/pasted-78.png" alt><br><img src="/images/pasted-79.png" alt><br><img src="/images/pasted-80.png" alt><br><img src="/images/pasted-81.png" alt><br><img src="/images/pasted-82.png" alt><br><img src="/images/pasted-83.png" alt></p><h5 id="python2-7安装"><a href="#python2-7安装" class="headerlink" title=" python2.7安装"></a><i class="fa fa-caret-right fa-lg"></i> python2.7安装</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv" title="https://www.python.org/downloads/">https://www.python.org/downloads/<i class="fa fa-external-link"></i></span></p><h5 id="navicat安装"><a href="#navicat安装" class="headerlink" title=" navicat安装"></a><i class="fa fa-caret-right fa-lg"></i> navicat安装</h5><p><a href="/downloads/navicatformysql.zip">navicatformysql.zip</a></p><h5 id="virtual虚拟环境搭建-windows"><a href="#virtual虚拟环境搭建-windows" class="headerlink" title=" virtual虚拟环境搭建-windows"></a><i class="fa fa-caret-right fa-lg"></i> virtual虚拟环境搭建-windows</h5><p>优点</p><ul><li>使不同应用开发环境独立</li><li>环境升级不影响其他应用，也不会影响全局的python环境 </li><li>防止系统中出现包管理混乱和版本冲突</li></ul><h6 id="virtuanlenv安装"><a href="#virtuanlenv安装" class="headerlink" title=" virtuanlenv安装"></a><i class="fa fa-angle-double-right fa-lg"></i> virtuanlenv安装</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">pip install virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建虚拟环境</span></span><br><span class="line">virtuanlenv testvir01</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入虚拟环境目录</span></span><br><span class="line">cd testvir01</span><br><span class="line"></span><br><span class="line"><span class="comment">#激活虚拟环境</span></span><br><span class="line">activate.bat</span><br></pre></td></tr></table></figure><div class="note info">            <font color="red">virtuanlenv管理虚拟环境不变，故安装virtualenvwrapper进行虚拟环境管理!</font>          </div><h6 id="安装virtualenvwrapper"><a href="#安装virtualenvwrapper" class="headerlink" title=" 安装virtualenvwrapper"></a><i class="fa fa-angle-double-right fa-lg"></i> 安装virtualenvwrapper</h6><ul><li>Windows</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;pip install virtualenvwrapper-win</span><br><span class="line">Collecting virtualenvwrapper-win</span><br><span class="line">  Using cached https://files.pythonhosted.org/packages/<span class="number">87</span>/<span class="number">70</span>/ccebe989b112c42814fee4c145cfdac8fbcb174074b04bf8250b3052544f/virtualenvwrapper_win<span class="number">-1.2</span><span class="number">.5</span>-py2-none-any.whl</span><br><span class="line">Collecting virtualenv (<span class="keyword">from</span> virtualenvwrapper-win)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/b6/<span class="number">30</span>/<span class="number">96</span>a02b2287098b23b875bc8c2f58071c35d2efe84f747b64d523721dc2b5/virtualenv<span class="number">-16.0</span><span class="number">.0</span>-py2.py3-none-any.whl (<span class="number">1.9</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">1.9</span>MB <span class="number">77</span>kB/s</span><br><span class="line">Installing collected packages: virtualenv, virtualenvwrapper-win</span><br><span class="line">Successfully installed virtualenv<span class="number">-16.0</span><span class="number">.0</span> virtualenvwrapper-win<span class="number">-1.2</span><span class="number">.5</span></span><br></pre></td></tr></table></figure><ul><li>Linux</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install virtualenvwrapper</span><br></pre></td></tr></table></figure><h6 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title=" 创建虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 创建虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;mkvirtualenv testvir01</span><br><span class="line"> C:\Users\jianhu.yong\Envs <span class="keyword">is</span> <span class="keyword">not</span> a directory, creating</span><br><span class="line">New python executable <span class="keyword">in</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe</span><br><span class="line">Installing setuptools, pip, wheel...done.</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Windows\System32&gt;</span><br></pre></td></tr></table></figure><h6 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title=" 退出虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 退出虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h6 id="查看虚拟环境"><a href="#查看虚拟环境" class="headerlink" title=" 查看虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 查看虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;workon</span><br><span class="line"></span><br><span class="line">Pass a name to activate one of the following virtualenvs:</span><br><span class="line">==============================================================================</span><br><span class="line">testvir01</span><br><span class="line"></span><br><span class="line">C:\Windows\System32&gt;</span><br></pre></td></tr></table></figure><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title=" 进入虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 进入虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;workon testvir01</span><br><span class="line">(testvir01) C:\Windows\System32&gt;</span><br></pre></td></tr></table></figure><h6 id="Django安装"><a href="#Django安装" class="headerlink" title=" Django安装"></a><i class="fa fa-angle-double-right fa-lg"></i> Django安装</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;workon testvir01</span><br><span class="line">(testvir01) C:\Windows\System32&gt;pip install django==<span class="number">1.10</span><span class="number">.4</span></span><br><span class="line">Collecting django==<span class="number">1.10</span><span class="number">.4</span></span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">71</span>/<span class="number">37</span>/<span class="number">581</span>a00bbc4571526ce88ef517c0c02ca7575ac2ae8a3671161d2aa14b740/Django<span class="number">-1.10</span><span class="number">.4</span>-py2.py3-none-any.whl (<span class="number">6.8</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">6.8</span>MB <span class="number">28</span>kB/s</span><br><span class="line">Installing collected packages: django</span><br><span class="line">Successfully installed django<span class="number">-1.10</span><span class="number">.4</span></span><br></pre></td></tr></table></figure><h5 id="pycharm和navicat简单实用"><a href="#pycharm和navicat简单实用" class="headerlink" title=" pycharm和navicat简单实用"></a><i class="fa fa-caret-right fa-lg"></i> pycharm和navicat简单实用</h5><ul><li><strong>设置keymap</strong></li></ul><p><img src="/images/pasted-74.png" alt></p><ul><li><strong>连接&amp;创建数据库</strong></li></ul><p><img src="/images/pasted-84.png" alt="upload successful"><br><img src="/images/pasted-86.png" alt="upload successful"><br><img src="/images/pasted-87.png" alt="upload successful"></p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>requests实现windows身份验证登录</title>
      <link href="/uncategorized/2252267221.html"/>
      <url>/uncategorized/2252267221.html</url>
      
        <content type="html"><![CDATA[<h5 id="安装ntlm"><a href="#安装ntlm" class="headerlink" title=" 安装ntlm"></a><i class="fa fa-caret-right fa-lg"></i> 安装ntlm</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install requests_ntlm</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JlcXVlc3RzL3JlcXVlc3RzLW50bG0=" title="https://github.com/requests/requests-ntlm">https://github.com/requests/requests-ntlm<i class="fa fa-external-link"></i></span></p><h5 id="使用"><a href="#使用" class="headerlink" title=" 使用"></a><i class="fa fa-caret-right fa-lg"></i> 使用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from requests_ntlm import HttpNtlmAuth</span><br><span class="line"></span><br><span class="line">requests.get(<span class="string">"http://ntlm_protected_site.com"</span>,auth=HttpNtlmAuth(<span class="string">'domain\\username'</span>,<span class="string">'password'</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>picrust-installation</title>
      <link href="/Bioinformatics-Software/452847875.html"/>
      <url>/Bioinformatics-Software/452847875.html</url>
      
        <content type="html"><![CDATA[<h5 id="官方文档"><a href="#官方文档" class="headerlink" title=" 官方文档"></a><i class="fa fa-caret-right fa-lg"></i> 官方文档</h5><p><span class="exturl" data-url="aHR0cDovL3BpY3J1c3QuZ2l0aHViLmlvL3BpY3J1c3QvaW5zdGFsbC5odG1sI2luc3RhbGw=" title="http://picrust.github.io/picrust/install.html#install">http://picrust.github.io/picrust/install.html#install<i class="fa fa-external-link"></i></span></p><h5 id="安装picrust"><a href="#安装picrust" class="headerlink" title=" 安装picrust"></a><i class="fa fa-caret-right fa-lg"></i> 安装picrust</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/picrust/picrust.git picrust</span><br><span class="line"><span class="built_in">cd</span> picrust/</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> C_INCLUDE_PATH=<span class="string">"/YZGROUP/genewiz/public/download/blasr_install/hdf5/hdf5-1.8.16-linux-centos7-x86_64-gcc483-shared/include:<span class="variable">$C_INCLUDE_PATH</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=<span class="string">"/YZGROUP/genewiz/public/download/blasr_install/hdf5/hdf5-1.8.16-linux-centos7-x86_64-gcc483-shared/lib:<span class="variable">$LIBRARY_PATH</span>"</span></span><br><span class="line"></span><br><span class="line">pip install . --install-option=<span class="string">"--prefix=/YZGROUP/genewiz/public/app/python-package"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bioinformatics Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tax4fun-installation</title>
      <link href="/Bioinformatics-Software/757553724.html"/>
      <url>/Bioinformatics-Software/757553724.html</url>
      
        <content type="html"><![CDATA[<h5 id="帮助文档"><a href="#帮助文档" class="headerlink" title=" 帮助文档"></a><i class="fa fa-caret-right fa-lg"></i> 帮助文档</h5><p><span class="exturl" data-url="aHR0cDovL3RheDRmdW4uZ29iaWNzLmRlL1JQYWNrYWdlL1JlYWRtZV9UYXg0RnVuLnBkZg==" title="http://tax4fun.gobics.de/RPackage/Readme_Tax4Fun.pdf">http://tax4fun.gobics.de/RPackage/Readme_Tax4Fun.pdf<i class="fa fa-external-link"></i></span></p><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title=" 安装依赖"></a><i class="fa fa-caret-right fa-lg"></i> 安装依赖</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入终端模式</span></span><br><span class="line">/YZGROUP/genewiz/public/app/r-3.4.1/bin/R</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖R包</span></span><br><span class="line">install.packages(<span class="string">"qiimer"</span>)</span><br><span class="line">install.packages(<span class="string">"Matrix"</span>)</span><br><span class="line">install.packages(<span class="string">"RJSONIO"</span>)</span><br><span class="line">wget https://cran.r-project.org/src/contrib/Archive/biom/biom_0.3.12.tar.gz -P /tmp/</span><br><span class="line">install.packages(<span class="string">"/tmp/biom_0.3.12.tar.gz"</span>, repos=NULL, <span class="built_in">type</span>=<span class="string">"source"</span>)</span><br></pre></td></tr></table></figure><div class="note warning">            <p><code>install.packages(&quot;biom&quot;)安装会提示如下错误,经查官方已将其从安装源中移除!</code><br><img src="/images/pasted-73.png" alt><br>详见<span class="exturl" data-url="aHR0cHM6Ly9jcmFuLnItcHJvamVjdC5vcmcvd2ViL3BhY2thZ2VzL2Jpb20vaW5kZXguaHRtbA==" title="https://cran.r-project.org/web/packages/biom/index.html">https://cran.r-project.org/web/packages/biom/index.html<i class="fa fa-external-link"></i></span></p>          </div><h5 id="安装Tax4Fun"><a href="#安装Tax4Fun" class="headerlink" title=" 安装Tax4Fun"></a><i class="fa fa-caret-right fa-lg"></i> 安装Tax4Fun</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://tax4fun.gobics.de/Tax4Fun/Tax4Fun_0.3.1.tar.gz -P /tmp/</span><br><span class="line">install.packages(<span class="string">"/tmp/Tax4Fun_0.3.1.tar.gz"</span>, repos = NULL, <span class="built_in">type</span> = <span class="string">"source"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bioinformatics Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7忘记root密码解决办法</title>
      <link href="/CentOS/2528284161.html"/>
      <url>/CentOS/2528284161.html</url>
      
        <content type="html"><![CDATA[<h5 id="按esc进入菜单栏"><a href="#按esc进入菜单栏" class="headerlink" title=" 按esc进入菜单栏"></a><i class="fa fa-caret-right fa-lg"></i> 按<kbd>esc</kbd>进入菜单栏</h5><p><img src="/images/pasted-69.png" alt></p><a id="more"></a><h5 id="按e编辑模式"><a href="#按e编辑模式" class="headerlink" title=" 按e编辑模式"></a><i class="fa fa-caret-right fa-lg"></i> 按<kbd>e</kbd>编辑模式</h5><p><img src="/images/pasted-70.png" alt></p><h5 id="按Ctrl-X启动"><a href="#按Ctrl-X启动" class="headerlink" title=" 按Ctrl+X启动"></a><i class="fa fa-caret-right fa-lg"></i> 按<kbd>Ctrl+X</kbd>启动</h5><p><img src="/images/pasted-71.png" alt></p><h5 id="passwd修改密码"><a href="#passwd修改密码" class="headerlink" title=" passwd修改密码"></a><i class="fa fa-caret-right fa-lg"></i> passwd修改密码</h5><p><img src="/images/pasted-72.png" alt></p><h5 id="由于selinux开启着的需要执行以下命令更新系统信息-否则重启之后密码未生效"><a href="#由于selinux开启着的需要执行以下命令更新系统信息-否则重启之后密码未生效" class="headerlink" title=" 由于selinux开启着的需要执行以下命令更新系统信息,否则重启之后密码未生效"></a><i class="fa fa-caret-right fa-lg"></i> 由于selinux开启着的需要执行以下命令更新系统信息,否则重启之后密码未生效</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch /.autorelabel</span><br></pre></td></tr></table></figure><h5 id="重启系统"><a href="#重启系统" class="headerlink" title=" 重启系统"></a><i class="fa fa-caret-right fa-lg"></i> 重启系统</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exec</span> /sbin/init</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LIBRARY_PATH和LD_LIBRARY_PATH的区别</title>
      <link href="/Linux/2362162236.html"/>
      <url>/Linux/2362162236.html</url>
      
        <content type="html"><![CDATA[<h5 id="关于Linux-gcc中的-LIBRARY-PATH-和-LD-LIBRARY-PATH-参数说明"><a href="#关于Linux-gcc中的-LIBRARY-PATH-和-LD-LIBRARY-PATH-参数说明" class="headerlink" title=" 关于Linux gcc中的 LIBRARY_PATH 和 LD_LIBRARY_PATH 参数说明"></a><i class="fa fa-caret-right fa-lg"></i> 关于Linux gcc中的 LIBRARY_PATH 和 LD_LIBRARY_PATH 参数说明</h5><p>下面摘取了两篇较权威的说明资料：</p><ul><li>GNU 上关于LIBRARY_PATH的说明</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LIBRARY_PATH</span><br><span class="line">The value of LIBRARY_PATH is a colon-separated list of directories, much like PATH.</span><br><span class="line">When configured as a native compiler, GCC tries the directories thus specified when searching <span class="keyword">for</span> special linker files, <span class="keyword">if</span> it can<span class="string">'t find them using GCC_EXEC_PREFIX.</span></span><br><span class="line"><span class="string">Linking using GCC also uses these directories when searching for ordinary libraries for the -l option (but directories specified with -L come first).</span></span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>man7 上关于LD_LIBRARY_PATH的说明</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LD_LIBRARY_PATH</span><br><span class="line">A colon-separated list of directories <span class="keyword">in</span> <span class="built_in">which</span> to search <span class="keyword">for</span> ELF libraries at execution-time.  Similar to the PATH environment variable.  Ignored <span class="keyword">in</span> <span class="built_in">set</span>-user-ID and <span class="built_in">set</span>-group-ID programs.</span><br></pre></td></tr></table></figure><ul><li>StackOverflow 上关于 LIBRARY_PATH 和 LD_LIBRARY_PATH 的解释更直白</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LIBRARY_PATH is used by gcc before compilation to search <span class="keyword">for</span> directories containing libraries that need to be linked to your program.</span><br><span class="line"></span><br><span class="line">LD_LIBRARY_PATH is used by your program to search <span class="keyword">for</span> directories containing the libraries after it has been successfully compiled and linked.</span><br><span class="line"></span><br><span class="line">EDIT: As pointed below, your libraries can be static or shared.</span><br><span class="line">If it is static <span class="keyword">then</span> the code is copied over into your program and you don<span class="string">'t need to search for the library after your program is compiled and linked.</span></span><br><span class="line"><span class="string">If your library is shared then it needs to be dynamically linked to your program and that'</span>s when LD_LIBRARY_PATH comes into play.</span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title=" 总结"></a><i class="fa fa-caret-right fa-lg"></i> 总结</h5><p>关于 LIBRARY_PATH 和 LD_LIBRARY_PATH 的关系，总结如下。</p><ul><li>Linux gcc编译链接时的动态库搜索路径</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GCC编译、链接生成可执行文件时，动态库的搜索路径顺序如下</span><br><span class="line">1、gcc编译、链接命令中的-L选项；</span><br><span class="line">2、gcc的环境变量的LIBRARY_PATH（多个路径用冒号分割）；</span><br><span class="line">3、gcc默认动态库目录：/lib:/usr/lib:usr/lib64:/usr/<span class="built_in">local</span>/lib。</span><br><span class="line">4.2 执行二进制文件时的动态库搜索路径</span><br></pre></td></tr></table></figure><div class="note warning">            <p>注意不会递归性地在其子目录下搜索!</p>          </div><ul><li>链接生成二进制可执行文件后，在运行程序加载动态库文件时，搜索的路径顺序如下</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- 编译目标代码时指定的动态库搜索路径：用选项-Wl,rpath和include指定的动态库的搜索路径，比如gcc -Wl,-rpath,include -L. -ldltest hello.c，在执行文件时会搜索路径`./include`；</span><br><span class="line">- 环境变量LD_LIBRARY_PATH（多个路径用冒号分割）；</span><br><span class="line">- 在 /etc/ld.so.conf.d/ 目录下的配置文件指定的动态库绝对路径（通过ldconfig生效，一般是非root用户时使用）；</span><br><span class="line">- gcc默认动态库目录：/lib:/usr/lib:usr/lib64:/usr/<span class="built_in">local</span>/lib等。</span><br></pre></td></tr></table></figure><ul><li>Linux GCC默认的动态库搜索路径可以通过 ld –verbose 命令查看：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[genewiznj@njgate01 picrust]$ ld --verbose |grep -i search_dir</span><br><span class="line">SEARCH_DIR(<span class="string">"/usr/x86_64-redhat-linux/lib64"</span>); SEARCH_DIR(<span class="string">"/usr/lib64"</span>); SEARCH_DIR(<span class="string">"/usr/local/lib64"</span>); SEARCH_DIR(<span class="string">"/lib64"</span>); SEARCH_DIR(<span class="string">"/usr/x86_64-redhat-linux/lib"</span>); SEARCH_DIR(<span class="string">"/usr/local/lib"</span>); SEARCH_DIR(<span class="string">"/lib"</span>); SEARCH_DIR(<span class="string">"/usr/lib"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux挂载ntfs设备</title>
      <link href="/uncategorized/814301255.html"/>
      <url>/uncategorized/814301255.html</url>
      
        <content type="html"><![CDATA[<h5 id="下载软件包"><a href="#下载软件包" class="headerlink" title=" 下载软件包"></a><i class="fa fa-caret-right fa-lg"></i> 下载软件包</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://tuxera.com/opensource/ntfs-3g_ntfsprogs-2016.2.22.tgz</span><br></pre></td></tr></table></figure><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title=" 安装依赖"></a><i class="fa fa-caret-right fa-lg"></i> 安装依赖</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install gcc gcc-c++</span><br></pre></td></tr></table></figure><h5 id="编译安装"><a href="#编译安装" class="headerlink" title=" 编译安装"></a><i class="fa fa-caret-right fa-lg"></i> 编译安装</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf ntfs-3g_ntfsprogs-2016.2.22.tgz</span><br><span class="line"><span class="built_in">cd</span> ntfs-3g_ntfsprogs-2016.2.22</span><br><span class="line">./configure --prefix=/opt/genewiznj/ntfs-3g</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="挂载测试"><a href="#挂载测试" class="headerlink" title=" 挂载测试"></a><i class="fa fa-caret-right fa-lg"></i> 挂载测试</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -t ntfs-3g /dev/sdb1 /opt/genewiznj/usb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>浪潮服务器相关配置</title>
      <link href="/uncategorized/2457837870.html"/>
      <url>/uncategorized/2457837870.html</url>
      
        <content type="html"><![CDATA[<h5 id="修改BMC密码"><a href="#修改BMC密码" class="headerlink" title=" 修改BMC密码"></a><i class="fa fa-caret-right fa-lg"></i> 修改BMC密码</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">bmc_user=<span class="string">"xxx"</span></span><br><span class="line">bmc_password=<span class="string">"xxx"</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> `seq 185 192`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        /usr/bin/ipmitool -H 10.10.38.<span class="variable">$ip</span> -I lanplus -U <span class="variable">$bmc_user</span> -P <span class="variable">$bmc_password</span> user <span class="built_in">set</span> password 2 xxx &amp;&gt; /dev/null</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> -e <span class="string">"\033[34mServer:<span class="variable">$ip</span> bmc password has been modified successful\033[0m"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> -e <span class="string">"\033[31mServer:<span class="variable">$ip</span> bmc password modified failuer\033[0m"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="fru-change工具使用简介"><a href="#fru-change工具使用简介" class="headerlink" title=" fru-change工具使用简介"></a><i class="fa fa-caret-right fa-lg"></i> fru-change工具使用简介</h5><ul><li><p>适用范围<br>所有带有BMC 模块的浪潮服务器产品及Linux操作系统。</p></li><li><p>功能说明<br>fru-change 工具用于对本地和远端服务器上FRU 设备信息的修改。</p></li><li><p>FRU可修改字段明细<br><img src="/images/pasted-53.png" alt><br><img src="/images/pasted-54.png" alt></p></li></ul><ul><li><p>命令格式<br><img src="/images/pasted-55.png" alt><br>-kcs：表示在服务器本机上通过KCS 方式改写FRU 设备信息<br>-nw：表示通过网络改写远端服务器的FRU 设备信息</p></li><li><p>修改服务器位置信息（修改即生效，无需重启服务器）<br><img src="/images/pasted-56.png" alt> </p></li><li><p>查看修改信息<br><img src="/images/pasted-57.png" alt></p></li></ul><p>未修改前：<br><img src="/images/pasted-58.png" alt></p><p>修改后：<br><img src="/images/pasted-59.png" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LVM逻辑卷在线动态扩容</title>
      <link href="/Linux/2831866438.html"/>
      <url>/Linux/2831866438.html</url>
      
        <content type="html"><![CDATA[<div class="note info">            <p>环境：centos6</p>          </div><h5 id="将需要扩容硬盘插入指定服务器"><a href="#将需要扩容硬盘插入指定服务器" class="headerlink" title=" 将需要扩容硬盘插入指定服务器"></a><i class="fa fa-caret-right fa-lg"></i> 将需要扩容硬盘插入指定服务器</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># /opt/MegaRAID/MegaCli/MegaCli64 -PDList -aALL</span></span><br><span class="line">                                     </span><br><span class="line">Adapter <span class="comment">#0</span></span><br><span class="line"></span><br><span class="line">Enclosure Device ID: 32</span><br><span class="line">Slot Number: 2</span><br><span class="line">Enclosure position: 1</span><br><span class="line">Device Id: 2</span><br><span class="line">WWN: 5000C50084869FF8</span><br><span class="line">Sequence Number: 1</span><br><span class="line">Media Error Count: 0</span><br><span class="line">Other Error Count: 0</span><br><span class="line">Predictive Failure Count: 0</span><br><span class="line">Last Predictive Failure Event Seq Number: 0</span><br><span class="line">PD Type: SAS</span><br><span class="line">Raw Size: 931.512 GB [0x74706db0 Sectors]</span><br><span class="line">Non Coerced Size: 931.012 GB [0x74606db0 Sectors]</span><br><span class="line">Coerced Size: 931.0 GB [0x74600000 Sectors]</span><br><span class="line">Sector Size:  0</span><br><span class="line">Firmware state: Unconfigured(good), Spun Up</span><br><span class="line">Device Firmware Level: AS0B</span><br><span class="line">Shield Counter: 0</span><br><span class="line">Successful diagnostics completion on :  N/A</span><br><span class="line">SAS Address(0): 0x5000c50084869ff9</span><br><span class="line">SAS Address(1): 0x0</span><br><span class="line">Connected Port Number: 2(path0) </span><br><span class="line">Inquiry Data: SEAGATE ST91000640SS    AS0B9XG9K9R0            </span><br><span class="line">FDE Capable: Not Capable</span><br><span class="line">FDE Enable: Disable</span><br><span class="line">Secured: Unsecured</span><br><span class="line">Locked: Unlocked</span><br><span class="line">Needs EKM Attention: No</span><br><span class="line">Foreign State: None </span><br><span class="line">Device Speed: 6.0Gb/s </span><br><span class="line">Link Speed: 6.0Gb/s </span><br><span class="line">Media Type: Hard Disk Device</span><br><span class="line">Drive Temperature :17C (62.60 F)</span><br><span class="line">PI Eligibility:  No </span><br><span class="line">Drive is formatted <span class="keyword">for</span> PI information:  No</span><br><span class="line">PI: No PI</span><br><span class="line">Port-0 :</span><br><span class="line">Port status: Active</span><br><span class="line">Port<span class="string">'s Linkspeed: 6.0Gb/s </span></span><br><span class="line"><span class="string">Port-1 :</span></span><br><span class="line"><span class="string">Port status: Active</span></span><br><span class="line"><span class="string">Port'</span>s Linkspeed: Unknown </span><br><span class="line">Drive has flagged a S.M.A.R.T alert : No</span><br><span class="line"></span><br><span class="line">Enclosure Device ID: 32</span><br><span class="line">Slot Number: 3</span><br><span class="line">Enclosure position: 1</span><br><span class="line">Device Id: 3</span><br><span class="line">WWN: 5000C50084857234</span><br><span class="line">Sequence Number: 1</span><br><span class="line">Media Error Count: 0</span><br><span class="line">Other Error Count: 0</span><br><span class="line">Predictive Failure Count: 0</span><br><span class="line">Last Predictive Failure Event Seq Number: 0</span><br><span class="line">PD Type: SAS</span><br><span class="line">Raw Size: 931.512 GB [0x74706db0 Sectors]</span><br><span class="line">Non Coerced Size: 931.012 GB [0x74606db0 Sectors]</span><br><span class="line">Coerced Size: 931.0 GB [0x74600000 Sectors]</span><br><span class="line">Sector Size:  0</span><br><span class="line">Firmware state: Unconfigured(good), Spun Up</span><br><span class="line">Device Firmware Level: AS0B</span><br><span class="line">Shield Counter: 0</span><br><span class="line">Successful diagnostics completion on :  N/A</span><br><span class="line">SAS Address(0): 0x5000c50084857235</span><br><span class="line">SAS Address(1): 0x0</span><br><span class="line">Connected Port Number: 3(path0) </span><br><span class="line">Inquiry Data: SEAGATE ST91000640SS    AS0B9XG9KD2Q            </span><br><span class="line">FDE Capable: Not Capable</span><br><span class="line">FDE Enable: Disable</span><br><span class="line">Secured: Unsecured</span><br><span class="line">Locked: Unlocked</span><br><span class="line">Needs EKM Attention: No</span><br><span class="line">Foreign State: None </span><br><span class="line">Device Speed: 6.0Gb/s </span><br><span class="line">Link Speed: 6.0Gb/s </span><br><span class="line">Media Type: Hard Disk Device</span><br><span class="line">Drive Temperature :18C (64.40 F)</span><br><span class="line">PI Eligibility:  No </span><br><span class="line">Drive is formatted <span class="keyword">for</span> PI information:  No</span><br><span class="line">PI: No PI</span><br><span class="line">Port-0 :</span><br><span class="line">Port status: Active</span><br><span class="line">Port<span class="string">'s Linkspeed: 6.0Gb/s </span></span><br><span class="line"><span class="string">Port-1 :</span></span><br><span class="line"><span class="string">Port status: Active</span></span><br><span class="line"><span class="string">Port'</span>s Linkspeed: Unknown </span><br><span class="line">Drive has flagged a S.M.A.R.T alert : No</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="确认JBOD模式为禁用状态"><a href="#确认JBOD模式为禁用状态" class="headerlink" title=" 确认JBOD模式为禁用状态"></a><i class="fa fa-caret-right fa-lg"></i> 确认JBOD模式为禁用状态</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># /opt/MegaRAID/MegaCli/MegaCli64 -AdpGetProp -enablejbod -aALL</span></span><br><span class="line">                                     </span><br><span class="line">Adapter 0: JBOD: Disabled</span><br><span class="line">Exit Code: 0x00</span><br></pre></td></tr></table></figure><h5 id="创建raid1"><a href="#创建raid1" class="headerlink" title=" 创建raid1"></a><i class="fa fa-caret-right fa-lg"></i> 创建raid1</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># /opt/MegaRAID/MegaCli/MegaCli64 -CfgLdAdd -r1 [32:2,32:3] WB Direct -a0</span></span><br><span class="line">                                     </span><br><span class="line">Adapter 0: Created VD 1</span><br><span class="line">Adapter 0: Configured the Adapter!!</span><br><span class="line">Exit Code: 0x00</span><br><span class="line"></span><br><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># ll /dev/sd</span></span><br><span class="line">sda   sda1  sda2  sdb</span><br></pre></td></tr></table></figure><h5 id="查看raid状态"><a href="#查看raid状态" class="headerlink" title=" 查看raid状态"></a><i class="fa fa-caret-right fa-lg"></i> 查看raid状态</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># /opt/MegaRAID/MegaCli/MegaCli64 -LDInfo -LALL -aAll</span></span><br><span class="line">                                     </span><br><span class="line">Adapter 0 -- Virtual Drive Information:</span><br><span class="line">Virtual Drive: 0 (Target Id: 0)</span><br><span class="line">Name                :</span><br><span class="line">RAID Level          : Primary-1, Secondary-0, RAID Level Qualifier-0</span><br><span class="line">Size                : 185.75 GB</span><br><span class="line">Sector Size         : 512</span><br><span class="line">Mirror Data         : 185.75 GB</span><br><span class="line">State               : Optimal</span><br><span class="line">Strip Size          : 64 KB</span><br><span class="line">Number Of Drives    : 2</span><br><span class="line">Span Depth          : 1</span><br><span class="line">Default Cache Policy: WriteBack, ReadAdaptive, Direct, No Write Cache <span class="keyword">if</span> Bad BBU</span><br><span class="line">Current Cache Policy: WriteBack, ReadAdaptive, Direct, No Write Cache <span class="keyword">if</span> Bad BBU</span><br><span class="line">Default Access Policy: Read/Write</span><br><span class="line">Current Access Policy: Read/Write</span><br><span class="line">Disk Cache Policy   : Disk<span class="string">'s Default</span></span><br><span class="line"><span class="string">Encryption Type     : None</span></span><br><span class="line"><span class="string">Default Power Savings Policy: Controller Defined</span></span><br><span class="line"><span class="string">Current Power Savings Policy: None</span></span><br><span class="line"><span class="string">Can spin up in 1 minute: No</span></span><br><span class="line"><span class="string">LD has drives that support T10 power conditions: No</span></span><br><span class="line"><span class="string">LD'</span>s IO profile supports MAX power savings with cached writes: No</span><br><span class="line">Bad Blocks Exist: No</span><br><span class="line">Is VD Cached: No</span><br><span class="line"></span><br><span class="line">Virtual Drive: 1 (Target Id: 1)</span><br><span class="line">Name                :</span><br><span class="line">RAID Level          : Primary-1, Secondary-0, RAID Level Qualifier-0</span><br><span class="line">Size                : 931.0 GB</span><br><span class="line">Sector Size         : 512</span><br><span class="line">Mirror Data         : 931.0 GB</span><br><span class="line">State               : Optimal</span><br><span class="line">Strip Size          : 64 KB</span><br><span class="line">Number Of Drives    : 2</span><br><span class="line">Span Depth          : 1</span><br><span class="line">Default Cache Policy: WriteBack, ReadAdaptive, Direct, No Write Cache <span class="keyword">if</span> Bad BBU</span><br><span class="line">Current Cache Policy: WriteBack, ReadAdaptive, Direct, No Write Cache <span class="keyword">if</span> Bad BBU</span><br><span class="line">Default Access Policy: Read/Write</span><br><span class="line">Current Access Policy: Read/Write</span><br><span class="line">Disk Cache Policy   : Disk<span class="string">'s Default</span></span><br><span class="line"><span class="string">Encryption Type     : None</span></span><br><span class="line"><span class="string">Default Power Savings Policy: Controller Defined</span></span><br><span class="line"><span class="string">Current Power Savings Policy: None</span></span><br><span class="line"><span class="string">Can spin up in 1 minute: Yes</span></span><br><span class="line"><span class="string">LD has drives that support T10 power conditions: Yes</span></span><br><span class="line"><span class="string">LD'</span>s IO profile supports MAX power savings with cached writes: No</span><br><span class="line">Bad Blocks Exist: No</span><br><span class="line">Is VD Cached: Yes</span><br><span class="line">Cache Cade Type : Read Only</span><br><span class="line">Exit Code: 0x00</span><br><span class="line"></span><br><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># ll /dev/sd</span></span><br><span class="line">sda   sda1  sda2  sdb   </span><br><span class="line"></span><br><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># fdisk -l /dev/sdb</span></span><br><span class="line">Disk /dev/sdb: 999.7 GB, 999653638144 bytes</span><br><span class="line">255 heads, 63 sectors/track, 121534 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br></pre></td></tr></table></figure><h5 id="LVM分区"><a href="#LVM分区" class="headerlink" title=" LVM分区"></a><i class="fa fa-caret-right fa-lg"></i> LVM分区</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># fdisk  /dev/sdb</span></span><br><span class="line">Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x7b065bfc.</span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">After that, of course, the previous content won<span class="string">'t be recoverable.</span></span><br><span class="line"><span class="string">Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)</span></span><br><span class="line"><span class="string">WARNING: DOS-compatible mode is deprecated. It'</span>s strongly recommended to</span><br><span class="line">         switch off the mode (<span class="built_in">command</span> <span class="string">'c'</span>) and change display units to</span><br><span class="line">         sectors (<span class="built_in">command</span> <span class="string">'u'</span>).</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Command action</span><br><span class="line">   e   extended</span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">p</span><br><span class="line">Partition number (1-4): 1</span><br><span class="line">First cylinder (1-121534, default 1): </span><br><span class="line">Using default value 1</span><br><span class="line">Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1-121534, default 121534): </span><br><span class="line">Using default value 121534</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t</span><br><span class="line">Selected partition 1</span><br><span class="line">Hex code (<span class="built_in">type</span> L to list codes): 8e</span><br><span class="line">Changed system <span class="built_in">type</span> of partition 1 to 8e (Linux LVM)</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/sdb: 999.7 GB, 999653638144 bytes</span><br><span class="line">255 heads, 63 sectors/track, 121534 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x7b065bfc</span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1               1      121534   976221823+  8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h5 id="创建物理卷（PV）"><a href="#创建物理卷（PV）" class="headerlink" title=" 创建物理卷（PV）"></a><i class="fa fa-caret-right fa-lg"></i> 创建物理卷（PV）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># pvcreate /dev/sdb1 </span></span><br><span class="line">dev_is_mpath: failed to get device <span class="keyword">for</span> 8:17 </span><br><span class="line">Physical volume <span class="string">"/dev/sdb1"</span> successfully created </span><br><span class="line"></span><br><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># pvscan </span></span><br><span class="line">  PV /dev/sda2   VG vg_root         lvm2 [185.62 GiB / 0    free]</span><br><span class="line">  PV /dev/sdb1                      lvm2 [931.00 GiB]</span><br><span class="line">  Total: 2 [1.09 TiB] / <span class="keyword">in</span> use: 1 [185.62 GiB] / <span class="keyword">in</span> no VG: 1 [931.00 GiB]</span><br></pre></td></tr></table></figure><h5 id="扩展卷组（VG）"><a href="#扩展卷组（VG）" class="headerlink" title=" 扩展卷组（VG）"></a><i class="fa fa-caret-right fa-lg"></i> 扩展卷组（VG）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># vgextend vg_root /dev/sdb1</span></span><br><span class="line">  Volume group <span class="string">"vg_root"</span> successfully extended</span><br><span class="line"></span><br><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># pvscan </span></span><br><span class="line">  PV /dev/sda2   VG vg_root   lvm2 [185.62 GiB / 0    free]</span><br><span class="line">  PV /dev/sdb1   VG vg_root   lvm2 [930.97 GiB / 930.97 GiB free]</span><br><span class="line">  Total: 2 [1.09 TiB] / <span class="keyword">in</span> use: 2 [1.09 TiB] / <span class="keyword">in</span> no VG: 0 [0   ]</span><br></pre></td></tr></table></figure><h5 id="扩展LV（将新的VG空间划入LV，扩容lv-opt）"><a href="#扩展LV（将新的VG空间划入LV，扩容lv-opt）" class="headerlink" title=" 扩展LV（将新的VG空间划入LV，扩容lv_opt）"></a><i class="fa fa-caret-right fa-lg"></i> 扩展LV（将新的VG空间划入LV，扩容lv_opt）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># lvextend -l +100%FREE /dev/vg_root/lv_opt </span></span><br><span class="line">  Extending logical volume lv_opt to 1.03 TiB</span><br><span class="line">  Logical volume lv_opt successfully resized</span><br></pre></td></tr></table></figure><h5 id="更新磁盘blocks"><a href="#更新磁盘blocks" class="headerlink" title=" 更新磁盘blocks"></a><i class="fa fa-caret-right fa-lg"></i> 更新磁盘blocks</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># resize2fs /dev/vg_root/lv_opt </span></span><br><span class="line">resize2fs 1.41.12 (17-May-2010)</span><br><span class="line">Filesystem at /dev/vg_root/lv_opt is mounted on /opt; on-line resizing required</span><br><span class="line">old desc_blocks = 8, new_desc_blocks = 67</span><br><span class="line">Performing an on-line resize of /dev/vg_root/lv_opt to 277504000 (4k) blocks.</span><br><span class="line">The filesystem on /dev/vg_root/lv_opt is now 277504000 blocks long.</span><br></pre></td></tr></table></figure><h5 id="查看分区状态"><a href="#查看分区状态" class="headerlink" title=" 查看分区状态"></a><i class="fa fa-caret-right fa-lg"></i> 查看分区状态</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@huidu_hx_127_88 ~]<span class="comment"># df -hT</span></span><br><span class="line">Filesystem           Type   Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg_root-lv_root</span><br><span class="line">                     ext4    50G  9.3G   38G  20% /</span><br><span class="line">tmpfs                tmpfs   24G     0   24G   0% /dev/shm</span><br><span class="line">/dev/sda1            ext3    97M   30M   63M  32% /boot</span><br><span class="line">/dev/mapper/vg_root-lv_opt</span><br><span class="line">                     ext4   1.1T  105G  885G  11% /opt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>/etc/resolv.conf配置详解</title>
      <link href="/uncategorized/3307312087.html"/>
      <url>/uncategorized/3307312087.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">options timeout:n attempts:n</span><br><span class="line"></span><br><span class="line">timeout是指连接某个dns server有问题造成堵塞的超时值，单位是秒；</span><br><span class="line">attempts是指解析域名尝试的次数。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">根据内核源码/usr/include/resolv.h中的定义：</span><br><span class="line"><span class="comment"># define MAXNS                  3       /* max # name servers we’ll track */</span></span><br><span class="line"><span class="comment"># define MAXDNSRCH              6       /* max # domains in search path */</span></span><br><span class="line"><span class="comment"># define RES_TIMEOUT            5       /* min. seconds between retries */</span></span><br><span class="line"><span class="comment"># define RES_DFLRETRY           2       /* Default #/tries. */</span></span><br></pre></td></tr></table></figure><p>可以知道：</p><ul><li>resolv.conf里的nameserver只能有3个，多写的无效；</li><li>timeout默认是5秒；</li><li>attempts默认是2次，也就是解析域名尝试的次数<ul><li>此值必须大于等于1</li><li>这里的“次数”如果是1，指从nameserver1到nameserver3都做了尝试（碰巧都失败）。并非指某个nameserver的尝试次数。</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Harbor部署</title>
      <link href="/Docker/3113137305.html"/>
      <url>/Docker/3113137305.html</url>
      
        <content type="html"><![CDATA[<h5 id="服务器信息"><a href="#服务器信息" class="headerlink" title=" 服务器信息"></a><i class="fa fa-caret-right fa-lg"></i> 服务器信息</h5><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">Model</span>：<span class="selector-tag">Dell</span> <span class="selector-tag">PowerEdge</span> <span class="selector-tag">R730xd</span></span><br><span class="line"><span class="selector-tag">CPU</span>：<span class="selector-tag">2</span>*<span class="selector-tag">Intel</span>(R) <span class="selector-tag">Xeon</span>(R) <span class="selector-tag">CPU</span> <span class="selector-tag">E5-2620</span> <span class="selector-tag">v3</span> @ <span class="selector-tag">2</span><span class="selector-class">.40GHz</span></span><br><span class="line"><span class="selector-tag">MEM</span>：<span class="selector-tag">32G</span></span><br><span class="line"><span class="selector-tag">DISK</span>：<span class="selector-tag">2</span>*<span class="selector-tag">300G</span>(RAID <span class="number">1</span>) + <span class="selector-tag">16</span>*<span class="selector-tag">6T</span>(RAID <span class="number">5</span> mount /opt/tuniu/docker)</span><br><span class="line"><span class="selector-tag">NIC</span>：<span class="selector-tag">2</span>*<span class="selector-tag">10G</span></span><br><span class="line"><span class="selector-tag">OS</span><span class="selector-pseudo">:CentOS</span> <span class="selector-tag">Linux</span> <span class="selector-tag">release</span> <span class="selector-tag">7</span><span class="selector-class">.2</span><span class="selector-class">.1511</span> (Core)</span><br><span class="line"><span class="selector-tag">IP</span>：<span class="selector-tag">10</span><span class="selector-class">.40</span><span class="selector-class">.191</span><span class="selector-class">.176</span></span><br><span class="line"><span class="selector-tag">DNS</span><span class="selector-pseudo">:tcr.tuniu.io(</span>流量较大，直接解析至<span class="selector-tag">Harbor</span>服务器，不经过负载均衡)</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="部署Harbor先决条件"><a href="#部署Harbor先决条件" class="headerlink" title=" 部署Harbor先决条件"></a><i class="fa fa-caret-right fa-lg"></i> 部署Harbor先决条件</h5><ul><li><p>Python should be version 2.7 or higher<br>Centos 7 Python版本默认Python 2.7.5，满足条件，跳过</p></li><li><p>Docker engine should be version 1.10 or higher(<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vZW5naW5lL2luc3RhbGxhdGlvbi8=" title="https://docs.docker.com/engine/installation/">https://docs.docker.com/engine/installation/<i class="fa fa-external-link"></i></span>)</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/docker.repo</span><br><span class="line"> </span><br><span class="line">[dockerrepo]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/docker/yum/repo/centos7</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"> </span><br><span class="line">yum clean all</span><br><span class="line">yum -y install docker-engine</span><br></pre></td></tr></table></figure><ul><li>Docker Compose needs to be version 1.6.0 or higher(<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29tcG9zZS9pbnN0YWxsLw==" title="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/<i class="fa fa-external-link"></i></span>)</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.10.0/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"> </span><br><span class="line">[root@harbor-hx-191-176 ~]<span class="comment"># docker-compose --version</span></span><br><span class="line">docker-compose version 1.9.0, build 2585387</span><br></pre></td></tr></table></figure><h5 id="开始部署Harbor"><a href="#开始部署Harbor" class="headerlink" title=" 开始部署Harbor"></a><i class="fa fa-caret-right fa-lg"></i> 开始部署Harbor</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 下载Harbor最新版本<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Ztd2FyZS9oYXJib3IvcmVsZWFzZXMvZG93bmxvYWQvMC41LjAvaGFyYm9yLW9mZmxpbmUtaW5zdGFsbGVyLTAuNS4wLnRneg==" title="https://github.com/vmware/harbor/releases/download/0.5.0/harbor-offline-installer-0.5.0.tgz">https://github.com/vmware/harbor/releases/download/0.5.0/harbor-offline-installer-0.5.0.tgz<i class="fa fa-external-link"></i></span></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#本次采用离线安装包安装</span></span><br><span class="line">wget https://github.com/vmware/harbor/releases/download/0.5.0/harbor-offline-installer-0.5.0.tgz -P /opt/tuniu/docker</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 解压安装包<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/tuniu/docker</span><br><span class="line">tar zxvf harbor-offline-installer-0.5.0.tgz</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 创建相关目录<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/tuniu/docker/harbor/&#123;ssl,data,logs&#125;</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 拷贝证书至SSL目录<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ll /opt/tuniu/docker/harbor/ssl/</span><br><span class="line">-r-------- 1 root root 3766 Jan 25 13:47 tuniu.io.crt</span><br><span class="line">-r-------- 1 root root 1679 Jan 25 13:47 tuniu.io.key</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 拷贝旧版本Harbor数据至data、log目录<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/tuniu/docker/harbor/Deploy/docker-compose.yml （10.10.10.150)</span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-51.png" alt></p><p>拷贝registry、mysql对应数据至10.40.191.176:/opt/tuniu/docker/harbor/data/目录<br>拷贝logd对应数据至10.40.191.176:/opt/tuniu/docker/harbor/logs/目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@harbor-hx-191-176 docker]<span class="comment"># ll /opt/tuniu/docker/harbor/data/</span></span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 5 systemd-bus-proxy ssh_keys 155 Jan 25 13:54 database</span><br><span class="line">drwxr-xr-x 3 root              root      27 May  4  2016 registry</span><br><span class="line"> </span><br><span class="line">[root@harbor-hx-191-176 docker]<span class="comment"># ll /opt/tuniu/docker/harbor/logs/</span></span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 218 root root 8192 Jan 24 10:02 harbor</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 数据库表升级<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Ztd2FyZS9oYXJib3IvYmxvYi9tYXN0ZXIvZG9jcy9taWdyYXRpb25fZ3VpZGUubWQ=" title="https://github.com/vmware/harbor/blob/master/docs/migration_guide.md">https://github.com/vmware/harbor/blob/master/docs/migration_guide.md<i class="fa fa-external-link"></i></span></p><p><i class="fa fa-angle-double-right fa-lg"></i> 下载官方迁移工具<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull vmware/harbor-db-migrator</span><br><span class="line">docker run -ti --rm -e DB_USR=root -e DB_PWD=root123 -v /opt/tuniu/docker/harbor/data/database/:/var/lib/mysql vmware/harbor-db-migrator up head</span><br><span class="line"> </span><br><span class="line">Please backup before upgrade.</span><br><span class="line">Enter y to <span class="built_in">continue</span> updating or n to abort:y</span><br><span class="line">Trying to start mysql server...</span><br><span class="line">MySQL Community Server 5.6.33 is not running.</span><br><span class="line">2017-01-25 08:42:16 0 [Note] mysqld (mysqld 5.6.33) starting as process 7 ...</span><br><span class="line">2017-01-25 08:42:17 7 [Note] Plugin <span class="string">'FEDERATED'</span> is disabled.</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Using atomics to ref count buffer pool pages</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: The InnoDB memory heap is disabled</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Memory barrier is not used</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Compressed tables use zlib 1.2.8</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Initializing buffer pool, size = 128.0M</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Highest supported file format is Barracuda.</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Log scan progressed past the checkpoint lsn 27680688</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Database was not shutdown normally!</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Starting crash recovery.</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Reading tablespace information from the .ibd files...</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Restoring possible half-written data pages </span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: from the doublewrite buffer...</span><br><span class="line">InnoDB: Doing recovery: scanned up to <span class="built_in">log</span> sequence number 27680698</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: 128 rollback segment(s) are active.</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">2017-01-25 08:42:17 7 [Note] InnoDB: 5.6.33 started; <span class="built_in">log</span> sequence number 27680698</span><br><span class="line">2017-01-25 08:42:17 7 [Note] Server hostname (<span class="built_in">bind</span>-address): <span class="string">'*'</span>; port: 3306</span><br><span class="line">2017-01-25 08:42:17 7 [Note] IPv6 is available.</span><br><span class="line">2017-01-25 08:42:17 7 [Note]   - <span class="string">'::'</span> resolves to <span class="string">'::'</span>;</span><br><span class="line">2017-01-25 08:42:17 7 [Note] Server socket created on IP: <span class="string">'::'</span>.</span><br><span class="line">2017-01-25 08:42:17 7 [Warning] <span class="string">'proxies_priv'</span> entry <span class="string">'@ root@b55fac88ee06'</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">2017-01-25 08:42:17 7 [Note] Event Scheduler: Loaded 0 events</span><br><span class="line">2017-01-25 08:42:17 7 [Note] mysqld: ready <span class="keyword">for</span> connections.</span><br><span class="line">Version: <span class="string">'5.6.33'</span>  socket: <span class="string">'/var/run/mysqld/mysqld.sock'</span>  port: 3306  MySQL Community Server (GPL)</span><br><span class="line">MySQL Community Server 5.6.33 is running.</span><br><span class="line">Performing upgrade head...</span><br><span class="line">INFO  [alembic.runtime.migration] Context impl MySQLImpl.</span><br><span class="line">INFO  [alembic.runtime.migration] Will assume non-transactional DDL.</span><br><span class="line">Upgrade performed.</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 配置docker-compose.yml<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/tuniu/docker/harbor/docker-compose.yml </span><br><span class="line"> </span><br><span class="line">version: <span class="string">'2'</span></span><br><span class="line">services:</span><br><span class="line">  <span class="built_in">log</span>:</span><br><span class="line">    image: vmware/harbor-log:0.5.0</span><br><span class="line">    container_name: harbor-log</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/tuniu/docker/harbor/logs/harbor/:/var/<span class="built_in">log</span>/docker/</span><br><span class="line">    ports:</span><br><span class="line">      - 1514:514</span><br><span class="line">  registry:</span><br><span class="line">    image: library/registry:2.5.0</span><br><span class="line">    container_name: registry</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/tuniu/docker/harbor/data/registry:/storage</span><br><span class="line">      - ./common/config/registry/:/etc/registry/</span><br><span class="line">    environment:</span><br><span class="line">      - GODEBUG=netdns=cgo</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      [<span class="string">"serve"</span>, <span class="string">"/etc/registry/config.yml"</span>]</span><br><span class="line">    depends_on:</span><br><span class="line">      - <span class="built_in">log</span></span><br><span class="line">    logging:</span><br><span class="line">      driver: <span class="string">"syslog"</span></span><br><span class="line">      options:</span><br><span class="line">        syslog-address: <span class="string">"tcp://127.0.0.1:1514"</span></span><br><span class="line">        tag: <span class="string">"registry"</span></span><br><span class="line">  mysql:</span><br><span class="line">    image: vmware/harbor-db:0.5.0</span><br><span class="line">    container_name: harbor-db</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/tuniu/docker/harbor/data/database:/var/lib/mysql</span><br><span class="line">    env_file:</span><br><span class="line">      - ./common/config/db/env</span><br><span class="line">    depends_on:</span><br><span class="line">      - <span class="built_in">log</span></span><br><span class="line">    logging:</span><br><span class="line">      driver: <span class="string">"syslog"</span></span><br><span class="line">      options:</span><br><span class="line">        syslog-address: <span class="string">"tcp://127.0.0.1:1514"</span></span><br><span class="line">        tag: <span class="string">"mysql"</span></span><br><span class="line">  ui:</span><br><span class="line">    image: vmware/harbor-ui:0.5.0</span><br><span class="line">    container_name: harbor-ui</span><br><span class="line">    env_file:</span><br><span class="line">      - ./common/config/ui/env</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - ./common/config/ui/app.conf:/etc/ui/app.conf</span><br><span class="line">      - ./common/config/ui/private_key.pem:/etc/ui/private_key.pem</span><br><span class="line">      - /opt/tuniu/docker/harbor/data/ui:/harbor_storage</span><br><span class="line">    depends_on:</span><br><span class="line">      - <span class="built_in">log</span></span><br><span class="line">    logging:</span><br><span class="line">      driver: <span class="string">"syslog"</span></span><br><span class="line">      options:</span><br><span class="line">        syslog-address: <span class="string">"tcp://127.0.0.1:1514"</span></span><br><span class="line">        tag: <span class="string">"ui"</span></span><br><span class="line">  jobservice:</span><br><span class="line">    image: vmware/harbor-jobservice:0.5.0</span><br><span class="line">    container_name: harbor-jobservice</span><br><span class="line">    env_file:</span><br><span class="line">      - ./common/config/jobservice/env</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - /opt/tuniu/docker/harbor/data/job_logs:/var/<span class="built_in">log</span>/<span class="built_in">jobs</span></span><br><span class="line">      - ./common/config/jobservice/app.conf:/etc/jobservice/app.conf</span><br><span class="line">    depends_on:</span><br><span class="line">      - ui</span><br><span class="line">    logging:</span><br><span class="line">      driver: <span class="string">"syslog"</span></span><br><span class="line">      options:</span><br><span class="line">        syslog-address: <span class="string">"tcp://127.0.0.1:1514"</span></span><br><span class="line">        tag: <span class="string">"jobservice"</span></span><br><span class="line">  proxy:</span><br><span class="line">    image: nginx:1.11.5</span><br><span class="line">    container_name: nginx</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - ./common/config/nginx:/etc/nginx</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">      - 443:443</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">      - registry</span><br><span class="line">      - ui</span><br><span class="line">      - <span class="built_in">log</span></span><br><span class="line">    logging:</span><br><span class="line">      driver: <span class="string">"syslog"</span></span><br><span class="line">      options:</span><br><span class="line">        syslog-address: <span class="string">"tcp://127.0.0.1:1514"</span></span><br><span class="line">        tag: <span class="string">"proxy"</span></span><br><span class="line">```     </span><br><span class="line"> </span><br><span class="line">&lt;i class=<span class="string">"fa fa-angle-double-right fa-lg"</span>&gt;&lt;/i&gt; 配置harbor.cfg</span><br><span class="line">``` bash</span><br><span class="line">vim /opt/tuniu/docker/harbor/harbor.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">## Configuration file of Harbor</span></span><br><span class="line"><span class="comment">#The IP address or hostname to access admin UI and registry service.</span></span><br><span class="line"><span class="comment">#DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.</span></span><br><span class="line">hostname = tcr.tuniu.io</span><br><span class="line"></span><br><span class="line"><span class="comment">#The protocol for accessing the UI and token/notification service, by default it is http.</span></span><br><span class="line"><span class="comment">#It can be set to https if ssl is enabled on nginx.</span></span><br><span class="line">ui_url_protocol = https</span><br><span class="line"></span><br><span class="line"><span class="comment">#Email account settings for sending out password resetting emails.</span></span><br><span class="line"><span class="comment">#Email server uses the given username and password to authenticate on TLS connections to host and act as identity.</span></span><br><span class="line"><span class="comment">#Identity left blank to act as username.</span></span><br><span class="line">email_identity = Mail Config</span><br><span class="line">email_server = xxxxx.tuniu.com</span><br><span class="line">email_server_port = 25</span><br><span class="line">email_username = xxxxx@tuniu.com</span><br><span class="line">email_password = xxxxx</span><br><span class="line">email_from = xxxxx@tuniu.com</span><br><span class="line">email_ssl = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##The initial password of Harbor admin, only works for the first time when Harbor starts. </span></span><br><span class="line"><span class="comment">#It has no effect after the first launch of Harbor.</span></span><br><span class="line"><span class="comment">#Change the admin password from UI after launching Harbor.</span></span><br><span class="line">harbor_admin_password = XXXXX</span><br><span class="line"></span><br><span class="line"><span class="comment">##By default the auth mode is db_auth, i.e. the credentials are stored in a local database.</span></span><br><span class="line"><span class="comment">#Set it to ldap_auth if you want to verify a user's credentials against an LDAP server.</span></span><br><span class="line">auth_mode = ldap_auth</span><br><span class="line"></span><br><span class="line"><span class="comment">#The url for an ldap endpoint.</span></span><br><span class="line">ldap_url = ldaps://ldap.tuniu.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#A user's DN who has the permission to search the LDAP/AD server. </span></span><br><span class="line"><span class="comment">#If your LDAP/AD server does not support anonymous search, you should configure this DN and ldap_search_pwd.</span></span><br><span class="line">ldap_searchdn = cn=xxxxx,ou=应用账号(启用),ou=途牛服务账户,dc=tuniu-inc,dc=com</span><br><span class="line"></span><br><span class="line"><span class="comment">#the password of the ldap_searchdn</span></span><br><span class="line">ldap_search_pwd = xxxxxxx</span><br><span class="line"></span><br><span class="line"><span class="comment">#The base DN from which to look up a user in LDAP/AD</span></span><br><span class="line">ldap_basedn = ou=途牛用户账户,dc=tuniu-inc,dc=com</span><br><span class="line"></span><br><span class="line"><span class="comment">#Search filter for LDAP/AD, make sure the syntax of the filter is correct.</span></span><br><span class="line"><span class="comment">#ldap_filter = (objectClass=person)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The attribute used in a search to match a user, it could be uid, cn, email, sAMAccountName or other attributes depending on your LDAP/AD  </span></span><br><span class="line">ldap_uid = sAMAccountName</span><br><span class="line"></span><br><span class="line"><span class="comment">#the scope to search for users, 1-LDAP_SCOPE_BASE, 2-LDAP_SCOPE_ONELEVEL, 3-LDAP_SCOPE_SUBTREE</span></span><br><span class="line">ldap_scope = 3 </span><br><span class="line"></span><br><span class="line"><span class="comment">#The password for the root user of mysql db, change this before any production use.</span></span><br><span class="line">db_password = root123</span><br><span class="line"></span><br><span class="line"><span class="comment">#Turn on or off the self-registration feature</span></span><br><span class="line">self_registration = on</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Determine whether the UI should use compressed js files. </span></span><br><span class="line"><span class="comment">#For production, set it to on. For development, set it to off.</span></span><br><span class="line">use_compressed_js = on</span><br><span class="line"></span><br><span class="line"><span class="comment">#Maximum number of job workers in job service  </span></span><br><span class="line">max_job_workers = 3 </span><br><span class="line"></span><br><span class="line"><span class="comment">#The expiration time (in minute) of token created by token service, default is 30 minutes</span></span><br><span class="line">token_expiration = 30</span><br><span class="line"></span><br><span class="line"><span class="comment">#Determine whether the job service should verify the ssl cert when it connects to a remote registry.</span></span><br><span class="line"><span class="comment">#Set this flag to off when the remote registry uses a self-signed or untrusted certificate.</span></span><br><span class="line">verify_remote_cert = on</span><br><span class="line"></span><br><span class="line"><span class="comment">#Determine whether or not to generate certificate for the registry's token.</span></span><br><span class="line"><span class="comment">#If the value is on, the prepare script creates new root cert and private key </span></span><br><span class="line"><span class="comment">#for generating token to access the registry. If the value is off, a key/certificate must </span></span><br><span class="line"><span class="comment">#be supplied for token generation.</span></span><br><span class="line">customize_crt = on</span><br><span class="line"></span><br><span class="line"><span class="comment">#Information of your organization for certificate</span></span><br><span class="line">crt_country = CN</span><br><span class="line">crt_state = State</span><br><span class="line">crt_location = CN</span><br><span class="line">crt_organization = organization</span><br><span class="line">crt_organizationalunit = organizational unit</span><br><span class="line">crt_commonname = example.com</span><br><span class="line">crt_email = example@example.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#The flag to control what users have permission to create projects</span></span><br><span class="line"><span class="comment">#Be default everyone can create a project, set to "adminonly" such that only admin can create project.</span></span><br><span class="line">project_creation_restriction = everyone</span><br><span class="line"></span><br><span class="line"><span class="comment">#The path of cert and key files for nginx, they are applied only the protocol is set to https</span></span><br><span class="line">ssl_cert = /opt/tuniu/docker/harbor/ssl/tuniu.io.crt</span><br><span class="line">ssl_cert_key = /opt/tuniu/docker/harbor/ssl/tuniu.io.key</span><br><span class="line"><span class="comment">#############</span></span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 初始化配置文件<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@harbor-hx-191-176 harbor]<span class="comment"># /opt/tuniu/docker/harbor/prepare </span></span><br><span class="line">generated and saved secret key</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/nginx/nginx.conf</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/ui/env</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/ui/app.conf</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/registry/config.yml</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/db/env</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/jobservice/env</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/jobservice/app.conf</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/ui/private_key.pem</span><br><span class="line">Generated configuration file: /opt/tuniu/docker/harbor/common/config/registry/root.crt</span><br><span class="line">The configuration files are ready, please use docker-compose to start the service.</span><br></pre></td></tr></table></figure></p><p>vim /opt/tuniu/docker/harbor/common/config/nginx/nginx.conf </p><p><img src="/images/pasted-52.png" alt> </p><p><i class="fa fa-angle-double-right fa-lg"></i> 构建</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@harbor-hx-191-176 harbor]<span class="comment"># docker-compose up -d</span></span><br><span class="line">Creating network <span class="string">"harbor_default"</span> with the default driver</span><br><span class="line">Creating harbor-log</span><br><span class="line">Creating harbor-ui</span><br><span class="line">Creating harbor-db</span><br><span class="line">Creating registry</span><br><span class="line">Creating harbor-jobservice</span><br><span class="line">Creating nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Harbor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADSL代理之单线多播(docker部署)</title>
      <link href="/uncategorized/345149809.html"/>
      <url>/uncategorized/345149809.html</url>
      
        <content type="html"><![CDATA[<h5 id="安装ovs"><a href="#安装ovs" class="headerlink" title=" 安装ovs"></a><i class="fa fa-caret-right fa-lg"></i> 安装ovs</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh openvswitch-2.5.0-1.x86_64.rpm &amp;&amp; /etc/init.d/openvswitch start</span><br></pre></td></tr></table></figure><h5 id="配置OVS"><a href="#配置OVS" class="headerlink" title=" 配置OVS"></a><i class="fa fa-caret-right fa-lg"></i> 配置OVS</h5> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@squid-nj-51-11 ~]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-br0 </span></span><br><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">DEVICE=<span class="string">"br0"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br><span class="line">IPADDR=10.0.51.11</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">HOTPLUG=no</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@squid-nj-51-11 ~]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line">DEVICE=eth0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=static</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@squid-nj-51-11 ~]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth1</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">DEVICE=eth1</span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ovs-vsctl add-br br0  </span><br><span class="line">ovs-vsctl add-port br0 eth0</span><br><span class="line">ovs-vsctl add-port br0 eth1</span><br><span class="line"> </span><br><span class="line">[root@squid-nj-51-11 ~]<span class="comment"># ovs-vsctl show</span></span><br><span class="line">    Bridge <span class="string">"br0"</span></span><br><span class="line">        Port <span class="string">"eth1"</span></span><br><span class="line">            Interface <span class="string">"eth1"</span></span><br><span class="line">        Port <span class="string">"eth0"</span></span><br><span class="line">            Interface <span class="string">"eth0"</span></span><br><span class="line">        Port <span class="string">"br0"</span></span><br><span class="line">            Interface <span class="string">"br0"</span></span><br><span class="line">                <span class="built_in">type</span>: internal</span><br><span class="line">    ovs_version: <span class="string">"2.5.0</span></span><br></pre></td></tr></table></figure><h5 id="配置Dockerfile"><a href="#配置Dockerfile" class="headerlink" title=" 配置Dockerfile"></a><i class="fa fa-caret-right fa-lg"></i> 配置Dockerfile</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[yongjianhu@puppet adsl]$ cat Dockerfile </span><br><span class="line">FROM tcr.tuniu.io/public/centos:6.7</span><br><span class="line">RUN yum install -y net-tools squid openssh-server rp-pppoe iptables vim-enhanced traceroute passwd sudo</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">'"02512787188"     *    "093627"'</span> &gt;&gt; /etc/ppp/pap-secrets</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"nameserver 218.2.135.1"</span> &gt; /etc/resolv.conf</span><br><span class="line">ADD ifcfg-ppp0 /etc/sysconfig/network-scripts</span><br><span class="line">ADD squid.conf /etc/squid</span><br><span class="line">ADD options /etc/ppp</span><br><span class="line">ADD iptables /etc/sysconfig</span><br><span class="line">ADD sudoers /etc</span><br><span class="line">ADD service.sh /opt</span><br></pre></td></tr></table></figure><h5 id="编译并上传Harbor仓库"><a href="#编译并上传Harbor仓库" class="headerlink" title=" 编译并上传Harbor仓库"></a><i class="fa fa-caret-right fa-lg"></i> 编译并上传Harbor仓库</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t tcr.tuniu.io/adsl/adsl . --no-cache</span><br><span class="line">docker push tcr.tuniu.io/adsl/adsl</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-50.png" alt></p><h5 id="服务器安装docker-engine及pull镜像"><a href="#服务器安装docker-engine及pull镜像" class="headerlink" title=" 服务器安装docker-engine及pull镜像"></a><i class="fa fa-caret-right fa-lg"></i> 服务器安装docker-engine及pull镜像</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull tcr.tuniu.io/adsl/adsl:02512787188</span><br></pre></td></tr></table></figure><h5 id="批量启动docker实例"><a href="#批量启动docker实例" class="headerlink" title=" 批量启动docker实例"></a><i class="fa fa-caret-right fa-lg"></i> 批量启动docker实例</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">cat /root/adsl.txt |grep -Ev <span class="string">"^#|^$"</span> | <span class="keyword">while</span> <span class="built_in">read</span> id ip</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        docker run --name=adsl<span class="variable">$id</span> -itd  --net=none --privileged tcr.tuniu.io/adsl/adsl:02512787190 /bin/bash</span><br><span class="line">        ovs-docker add-port br0 eth0 adsl<span class="variable">$id</span> --ipaddress=<span class="variable">$ip</span></span><br><span class="line">        docker <span class="built_in">exec</span> -itd adsl<span class="variable">$id</span> <span class="string">"/opt/service.sh"</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">"\033[32;1mAdd adsl<span class="variable">$id</span> ok!\033[0m"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">docker ps | grep -E adsl[0-9]&#123;2&#125; &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="keyword">for</span> id <span class="keyword">in</span> `docker ps | grep -E adsl[0-9]&#123;2&#125; |awk <span class="string">'&#123;print $10&#125;'</span>`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        docker stop <span class="variable">$id</span>  &amp;&gt; /dev/null &amp;&amp; docker rm <span class="variable">$id</span> &amp;&gt; /dev/null</span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">"\033[31;1mDelete <span class="variable">$id</span> ok!\033[0m"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#ovs-vsctl show |grep -Ev "eth0|eth1|br0" |grep Port |awk '&#123;print $2&#125;' |awk -F\" '&#123;print $2&#125;'</span></span><br><span class="line">ovs-vsctl show |grep -Ev <span class="string">"eth0|eth1|br0"</span> |grep Port |awk <span class="string">'&#123;print $2&#125;'</span> |awk -F\<span class="string">" '&#123;print <span class="variable">$2</span>&#125;'| grep l &amp;&gt; /dev/null</span></span><br><span class="line"><span class="string">#ovs-vsctl show |grep "</span>No such device<span class="string">" &amp;&gt; /dev/null</span></span><br><span class="line"><span class="string">if [ $? -eq 0 ];then</span></span><br><span class="line"><span class="string">    for i in `ovs-vsctl show |grep "</span>No such device<span class="string">" |awk '&#123;print <span class="variable">$7</span>&#125;'`</span></span><br><span class="line"><span class="string">        do</span></span><br><span class="line"><span class="string">            ovs-vsctl del-port br0 <span class="variable">$i</span></span></span><br><span class="line"><span class="string">        done</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    exit 2</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">test() &#123;</span></span><br><span class="line"><span class="string">cat /root/adsl.txt |grep -Ev "</span>^<span class="comment">#|^$" | while read id ip</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ip=`<span class="built_in">echo</span> <span class="variable">$ip</span>| awk -F/ <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line">    curl -x <span class="variable">$ip</span>:3000 <span class="string">"http://ip.cn"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">    <span class="built_in">test</span>)</span><br><span class="line">        <span class="built_in">test</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|test&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 3</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手动指定pppoe拨号生成PPP接口ID</title>
      <link href="/uncategorized/702384175.html"/>
      <url>/uncategorized/702384175.html</url>
      
        <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title=" 背景"></a><i class="fa fa-caret-right fa-lg"></i> 背景</h5><p>当在一台服务上进行pppoe多次拨号后，会生成相应的ppp0 ppp1等接口名称，当我们对ppp0所在的接口重新拨号后，重新生成的接口不一定是ppp0，由于自动重启脚本是针对接口进行重启，所以我们需要固定好ppp接口，即使重启接口id也不会发生变化！</p><h5 id="修改系统拨号脚本"><a href="#修改系统拨号脚本" class="headerlink" title=" 修改系统拨号脚本"></a><i class="fa fa-caret-right fa-lg"></i> 修改系统拨号脚本</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 脚本启动做如下约定<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /usr/sbin/adsl-start /etc/sysconfig/network-scripts/ifcfg-ppp0</span><br></pre></td></tr></table></figure></p><p>在进行拨号传递<code>$@</code>参数时，<code>$@</code>的值为<code>/etc/sysconfig/network-scripts/ifcfg-ppp0</code></p><p><i class="fa fa-angle-double-right fa-lg"></i> 修改/sbin/pppoe-connect拨号脚本<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /sbin/pppoe-connect </span><br><span class="line"> </span><br><span class="line"><span class="comment">#Manual Set PPP Interface ID</span></span><br><span class="line"><span class="comment">#--------------------------------------------------------------------</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32;1m<span class="variable">$@</span>\033[0m"</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$@</span>"</span> = <span class="string">"/etc/sysconfig/network-scripts/ifcfg-ppp0"</span> ];<span class="keyword">then</span></span><br><span class="line">    UNIT=<span class="string">"unit 0"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$@</span>"</span> = <span class="string">"/etc/sysconfig/network-scripts/ifcfg-ppp1"</span> ];<span class="keyword">then</span></span><br><span class="line">    UNIT=<span class="string">"unit 1"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$@</span>"</span> = <span class="string">"/etc/sysconfig/network-scripts/ifcfg-ppp2"</span> ];<span class="keyword">then</span></span><br><span class="line">    UNIT=<span class="string">"unit 2"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$@</span>"</span> = <span class="string">"/etc/sysconfig/network-scripts/ifcfg-ppp3"</span> ];<span class="keyword">then</span></span><br><span class="line">    UNIT=<span class="string">"unit 3"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$@</span>"</span> = <span class="string">"/etc/sysconfig/network-scripts/ifcfg-ppp4"</span> ];<span class="keyword">then</span></span><br><span class="line">    UNIT=<span class="string">"unit 4"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$@</span>"</span> = <span class="string">"/etc/sysconfig/network-scripts/ifcfg-ppp5"</span> ];<span class="keyword">then</span></span><br><span class="line">    UNIT=<span class="string">"unit 5"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$@</span>"</span> = <span class="string">"/etc/sysconfig/network-scripts/ifcfg-ppp6"</span> ];<span class="keyword">then</span></span><br><span class="line">    UNIT=<span class="string">"unit 6"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#--------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 将$UNIT追加至PPP_STD_OPTIONS参数<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PPP_STD_OPTIONS=<span class="string">"<span class="variable">$IPPARAM</span> <span class="variable">$LINKNAME</span> <span class="variable">$PLUGIN_OPTS</span> noipdefault noauth default-asyncmap <span class="variable">$DEFAULTROUTE</span> hide-password nodetach <span class="variable">$PEERDNS</span> mtu <span class="variable">$MTU</span> mru <span class="variable">$MRU</span> noaccomp nodeflate nopcomp novj novjccomp user <span class="variable">$USER</span> lcp-echo-interval <span class="variable">$LCP_INTERVAL</span> lcp-echo-failure <span class="variable">$LCP_FAILURE</span> <span class="variable">$PPPD_EXTRA</span> <span class="variable">$UNIT</span>"</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ADSL Squid代理部署</title>
      <link href="/uncategorized/3504479779.html"/>
      <url>/uncategorized/3504479779.html</url>
      
        <content type="html"><![CDATA[<h5 id="HTTP代理相关知识"><a href="#HTTP代理相关知识" class="headerlink" title=" HTTP代理相关知识"></a><i class="fa fa-caret-right fa-lg"></i> HTTP代理相关知识</h5><ul><li><p>透明代理:也叫普通代理，它不但改变了我们的请求信息，还会传送真实的IP地址。从：HTTP_X_FORWARDED_FOR 等代理信息可以查到我们IP地址！</p></li><li><p>匿名代理:普通匿名代理，它能隐藏客户机的真实IP，但会改变我们的请求信息。它不传送正式ip，但是可能会发送HTTP_VIA、 HTTP_PROXY_CONNECTION 信息，还是可以通过这些判断出使用了代理！</p></li><li><p>高级匿名代理:不改变客户机的请求，这样在服务器看来就像有个真正的客户浏览器在访问它，这时客户的真实IP是隐藏的，服务器端不会认为我们使用了代理！</p></li><li><p>HTTP通道:http代理服务器支持Connect请求，这类代理服务器基本可以代理所有软件，如：QQ,FoxMail,FTP等等，不支持通道的HTTP代理，基本上只支持简单的Http GET,POST等请求服务！</p></li></ul><a id="more"></a><h5 id="SOCKS代理知识"><a href="#SOCKS代理知识" class="headerlink" title=" SOCKS代理知识"></a><i class="fa fa-caret-right fa-lg"></i> SOCKS代理知识</h5><p>SOCKS5:常见SOCKS代理有Socks4,socks5，不过目前基本上以socks5代理为主，它基本支持所有客户端请求协议，Http,Ftp,Smtp等，可以具备高级匿名代理隐藏功能！</p><h5 id="核心技术原理"><a href="#核心技术原理" class="headerlink" title=" 核心技术原理"></a><i class="fa fa-caret-right fa-lg"></i> 核心技术原理</h5><ul><li><p>一条ADSL一个vlan，和服务器相连的端口做trunk。为什么要一条adsl一个vlan？因为南京电信会对每个adsl账号做mac地址限制，一个mac地址只能拨两个号，这也是为什么当多个adsl同时拨号时只有两条adsl可用。</p></li><li><p>linux服务器上创建和adsl的vlan ID相同的虚拟接口。为什么要在linux创建vlan虚接口？实现和adsl的隔离，减少相互干扰，每条adsl彼此独立，而且如果用子网卡的话，不能修改mac地址，即使修改成功，所有的子网卡和主网卡的mac也是一致的，不能满足多条adsl同时拨号的的要求，故必须采用vlan虚接口。</p></li><li><p>接光纤的网卡采用子网卡挂多个公网ip</p></li><li><p>linux服务器采用源地址路由技术。为什么？squid的tcp_outgoing_address只支持ip地址，不支持设备名（如ppp0、eth0），且adsl拨号获得的ip也会变化，故需要给vlan子接口配置私有固定ip，通过源地址路由绑定出口adsl。</p></li><li><p>通过squid的账号进行出口ip选择tcp_outgoing_address</p></li></ul><h5 id="vlan交换机配置-省略"><a href="#vlan交换机配置-省略" class="headerlink" title=" vlan交换机配置(省略)"></a><i class="fa fa-caret-right fa-lg"></i> vlan交换机配置(省略)</h5><h5 id="准备工作"><a href="#准备工作" class="headerlink" title=" 准备工作"></a><i class="fa fa-caret-right fa-lg"></i> 准备工作</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 开始之前</p><div class="note ">            <p>操作系统版本：Ceontos6.5 X64<br>网卡接入：eth0（内网IP 10.10.10.248 ） eth1：adsl拨号<br>添加静态路由后，删除eth0默认网关（10.10.10.250）</p>          </div><h5 id="安装squid、pppoe组件"><a href="#安装squid、pppoe组件" class="headerlink" title=" 安装squid、pppoe组件"></a><i class="fa fa-caret-right fa-lg"></i> 安装squid、pppoe组件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install squid *pppoe*</span><br></pre></td></tr></table></figure><h5 id="ADSL帐号密码、相应vlan-id、虚拟网卡地址等（以下以铁通adsl为例）"><a href="#ADSL帐号密码、相应vlan-id、虚拟网卡地址等（以下以铁通adsl为例）" class="headerlink" title=" ADSL帐号密码、相应vlan id、虚拟网卡地址等（以下以铁通adsl为例）"></a><i class="fa fa-caret-right fa-lg"></i> ADSL帐号密码、相应vlan id、虚拟网卡地址等（以下以铁通adsl为例）</h5><table><thead><tr><th>id</th><th>account</th><th>pasword</th><th>vlan_id</th><th>virtual_mac</th><th>virtual_ip</th><th>port</th><th>ppp</th></tr></thead><tbody><tr><td>1</td><td>z68237300</td><td>68237300</td><td>1001</td><td>78:2B:CB:24:63:01</td><td>192.168.101.2</td><td>3000</td><td>ppp0</td></tr><tr><td>2</td><td>z68237301</td><td>68237301</td><td>1002</td><td>78:2B:CB:24:63:02</td><td>192.168.102.2</td><td>3001</td><td>ppp1</td></tr></tbody></table><h5 id="配置虚拟网卡及对应VLAN配置（以eth1-1001为例）"><a href="#配置虚拟网卡及对应VLAN配置（以eth1-1001为例）" class="headerlink" title=" 配置虚拟网卡及对应VLAN配置（以eth1.1001为例）"></a><i class="fa fa-caret-right fa-lg"></i> 配置虚拟网卡及对应VLAN配置（以eth1.1001为例）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe 8021q</span><br><span class="line">vconfig add eth1 1001</span><br></pre></td></tr></table></figure><h5 id="配置ifcfg-eth1-1001网卡文件（配置虚拟IP地址、DEVICE设备名称）"><a href="#配置ifcfg-eth1-1001网卡文件（配置虚拟IP地址、DEVICE设备名称）" class="headerlink" title=" 配置ifcfg-eth1.1001网卡文件（配置虚拟IP地址、DEVICE设备名称）"></a><i class="fa fa-caret-right fa-lg"></i> 配置ifcfg-eth1.1001网卡文件（配置虚拟IP地址、DEVICE设备名称）</h5><p><img src="/images/pasted-43.png" alt></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip link <span class="built_in">set</span> dev eth1.1001 address 78:2B:CB:24:63:01（设置虚拟MAC地址）</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-44.png" alt></p><h5 id="pppoe配置（修改配置文件-etc-ppp-pap-secrets，添加帐号密码等信息）"><a href="#pppoe配置（修改配置文件-etc-ppp-pap-secrets，添加帐号密码等信息）" class="headerlink" title=" pppoe配置（修改配置文件/etc/ppp/pap-secrets，添加帐号密码等信息）"></a><i class="fa fa-caret-right fa-lg"></i> pppoe配置（修改配置文件/etc/ppp/pap-secrets，添加帐号密码等信息）</h5><p><img src="/images/pasted-45.png" alt></p><h5 id="新增配置文件-etc-sysconfig-network-scripts-ifcfg-ppp0（按需修改红色部分）"><a href="#新增配置文件-etc-sysconfig-network-scripts-ifcfg-ppp0（按需修改红色部分）" class="headerlink" title=" 新增配置文件/etc/sysconfig/network-scripts/ifcfg-ppp0（按需修改红色部分）"></a><i class="fa fa-caret-right fa-lg"></i> 新增配置文件/etc/sysconfig/network-scripts/ifcfg-ppp0（按需修改红色部分）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">USERCTL=yes</span><br><span class="line">BOOTPROTO=dialup</span><br><span class="line">NAME=DSLppp0</span><br><span class="line">DEVICE=ppp0</span><br><span class="line">TYPE=xDSL</span><br><span class="line">ONBOOT=yes</span><br><span class="line">PIDFILE=/var/run/pppoe-adsl0.pid</span><br><span class="line">FIREWALL=NONE</span><br><span class="line">PING=.</span><br><span class="line">PPPOE_TIMEOUT=80</span><br><span class="line">LCP_FAILURE=3</span><br><span class="line">LCP_INTERVAL=20</span><br><span class="line">CLAMPMSS=1412</span><br><span class="line">CONNECT_POLL=6</span><br><span class="line">CONNECT_TIMEOUT=60</span><br><span class="line">DEFROUTE=no</span><br><span class="line">SYNCHRONOUS=no</span><br><span class="line">ETH=eth0.1001</span><br><span class="line">PROVIDER=DSLppp0</span><br><span class="line">USER=z68237300</span><br><span class="line">PEERDNS=no</span><br><span class="line">DEMAND=no</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-46.png" alt></p><h5 id="修改-etc-sysconfig-network-scripts-route-ppp0"><a href="#修改-etc-sysconfig-network-scripts-route-ppp0" class="headerlink" title=" 修改/etc/sysconfig/network-scripts/route-ppp0"></a><i class="fa fa-caret-right fa-lg"></i> 修改/etc/sysconfig/network-scripts/route-ppp0</h5><p><img src="/images/pasted-47.png" alt></p><h5 id="策略路由及NAT"><a href="#策略路由及NAT" class="headerlink" title=" 策略路由及NAT"></a><i class="fa fa-caret-right fa-lg"></i> 策略路由及NAT</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip rule add from 192.168.101.2 lookup 1001</span><br><span class="line">/sbin/iptables -t nat -A POSTROUTING -s 192.168.101.2/255.255.255.255 -o ppp0 -j MASQUERADE</span><br></pre></td></tr></table></figure><h5 id="启动squid"><a href="#启动squid" class="headerlink" title=" 启动squid"></a><i class="fa fa-caret-right fa-lg"></i> 启动squid</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /etc/squid/squid.conf /etc/squid/squid_ppp0.conf</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 修改如下3项<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http_port 3000</span><br><span class="line">tcp_outgoing_address 192.168.101.2</span><br><span class="line">pid_filename /var/run/squid_ppp0.pid</span><br><span class="line">启动squid</span><br><span class="line">/usr/sbin/squid -f /etc/squid/squid_ppp0.conf</span><br></pre></td></tr></table></figure></p><p>备注：最后重复完成剩余线路配置！</p><h5 id="代理检测网站"><a href="#代理检测网站" class="headerlink" title=" 代理检测网站"></a><i class="fa fa-caret-right fa-lg"></i> 代理检测网站</h5><ul><li><span class="exturl" data-url="aHR0cDovL3d3dy5zdGlsbGxpc3RlbmVyLmNvbS9jaGVja3BvaW50MS9KYXZhLw==" title="http://www.stilllistener.com/checkpoint1/Java/">http://www.stilllistener.com/checkpoint1/Java/<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3dlYi5jaGFjdW8ubmV0L25ldHByb3h5Y2hlY2s=" title="http://web.chacuo.net/netproxycheck">http://web.chacuo.net/netproxycheck<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5pcDE4MS5jb20v" title="http://www.ip181.com/">http://www.ip181.com/<i class="fa fa-external-link"></i></span></li></ul><h5 id="Squid代理设置高匿"><a href="#Squid代理设置高匿" class="headerlink" title=" Squid代理设置高匿"></a><i class="fa fa-caret-right fa-lg"></i> Squid代理设置高匿</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 未设置前（X_FORWARDED_FOR HTTP_VIA暴露客户端及代理服务器信息，容易被封杀）</p><p><img src="/images/pasted-48.png" alt></p><p><i class="fa fa-angle-double-right fa-lg"></i> 设置后<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#高匿设置（Centos6.7 squid-3.1.23-16.el6_8.6.x86_64）</span></span><br><span class="line">request_header_access Via deny all</span><br><span class="line">request_header_access X-Forwarded-For deny all</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment">#高匿设置（Centos5.5 squid-2.6.STABLE21-7.el5_10）</span></span><br><span class="line">via off</span><br><span class="line">forwarded_for off</span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-49.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> Squid </tag>
            
            <tag> Proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cobbler部署</title>
      <link href="/uncategorized/1183833045.html"/>
      <url>/uncategorized/1183833045.html</url>
      
        <content type="html"><![CDATA[<h5 id="cobbler介绍"><a href="#cobbler介绍" class="headerlink" title=" cobbler介绍"></a><i class="fa fa-caret-right fa-lg"></i> cobbler介绍</h5><ul><li><p>Cobbler是一个快速网络安装linux的服务，而且在经过调整也可以支持网络安装windows。该工具使用python开发，小巧轻便（才15k行代码），使用简单的命令即可完成PXE网络安装环境的配置，同时还可以管理DHCP，DNS，以及yum包镜像。</p></li><li><p>Cobbler支持命令行管理，web界面管理，还提供了API接口，可以方便二次开发使用。</p></li></ul><a id="more"></a><h5 id="cobbler安装准备"><a href="#cobbler安装准备" class="headerlink" title=" cobbler安装准备"></a><i class="fa fa-caret-right fa-lg"></i> cobbler安装准备</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 关闭iptables与selinux </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chkconfig iptables off </span><br><span class="line">vim /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 安装源准备并安装cobbler软件<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install debmirror</span><br><span class="line">yum -y install httpd rsync tftp-server xinetd dhcp python-ctypes pykickstart fence-agents</span><br><span class="line">rpm -ivh http://download.Fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br><span class="line"> </span><br><span class="line">yum -y install cobbler</span><br><span class="line">wget http://ftp.linux.ncsu.edu/pub/epel/6/x86_64/Django14-1.4.21-1.el6.noarch.rpm</span><br><span class="line">yum -y install cobbler-web</span><br></pre></td></tr></table></figure></p><h5 id="配置tftp-server与rsync"><a href="#配置tftp-server与rsync" class="headerlink" title=" 配置tftp-server与rsync"></a><i class="fa fa-caret-right fa-lg"></i> 配置tftp-server与rsync</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 开启tftp与rsync服务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chkconfig tftp on</span><br><span class="line">chkconfig rsync on</span><br><span class="line">chkconfig xinetd on</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 配置httpd配置文件<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line">sed -i <span class="string">"/#ServerName/a\ServerName <span class="variable">$ip</span>:80"</span> /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 配置cobbler主配置文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">"s/next_server: 127.0.0.1/next_server: <span class="variable">$ip</span>/g"</span> /etc/cobbler/settings</span><br><span class="line">sed -i <span class="string">"s/server: 127.0.0.1/server: <span class="variable">$ip</span>/g"</span> /etc/cobbler/settings</span><br><span class="line">sed -i <span class="string">"s/manage_dhcp: 0/manage_dhcp: 1/g"</span> /etc/cobbler/settings</span><br><span class="line">sed -i <span class="string">"s/manage_rsync: 0/manage_rsync: 1/g"</span> /etc/cobbler/settings</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 配置cobbler web登录认证配置文件 </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -B 1 <span class="string">"module = authn_configfile"</span> /etc/cobbler/modules.conf --color</span><br><span class="line"><span class="comment">#sed -i 's/module = authn_denyall/module = authn_configfile/g' /etc/cobbler/modules.conf</span></span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 设置Cobbler用户名密码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">htdigest /etc/cobbler/users.digest <span class="string">"Cobbler"</span> cobbler</span><br></pre></td></tr></table></figure><div class="note warning">            <p>备注：”Cobbler”务必大写，否则帐号虽然创建，会无法登录</p>          </div><p><i class="fa fa-angle-double-right fa-lg"></i> 生成Cobbler安装系统root初始密码 </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl passwd -1 -salt <span class="string">'random-phrase-here'</span> <span class="string">'root'</span>  <span class="variable">$1</span><span class="variable">$random</span>-p<span class="variable">$WbZ3JxhRzCS</span>/1Ne4S9g4Z.</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 将上面的加密串加入cobbler配置文件中</p><p><img src="/images/pasted-40.png" alt></p><p><i class="fa fa-angle-double-right fa-lg"></i> 配置DHCP<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv /etc/cobbler/dhcp.template /etc/cobbler/dhcp.template.bak</span><br><span class="line">vim /etc/cobbler/dhcp.template</span><br><span class="line">ddns-update-style interim;</span><br><span class="line">allow booting;</span><br><span class="line">allow bootp;</span><br><span class="line">ignore client-updates;</span><br><span class="line"><span class="built_in">set</span> vendorclass = option vendor-class-identifier;</span><br><span class="line">subnet 192.168.10.0 netmask 255.255.255.0 &#123;</span><br><span class="line">option routers 192.168.10.1;</span><br><span class="line">option domain-name-servers 192.168.10.1;</span><br><span class="line">option subnet-mask 255.255.255.0;</span><br><span class="line">range dynamic-bootp 192.168.10.200 192.168.10.220;</span><br><span class="line">filename <span class="string">"/pxelinux.0"</span>;</span><br><span class="line">default-lease-time 21600;</span><br><span class="line">max-lease-time 43200;</span><br><span class="line">next-server <span class="variable">$next_server</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 启动相关服务<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chkconfig httpd on</span><br><span class="line">chkconfig xinetd on</span><br><span class="line">chkconfig dhcpd on</span><br><span class="line">chkconfig cobblerd on</span><br><span class="line">service httpd restart</span><br><span class="line">service xinetd restart </span><br><span class="line">service dhcpd restart </span><br><span class="line">service cobblerd restart</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 检查配置，执行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cobbler check</span><br><span class="line"> </span><br><span class="line">执行完后出现下面的信息</span><br><span class="line">The following are potential configuration items that you may want to fix:</span><br><span class="line"> </span><br><span class="line">The following are potential configuration items that you may want to fix:</span><br><span class="line">1 : service dhcpd is not running</span><br><span class="line">2 : some network boot-loaders are missing from /var/lib/cobbler/loaders, you may run <span class="string">'cobbler get-loaders'</span> to download them, or, <span class="keyword">if</span> you only want to handle x86/x86_64 netbooting, you may ensure that you have installed a *recent* version of the syslinux package installed and can ignore this message entirely.  Files <span class="keyword">in</span> this directory, should you want to support all architectures, should include pxelinux.0, menu.c32, elilo.efi, and yaboot. The <span class="string">'cobbler get-loaders'</span> <span class="built_in">command</span> is the easiest way to resolve these requirements.</span><br><span class="line">3 : file /etc/xinetd.d/rsync does not exist</span><br><span class="line">4 : comment out <span class="string">'dists'</span> on /etc/debmirror.conf <span class="keyword">for</span> proper debian support</span><br><span class="line">5 : comment out <span class="string">'arches'</span> on /etc/debmirror.conf <span class="keyword">for</span> proper debian support</span><br></pre></td></tr></table></figure></p><ol><li>暂时先忽略，因为/etc/dhcp/dhcpd.conf 文件没有配置，通过cobbler去同步配置</li><li>执行 cobbler get-loaders，系统将自动下载loader程序，完成提示2的修复工作。</li><li>忽略（感觉是系统误报）</li><li>修复debian/Ubuntu系统安装选项支持包 </li><li>修复debian/Ubuntu系统安装选项支持包</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/debmirror.conf</span><br><span class="line">注释掉如下两行。 </span><br><span class="line"><span class="comment">#@dists="sid"; </span></span><br><span class="line"><span class="comment">#@arches="i386"</span></span><br></pre></td></tr></table></figure><p>说明：前提是安装debmirror pykickstart这两个包!</p><p><img src="/images/pasted-41.png" alt></p><p><i class="fa fa-angle-double-right fa-lg"></i> 所有提示全部修复之后，执行cobbler check</p><p><i class="fa fa-angle-double-right fa-lg"></i> 执行同步 cobbler sync </p><p><i class="fa fa-angle-double-right fa-lg"></i> 再次检查配置</p><p><i class="fa fa-angle-double-right fa-lg"></i> 重启所有服务<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service cobblerd restart</span><br><span class="line">service xinetd restart</span><br><span class="line">service httpd restart</span><br><span class="line">service dhcpd restart</span><br></pre></td></tr></table></figure></p><h5 id="导入linux-ISO安装镜像"><a href="#导入linux-ISO安装镜像" class="headerlink" title=" 导入linux ISO安装镜像"></a><i class="fa fa-caret-right fa-lg"></i> 导入linux ISO安装镜像</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 挂载ISO光盘镜像<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sr0 /mnt</span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 开始导入光盘镜像<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cobbler import --path=/mnt/ --arch=x86_64 --name CentOS6.7</span><br></pre></td></tr></table></figure></p><h5 id="ks装机模版"><a href="#ks装机模版" class="headerlink" title=" ks装机模版"></a><i class="fa fa-caret-right fa-lg"></i> ks装机模版</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#platform=x86, AMD64, or Intel EM64T</span></span><br><span class="line"><span class="comment"># System authorization information</span></span><br><span class="line">auth  --useshadow  --enablemd5</span><br><span class="line"></span><br><span class="line"><span class="comment"># System bootloader configuration</span></span><br><span class="line">bootloader --location=mbr</span><br><span class="line"></span><br><span class="line"><span class="comment"># Partition clearing information</span></span><br><span class="line">clearpart --all --initlabel</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use text mode install</span></span><br><span class="line">text</span><br><span class="line"></span><br><span class="line"><span class="comment"># Firewall configuration</span></span><br><span class="line">firewall --<span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Run the Setup Agent on first boot</span></span><br><span class="line">firstboot --<span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># System keyboard</span></span><br><span class="line">keyboard us</span><br><span class="line"></span><br><span class="line"><span class="comment"># System language</span></span><br><span class="line">lang en_US</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use network installation</span></span><br><span class="line">url --url=<span class="variable">$tree</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If any cobbler repo definitions were referenced in the kickstart profile, include them here.</span></span><br><span class="line"><span class="variable">$yum_repo_stanza</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Network information</span></span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'network_config'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reboot after installation</span></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="comment">#Root password</span></span><br><span class="line">rootpw --iscrypted <span class="variable">$default_password_crypted</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SELinux configuration</span></span><br><span class="line">selinux --disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># Do not configure the X Window System</span></span><br><span class="line">skipx</span><br><span class="line"></span><br><span class="line"><span class="comment"># System timezone</span></span><br><span class="line">timezone  Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install OS instead of upgrade</span></span><br><span class="line">install</span><br><span class="line"></span><br><span class="line"><span class="comment"># Clear the Master Boot Record</span></span><br><span class="line">zerombr</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow anaconda to partition the system as needed</span></span><br><span class="line"><span class="comment">#autopart</span></span><br><span class="line">part /boot  --fstype=<span class="string">"ext4"</span> --size=500 --ondisk=sda</span><br><span class="line">part pv.01 --size=1 --grow --ondisk=sda</span><br><span class="line">volgroup vg pv.01</span><br><span class="line">logvol swap --vgname=vg --size=4096 --name=lv_swap</span><br><span class="line"><span class="comment">#logvol / --vgname=vg --size=20480 --name=lv_root</span></span><br><span class="line">logvol / --vgname=vg --size=1 --grow --name=lv_root --fstype=<span class="string">"ext4"</span></span><br><span class="line"><span class="comment">#logvol /opt --vgname=vg --size=1 --grow --name=lv_opt --fstype="ext4"</span></span><br><span class="line"> </span><br><span class="line">%pre</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'log_ks_pre'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'kickstart_start'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'pre_install_network_config'</span>)</span><br><span class="line"><span class="comment"># Enable installation monitoring</span></span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'pre_anamon'</span>)</span><br><span class="line">%end</span><br><span class="line">%packages</span><br><span class="line"><span class="comment">#$SNIPPET('func_install_if_enabled')</span></span><br><span class="line"><span class="comment">#$SNIPPET('puppet_install_if_enabled')</span></span><br><span class="line">@base</span><br><span class="line">@development</span><br><span class="line">%end</span><br><span class="line">%post</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'log_ks_post'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start yum configuration</span></span><br><span class="line"><span class="variable">$yum_config_stanza</span></span><br><span class="line"><span class="comment"># End yum configuration</span></span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'post_install_kernel_options'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'post_install_network_config'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'func_register_if_enabled'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'puppet_register_if_enabled'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'download_config_files'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'koan_environment'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'redhat_register'</span>)</span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'cobbler_register'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#system service</span></span><br><span class="line">/sbin/chkconfig --level 345 abrt-ccpp off</span><br><span class="line">/sbin/chkconfig --level 345 abrtd off</span><br><span class="line">/sbin/chkconfig --level 345 abrt-oops off</span><br><span class="line">/sbin/chkconfig --level 345 acpid off</span><br><span class="line">/sbin/chkconfig --level 345 atd off</span><br><span class="line">/sbin/chkconfig --level 345 auditd off</span><br><span class="line">/sbin/chkconfig --level 345 avahi-daemon off</span><br><span class="line">/sbin/chkconfig --level 345 cpuspeed off</span><br><span class="line">/sbin/chkconfig --level 345 haldaemon off</span><br><span class="line">/sbin/chkconfig --level 345 ip6tables off</span><br><span class="line">/sbin/chkconfig --level 345 iptables off</span><br><span class="line">/sbin/chkconfig --level 345 kdump off</span><br><span class="line">/sbin/chkconfig --level 345 mdmonitor off</span><br><span class="line">/sbin/chkconfig --level 345 messagebus off</span><br><span class="line">/sbin/chkconfig --level 345 postfix off</span><br><span class="line">/sbin/chkconfig --level 345 udev-post off</span><br><span class="line"></span><br><span class="line"><span class="comment">#limit.conf</span></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt; /etc/security/limits.conf</span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br><span class="line">* soft nproc  5000</span><br><span class="line">* hard nproc  5000</span><br><span class="line">* soft memlock  unlimited</span><br><span class="line">* hard memlock  unlimited</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#kernel</span></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt; /etc/sysctl.conf</span><br><span class="line">net.ipv4.conf.lo.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line">net.ipv4.conf.all.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 8192</span><br><span class="line">net.ipv4.tcp_keepalive_time = 1200</span><br><span class="line">net.ipv4.ip_local_port_range = 10000 65000</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 100000</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#create log dir</span></span><br><span class="line">/bin/mkdir  -p /opt/genewiznj/logs/&#123;apache,php,nginx&#125;</span><br><span class="line">/bin/mkdir  -p /etc/rsyncd/</span><br><span class="line"></span><br><span class="line"><span class="comment">#restart network</span></span><br><span class="line">/etc/init.d/network restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#install laohulab.com-repo</span></span><br><span class="line">wget http://10.105.42.17/repo/genewiznj.repo -P  /etc/yum.repos.d/</span><br><span class="line">mv /etc/yum.repos.d/CentOS*.repo /tmp/</span><br><span class="line">mv /etc/yum.repos.d/cobbler*.repo  /tmp/</span><br><span class="line">mv /etc/yum.repos.d/epel*  /tmp/</span><br><span class="line">yum clean all &amp;&amp; yum update</span><br><span class="line"></span><br><span class="line"><span class="comment">#install zabbix agent</span></span><br><span class="line"><span class="comment">#yum -y install zabbix-agent</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#install puppet</span></span><br><span class="line">yum -y install puppet </span><br><span class="line"></span><br><span class="line"><span class="comment">#install ipmitool</span></span><br><span class="line"><span class="comment">#yum -y install OpenIPMI-devel.x86_64 ipmitool.x86_64</span></span><br><span class="line"><span class="comment">#/etc/init.d/ipmi start</span></span><br><span class="line"><span class="comment">#chkconfig ipmi on</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#install lrzsz</span></span><br><span class="line">yum -y install lrzsz</span><br><span class="line"></span><br><span class="line"><span class="comment"># install mysql client</span></span><br><span class="line">yum -y install mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#install  telnet</span></span><br><span class="line">yum -y install telnet</span><br><span class="line"></span><br><span class="line"><span class="comment">#install iptraf</span></span><br><span class="line">yum -y install iptraf</span><br><span class="line"></span><br><span class="line"><span class="comment">#install screen</span></span><br><span class="line">yum -y install screen</span><br><span class="line"></span><br><span class="line"><span class="comment">#install nc</span></span><br><span class="line">yum -y install nc</span><br><span class="line"></span><br><span class="line"><span class="comment">#yum install python mysql module</span></span><br><span class="line">yum -y install MySQL-python</span><br><span class="line"></span><br><span class="line"><span class="comment">#install htop iftop</span></span><br><span class="line">yum -y install htop iftop</span><br><span class="line"></span><br><span class="line">yum -y install yum-plugin-priorities</span><br><span class="line"></span><br><span class="line">yum -y install tree</span><br><span class="line"></span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'post_install_network_config'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable post-install boot notification</span></span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'post_anamon'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start final steps</span></span><br><span class="line"><span class="variable">$SNIPPET</span>(<span class="string">'kickstart_done'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># End final steps</span></span><br><span class="line">%end</span><br></pre></td></tr></table></figure><h5 id="批量新增装机信息"><a href="#批量新增装机信息" class="headerlink" title=" 批量新增装机信息"></a><i class="fa fa-caret-right fa-lg"></i> 批量新增装机信息</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 对文本app.txt格式做如下约定</p><table><thead><tr><th>sn</th><th>ks-profile</th><th>hostname</th><th>mac</th><th>ip </th></tr></thead><tbody><tr><td>6QZKXD2</td><td>CentOS6.7-x86_64</td><td>test.com</td><td>28:F1:0E:58:53:6E</td><td>10.40.100.101</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_server</span><span class="params">()</span>:</span></span><br><span class="line">f = file(<span class="string">'/root/app.txt'</span>,<span class="string">'rb'</span>)</span><br><span class="line">f_list = f.readlines()</span><br><span class="line">f.close()</span><br><span class="line">s = os.popen(<span class="string">'cobbler system list'</span>)</span><br><span class="line">v = s.read()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f_list:</span><br><span class="line">l = line.split()</span><br><span class="line">sn = l[<span class="number">0</span>]</span><br><span class="line">profile = l[<span class="number">1</span>]</span><br><span class="line">hostname = l[<span class="number">2</span>]</span><br><span class="line">mac = l[<span class="number">3</span>]</span><br><span class="line">ip = l[<span class="number">4</span>]</span><br><span class="line">gw = <span class="string">'.'</span>.join(f_list[<span class="number">0</span>].split()[<span class="number">4</span>].split(<span class="string">'.'</span>)[<span class="number">0</span>:<span class="number">3</span>]) + <span class="string">'.250'</span></span><br><span class="line"><span class="keyword">if</span> sn <span class="keyword">in</span> v.split():</span><br><span class="line"><span class="keyword">print</span> <span class="string">'\033[31;1mError,%s exist!\033[0m'</span> % sn</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">os.system(<span class="string">'cobbler system add --name=%s --profile=%s --hostname=%s --name-servers=192.168.1.246 --mac=%s --ip-address=%s --gateway=%s --subnet=255.255.255.0 --static=1 --interface=eth0 --name-servers-search=laohulab.com --owners=admin --kopts=biosdevname=0,net.ifnames=0 --kopts-post=biosdevname=0,net.ifnames=0 --virt-bridge=xenbr0 --netboot-enabled=Y  '</span> % (sn,profile,hostname,mac,ip,gw))</span><br><span class="line"><span class="keyword">if</span> sn <span class="keyword">in</span> os.popen(<span class="string">'cobbler system list'</span>).read().split():</span><br><span class="line"><span class="keyword">print</span> <span class="string">'\033[32;1madd %s succeful!\033[0m'</span> % sn</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">'\033[31;1madd %s failer!\033[0m'</span> % sn</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">add_server()</span><br><span class="line"><span class="keyword">except</span> TypeError:</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Please input valid data!'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Cobbler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx信号控制</title>
      <link href="/uncategorized/1021054529.html"/>
      <url>/uncategorized/1021054529.html</url>
      
        <content type="html"><![CDATA[<h6 id="信号控制"><a href="#信号控制" class="headerlink" title=" 信号控制"></a><i class="fa fa-caret-right fa-lg"></i> 信号控制</h6><table><thead><tr><th>信号</th><th>描述</th></tr></thead><tbody><tr><td>TERM，INT</td><td>Quick shutdown</td></tr><tr><td>QUIT</td><td>Graceful shutdown  优雅的关闭进程,即等请求结束后再关闭</td></tr><tr><td>HUP</td><td>Configuration reload ,Start the new worker processes with a new configuration Gracefully shutdown the old worker processes 改变配置文件,平滑的重读配置文件</td></tr><tr><td>USR1</td><td>Reopen the log files 重读日志,在日志按月/日分割时有用</td></tr><tr><td>USR2</td><td>Upgrade Executable on the fly 平滑的升级</td></tr><tr><td>WINCH</td><td>Gracefully shutdown the worker processes 优雅关闭旧的进程(配合USR2来进行升级)</td></tr></tbody></table><h6 id="具体语法"><a href="#具体语法" class="headerlink" title=" 具体语法"></a><i class="fa fa-caret-right fa-lg"></i> 具体语法</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Kill -信号选项 nginx的主进程号</span><br><span class="line">Kill -信号控制 `cat /xxx/path/<span class="built_in">log</span>/nginx.pid`</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Kill -HUP 4873</span><br><span class="line">Kill -USR1 `cat /xxx/path/<span class="built_in">log</span>/nginx.pid`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑群辉宕机恢复数据</title>
      <link href="/uncategorized/3452057291.html"/>
      <url>/uncategorized/3452057291.html</url>
      
        <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title=" 背景"></a><i class="fa fa-caret-right fa-lg"></i> 背景</h5><p>黑群晖宕机后，无法通过u盘引导进入系统!</p><h5 id="恢复数据"><a href="#恢复数据" class="headerlink" title=" 恢复数据"></a><i class="fa fa-caret-right fa-lg"></i> 恢复数据</h5><ul><li>Centos6 U盘启动，并进入救援模式（带网络功能）</li><li>mdadm -Asf &amp;&amp; vgchange -ay</li><li>通过lvscan查看，把对应的分区挂载至/tmp目录，通过网络拷贝数据</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dell Racadm管理工具</title>
      <link href="/Dell/3274682442.html"/>
      <url>/Dell/3274682442.html</url>
      
        <content type="html"><![CDATA[<h5 id="Racadm"><a href="#Racadm" class="headerlink" title=" Racadm"></a><i class="fa fa-caret-right fa-lg"></i> Racadm</h5><p>racadm是直接操作dell自带的idrac的工具，ipmitool可以实现的操作通过它都可以执行，包括idrac、bios、nic、raid等等。</p> <h5 id="安装racadm"><a href="#安装racadm" class="headerlink" title=" 安装racadm"></a><i class="fa fa-caret-right fa-lg"></i> 安装racadm</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 该工具包含在Dell OMSA组件里，安装OMSA即可!</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#安装SNMP</span></span><br><span class="line">yum -y install net-snmp</span><br><span class="line">cp -p /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.bak</span><br><span class="line"> </span><br><span class="line"><span class="comment">#安装OMSA Agent</span></span><br><span class="line">yum -y install libxslt libcmpiCppImpl0 libwsman1 sblim-sfcb sblim-sfcc openwsman-client openwsman-server</span><br><span class="line">ping -c 4 linux.dell.com</span><br><span class="line"> </span><br><span class="line"><span class="comment">#配置DELL OMSA YUM安装源</span></span><br><span class="line">wget -q -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi | bash</span><br><span class="line"> </span><br><span class="line"><span class="comment">#确认repo文件已生成</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/yum.repos.d/dell-omsa-repository.repo ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">"\033[34mdell-omsa-repository.repo ok\033[0m"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#开始安装OMSA</span></span><br><span class="line">yum -y install srvadmin-all</span><br><span class="line"> </span><br><span class="line"><span class="comment">#安装srvadmin-cm软件包（srvadmin-cm是配合戴尔OpenManage Essentials进行清册，以及更新系统的）</span></span><br><span class="line">yum -y install zlib.i686 compat-libstdc++-33.i686 libstdc++.i686 libxml2.i686</span><br><span class="line">yum -y install srvadmin-cm</span><br><span class="line"> </span><br><span class="line"><span class="comment">#启动OMSA进程（端口1311）</span></span><br><span class="line">/opt/dell/srvadmin/sbin/srvadmin-services.sh start</span><br><span class="line"> </span><br><span class="line"><span class="comment">#snmp配置文件修改</span></span><br><span class="line">grep -Ev <span class="string">"^#|^$"</span> /etc/snmp/snmpd.conf.bak &gt; /etc/snmp/snmpd.conf</span><br><span class="line">sed -i <span class="string">"s/notConfigUser/OMEUser/g"</span> /etc/snmp/snmpd.conf</span><br><span class="line">sed -i <span class="string">"s/public/OME/g"</span> /etc/snmp/snmpd.conf</span><br><span class="line">sed -i <span class="string">"s/notConfigGroup/OMEGroup/g"</span> /etc/snmp/snmpd.conf</span><br><span class="line">sed -i <span class="string">"s/notConfigUser/OMEUser/g"</span> /etc/snmp/snmpd.conf</span><br><span class="line">chkconfig snmpd on</span><br><span class="line">service snmpd restart</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> RPM包安装<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://downloads.dell.com/FOLDER03574555M/1/OM-MgmtStat-Dell-Web-LX-8.3.0-1908_A00.tar.gz -P /tmp/</span><br><span class="line">tar zxvf OM-MgmtStat-Dell-Web-LX-8.3.0-1908_A00.tar.gz </span><br><span class="line"><span class="built_in">cd</span> /tmp/linux/rac/RHEL6/x86_64/</span><br><span class="line">rpm -ivh srvadmin*</span><br><span class="line">ln -s /opt/dell/srvadmin/sbin/racadm  /usr/sbin/racadm</span><br></pre></td></tr></table></figure></p><h5 id="安装racadm依赖组件"><a href="#安装racadm依赖组件" class="headerlink" title=" 安装racadm依赖组件"></a><i class="fa fa-caret-right fa-lg"></i> 安装racadm依赖组件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install openssl-devel</span><br></pre></td></tr></table></figure><h5 id="使用语法"><a href="#使用语法" class="headerlink" title=" 使用语法"></a><i class="fa fa-caret-right fa-lg"></i> 使用语法</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">racadm -r &lt;racIpAddr&gt; -u &lt;username&gt; -p &lt;password&gt; &lt;subcommand&gt; </span><br><span class="line">racadm -r &lt;racIpAddr&gt; -u &lt;username&gt; -p &lt;password&gt; get &lt;devicename&gt;.&lt;groupname&gt;.[&lt;index&gt;].[&lt;objectname&gt;]</span><br><span class="line">racadm -r &lt;racIpAddr&gt; -u &lt;username&gt; -p &lt;password&gt; <span class="built_in">set</span> &lt;devicename&gt;.&lt;groupname&gt;.[&lt;index&gt;].&lt;objectname&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h5 id="使用场景"><a href="#使用场景" class="headerlink" title=" 使用场景"></a><i class="fa fa-caret-right fa-lg"></i> 使用场景</h5><p><i class="fa fa-angle-double-right fa-lg"></i> 批量重启服务器（DELL）脚本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">idrac_user=<span class="string">"XXX"</span></span><br><span class="line">idrac_password=<span class="string">"XXX"</span></span><br><span class="line">cat /.../idrac.txt | <span class="keyword">while</span> <span class="built_in">read</span> ip</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">/opt/dell/srvadmin/sbin/racadm -r <span class="variable">$ip</span> -u <span class="variable">$idrac_user</span> -p <span class="variable">$idrac_password</span> serveraction hardreset &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[34mServer:<span class="variable">$ip</span> has been reboot successful\033[0m"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31mServer:<span class="variable">$ip</span> reboot failuer\033[0m"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 批量修改Idrac管理卡密码（DELL）脚本<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">idrac_user=<span class="string">"XXX"</span></span><br><span class="line">idrac_password=<span class="string">"XXX"</span></span><br><span class="line">cat /.../idrac.txt | grep -Ev <span class="string">"#|$"</span> | <span class="keyword">while</span> <span class="built_in">read</span> ip</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">/opt/dell/srvadmin/sbin/racadm -r <span class="variable">$ip</span> -u <span class="variable">$idrac_user</span> -p <span class="variable">$idrac_password</span> config -g cfgUserAdmin -o cfgUserAdminPassword -i 2 <span class="string">"Password"</span> &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[34mServer:<span class="variable">$ip</span> password has been modified successful\033[0m"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31mServer:<span class="variable">$ip</span> password modified failuer\033[0m"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><p><i class="fa fa-angle-double-right fa-lg"></i> 通过ssh远程修改Idrac管理卡密码<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#前提 </span></span><br><span class="line">yum -y install OpenIPMI OpenIPMI-tools OpenIPMI-devel &amp;&amp; chkconfig ipmi on &amp;&amp; service ipmi restart</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> `cat /../hexi_ssh_ok.txt | grep -Ev <span class="string">"#|$"</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ip</span></span><br><span class="line">ssh -o StrictHostKeyChecking=no yongjianhu@<span class="variable">$ip</span> <span class="string">"sudo ipmitool -I open user set password 2 password"</span></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ip</span> &gt;&gt; /home/yongjianhu/modify_idrac_password/modify_ok.txt</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ip</span> &gt;&gt; /home/yongjianhu/modify_idrac_password/modify_problem.txt</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg"></i> 清除iDrac日志信息</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">idrac_user=<span class="string">"XXX"</span></span><br><span class="line">idrac_password=<span class="string">"XXX"</span></span><br><span class="line">cat /.../idrac.txt | grep -Ev <span class="string">"#|$"</span> | <span class="keyword">while</span> <span class="built_in">read</span> ip</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">/opt/dell/srvadmin/sbin/racadm -r <span class="variable">$ip</span> -u <span class="variable">$idrac_user</span> -p <span class="variable">$idrac_password</span> clrsel &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[34mServer:<span class="variable">$ip</span> iDrac logs has been cleared successful\033[0m"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31mServer:<span class="variable">$ip</span> iDrac logs has been cleared failuer\033[0m"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="其他更多用法，详见帮助"><a href="#其他更多用法，详见帮助" class="headerlink" title=" 其他更多用法，详见帮助"></a><i class="fa fa-caret-right fa-lg"></i> 其他更多用法，详见帮助</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Remote RACADM usage syntax:</span><br><span class="line">racadm -r &lt;RAC IP address&gt; -u &lt;username&gt; -p &lt;password&gt; &lt;subcommand&gt; &lt;options&gt;racadm -r &lt;RAC IP address&gt; -i &lt;subcommand&gt; &lt;options&gt;</span><br><span class="line">The <span class="string">"-i"</span> option allows the username and password to be entered interactively.</span><br><span class="line">Examples:</span><br><span class="line">racadm -r 192.168.0.120 -u racuser1 -p aygqt12a getsysinforacadm -r 192.168.0.120 -u racuser2 -p gsdf12o1 getractimeracadm -r 192.168.0.120 -u racuser3 -p djh2iuha getconfig -g cfgSerialracadm -r 192.168.0.120 -u racuser5 -p dsajkhds <span class="built_in">help</span> getsysinfo</span><br><span class="line">Display a list of available subcommands <span class="keyword">for</span> the remote RAC:</span><br><span class="line">racadm -r &lt;RAC IP address&gt; -u &lt;username&gt; -p &lt;password&gt; <span class="built_in">help</span></span><br><span class="line">Display more detailed <span class="built_in">help</span> <span class="keyword">for</span> a specific subcommand:</span><br><span class="line">racadm -r &lt;RAC IP address&gt; -u &lt;username&gt; -p &lt;password&gt; <span class="built_in">help</span> &lt;subcommand&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Dell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> racadm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django开发环境部署</title>
      <link href="/Django/909206773.html"/>
      <url>/Django/909206773.html</url>
      
        <content type="html"><![CDATA[<h5 id="安装pip"><a href="#安装pip" class="headerlink" title=" 安装pip"></a><i class="fa fa-caret-right fa-lg"></i> 安装pip</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.laohulab.com:9000/Django/get-pip.py</span><br><span class="line">./get-pip.py</span><br><span class="line"></span><br><span class="line">Collecting pip</span><br><span class="line">  Downloading pip-9.0.1-py2.py3-none-any.whl (1.3MB)</span><br><span class="line">    100% |████████████████████████████████| 1.3MB 14kB/s</span><br><span class="line">Collecting setuptools</span><br><span class="line">  Downloading setuptools-36.2.7-py2.py3-none-any.whl (477kB)</span><br><span class="line">    100% |████████████████████████████████| 481kB 12kB/s</span><br><span class="line">Collecting wheel</span><br><span class="line">  Downloading wheel-0.29.0-py2.py3-none-any.whl (66kB)</span><br><span class="line">    100% |████████████████████████████████| 71kB 12kB/s</span><br><span class="line">Installing collected packages: pip, setuptools, wheel</span><br><span class="line">Successfully installed pip-9.0.1 setuptools-36.2.7 wheel-0.29.0</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="安装Django版本（1-10-4）"><a href="#安装Django版本（1-10-4）" class="headerlink" title=" 安装Django版本（1.10.4）"></a><i class="fa fa-caret-right fa-lg"></i> 安装Django版本（1.10.4）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install django==1.10.4</span><br><span class="line">Collecting django==1.10.4</span><br><span class="line">  Downloading Django-1.10.4-py2.py3-none-any.whl (6.8MB)</span><br><span class="line">    100% |████████████████████████████████| 6.8MB 14kB/s</span><br><span class="line">Installing collected packages: django</span><br><span class="line">Successfully installed django-1.10.4</span><br></pre></td></tr></table></figure><h5 id="安装Django-REST-framework"><a href="#安装Django-REST-framework" class="headerlink" title=" 安装Django REST framework"></a><i class="fa fa-caret-right fa-lg"></i> 安装Django REST framework</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install djangorestframework</span><br><span class="line">pip install markdown       <span class="comment"># Markdown support for the browsable API.</span></span><br><span class="line">pip install django-filter  <span class="comment"># Filtering support</span></span><br></pre></td></tr></table></figure><div class="note info">            <p>Add ‘rest_framework’ to your INSTALLED_APPS setting.<br>INSTALLED_APPS = (<br>    …<br>    ‘rest_framework’,<br>)</p><p>If you’re intending to use the browsable API you’ll probably also want to add REST framework’s login and logout views. Add the following to your root urls.py file.<br>urlpatterns = [<br>    …<br>    url(r’^api-auth/‘, include(‘rest_framework.urls’, namespace=’rest_framework’))<br>]<br>Note that the URL path can be whatever you want, but you must include ‘rest_framework.urls’ with the ‘rest_framework’namespace. You may leave out the namespace in Django 1.9+, and REST framework will set it for you.</p>          </div><h5 id="安装前端调试工具"><a href="#安装前端调试工具" class="headerlink" title=" 安装前端调试工具"></a><i class="fa fa-caret-right fa-lg"></i> 安装前端调试工具</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install django-debugtools</span><br><span class="line">Collecting django-debugtools</span><br><span class="line">  Downloading django_debugtools-1.7.2-py2.py3-none-any.whl</span><br><span class="line">Installing collected packages: django-debugtools</span><br><span class="line">Successfully installed django-debugtools-1.7.2</span><br></pre></td></tr></table></figure><figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">Configuration</span><br><span class="line">Add the module to the installed apps:</span><br><span class="line">INSTALLED_APPS += (</span><br><span class="line">    <span class="string">'debugtools'</span>,</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">As of Django 1.9, either <span class="keyword">use</span> &#123;% load debugtools_tags %&#125; <span class="keyword">or</span> <span class="keyword">add</span> <span class="keyword">the</span> <span class="keyword">following</span> <span class="keyword">to</span> <span class="keyword">the</span> <span class="keyword">settings</span>:</span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [],</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: True,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="comment"># ...</span></span><br><span class="line">            ],</span><br><span class="line">           <span class="string">'builtins'</span>: [                                     <span class="comment"># Add this section</span></span><br><span class="line">                <span class="string">"debugtools.templatetags.debugtools_tags"</span>,   <span class="comment"># Add this line</span></span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>glibc误删除修复操作</title>
      <link href="/Linux/3959781511.html"/>
      <url>/Linux/3959781511.html</url>
      
        <content type="html"><![CDATA[<blockquote class="pullquote note danger"><p>glibc是linux系统底层基础软件包，当误删除之后，linux系统命令均无法使用</p></blockquote><h5 id="使用光盘进入救援模式修复"><a href="#使用光盘进入救援模式修复" class="headerlink" title=" 使用光盘进入救援模式修复"></a><i class="fa fa-caret-right fa-lg"></i> 使用光盘进入救援模式修复</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /tmp/<span class="built_in">test</span></span><br><span class="line">mount /dev/sr0 /tmp/<span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> /tmp/<span class="built_in">test</span>/Package/</span><br><span class="line">rpm -Uvh glibc-2.12-1.166.el6.x86_64.rpm glibc-common-2.12-1.166.el6.x86_64.rpm --root /mnt/sysimage</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-37.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Dell FX2S结构图</title>
      <link href="/Dell/3594346954.html"/>
      <url>/Dell/3594346954.html</url>
      
        <content type="html"><![CDATA[<h5 id="结构图"><a href="#结构图" class="headerlink" title=" 结构图"></a><i class="fa fa-caret-right fa-lg"></i> 结构图</h5><p><img src="/images/pasted-36.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Dell </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo标签插件</title>
      <link href="/Hexo/92719890.html"/>
      <url>/Hexo/92719890.html</url>
      
        <content type="html"><![CDATA[<h5 id="引用块"><a href="#引用块" class="headerlink" title=" 引用块"></a><i class="fa fa-caret-right fa-lg"></i> 引用块</h5><h6 id="在文章中插入引言，可包含作者、来源和标题。"><a href="#在文章中插入引言，可包含作者、来源和标题。" class="headerlink" title=" 在文章中插入引言，可包含作者、来源和标题。"></a><i class="fa fa-angle-double-right fa-lg"></i> 在文章中插入引言，可包含作者、来源和标题。</h6><p>别号： quote<br><figure class="highlight twig"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">blockquote</span> [author[, <span class="name">source</span>]] [link] [source_link_title] %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">content</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>样例-没有提供参数，则只输出普通的 blockquote<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">blockquote</span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endblockquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><a id="more"></a><h5 id="引用书上的句子"><a href="#引用书上的句子" class="headerlink" title=" 引用书上的句子"></a><i class="fa fa-caret-right fa-lg"></i> 引用书上的句子</h5><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line"><span class="keyword">Do</span> <span class="keyword">not</span> just seek happiness <span class="keyword">for</span> yourself. Seek happiness <span class="keyword">for</span> <span class="keyword">all</span>. Through kindness. Through mercy.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><h5 id="引用-Twitter"><a href="#引用-Twitter" class="headerlink" title=" 引用 Twitter"></a><i class="fa fa-caret-right fa-lg"></i> 引用 Twitter</h5><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote <span class="meta">@DevDocs</span> <span class="string">https:</span><span class="comment">//twitter.com/devdocs/status/356095192085962752 %&#125;</span></span><br><span class="line"><span class="string">NEW:</span> DevDocs now comes with syntax highlighting. <span class="string">http:</span><span class="comment">//devdocs.io</span></span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <span class="exturl" data-url="aHR0cDovL2RldmRvY3MuaW8=" title="http://devdocs.io">http://devdocs.io<i class="fa fa-external-link"></i></span></p><footer><strong>@DevDocs</strong><cite><span class="exturl" data-url="aHR0cHM6Ly90d2l0dGVyLmNvbS9kZXZkb2NzL3N0YXR1cy8zNTYwOTUxOTIwODU5NjI3NTI=" title="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752<i class="fa fa-external-link"></i></span></cite></footer></blockquote><h5 id="引用网络上的文章"><a href="#引用网络上的文章" class="headerlink" title=" 引用网络上的文章"></a><i class="fa fa-caret-right fa-lg"></i> 引用网络上的文章</h5><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin http://sethgodin.typepad.<span class="keyword">com</span>/seths_blog/<span class="number">2009</span>/<span class="number">07</span>/welcome-<span class="keyword">to</span>-island-marketing.html Welcome <span class="keyword">to</span> Island Marketing %&#125;</span><br><span class="line">Every interaction <span class="keyword">is</span> both precious <span class="built_in">and</span> <span class="keyword">an</span> opportunity <span class="keyword">to</span> delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><span class="exturl" data-url="aHR0cDovL3NldGhnb2Rpbi50eXBlcGFkLmNvbS9zZXRoc19ibG9nLzIwMDkvMDcvd2VsY29tZS10by1pc2xhbmQtbWFya2V0aW5nLmh0bWw=" title="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing<i class="fa fa-external-link"></i></span></cite></footer></blockquote><h5 id="代码块"><a href="#代码块" class="headerlink" title=" 代码块"></a><i class="fa fa-caret-right fa-lg"></i> 代码块</h5><p>在文章中插入代码。</p><p>别名：code<br><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock <span class="string">[title]</span> <span class="string">[lang:language]</span> <span class="string">[url]</span> <span class="string">[link text]</span> %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure></p><p>样例<br>普通的代码块<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">codeblock</span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">alert('Hello World!');</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">alert</span>(<span class="string">'Hello World!'</span>);</span><br></pre></td></tr></table></figure><p>指定语言<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock <span class="string">lang:</span>objc %&#125;</span><br><span class="line">[rectangle <span class="string">setX:</span> <span class="number">10</span> <span class="string">y:</span> <span class="number">10</span> <span class="string">width:</span> <span class="number">20</span> <span class="string">height:</span> <span class="number">20</span>];</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure><p>附加说明<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">codeblock</span> Array.map %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">array.map(callback[, thisArg])</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endcodeblock</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><figure class="highlight cpp"><figcaption><span>Array.map</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">array</span>.<span class="built_in">map</span>(callback[, thisArg])</span><br></pre></td></tr></table></figure><p>附加说明和网址<br><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock _.compact ht<span class="symbol">tp:</span>//underscorejs.org/#compact Underscore.js %&#125;</span><br><span class="line">_.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="built_in">false</span>, <span class="number">2</span>, '', <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight excel"><figcaption><span>_.compact</span><span class="exturl" data-url="aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvI2NvbXBhY3Q=" title="http://underscorejs.org/#compact">Underscore.js<i class="fa fa-external-link"></i></span></figcaption><table><tr><td class="code"><pre><span class="line">_.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="built_in">false</span>, <span class="number">2</span>, '', <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>反引号代码块<br>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">`<span class="string">[language]</span> <span class="string">[title]</span> <span class="string">[url]</span> <span class="string">[link text]</span> code snippet`</span><br></pre></td></tr></table></figure><h5 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title=" Pull Quote"></a><i class="fa fa-caret-right fa-lg"></i> Pull Quote</h5><p>在文章中插入 Pull quote。<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">pullquote</span> [class] %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">content</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">endpullquote</span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><h5 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title=" jsFiddle"></a><i class="fa fa-caret-right fa-lg"></i> jsFiddle</h5><p>在文章中嵌入 jsFiddle。<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Gist"><a href="#Gist" class="headerlink" title=" Gist"></a><i class="fa fa-caret-right fa-lg"></i> Gist</h5><p>在文章中嵌入 Gist。<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure></p><h5 id="iframe"><a href="#iframe" class="headerlink" title=" iframe"></a><i class="fa fa-caret-right fa-lg"></i> iframe</h5><p>在文章中插入 iframe。<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Image"><a href="#Image" class="headerlink" title=" Image"></a><i class="fa fa-caret-right fa-lg"></i> Image</h5><p>在文章中插入指定大小的图片。<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Link"><a href="#Link" class="headerlink" title=" Link"></a><i class="fa fa-caret-right fa-lg"></i> Link</h5><p>在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性。<br><figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Include-Code"><a href="#Include-Code" class="headerlink" title=" Include Code"></a><i class="fa fa-caret-right fa-lg"></i> Include Code</h5><p>插入 source 文件夹内的代码文件。<br><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">&#123;% include_code [title] [<span class="keyword">lan</span><span class="variable">g:language</span>] path/<span class="keyword">to</span>/<span class="keyword">file</span> %&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Youtube"><a href="#Youtube" class="headerlink" title=" Youtube"></a><i class="fa fa-caret-right fa-lg"></i> Youtube</h5><p>在文章中插入 Youtube 视频。<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">youtube</span> video_id %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><h5 id="Vimeo"><a href="#Vimeo" class="headerlink" title=" Vimeo"></a><i class="fa fa-caret-right fa-lg"></i> Vimeo</h5><p>在文章中插入 Vimeo 视频。<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">vimeo</span> video_id %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><h5 id="引用文章"><a href="#引用文章" class="headerlink" title=" 引用文章"></a><i class="fa fa-caret-right fa-lg"></i> 引用文章</h5><p>引用其他文章的链接。<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">post_path</span> slug %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">post_link</span> slug [title] %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><h5 id="引用资源"><a href="#引用资源" class="headerlink" title=" 引用资源"></a><i class="fa fa-caret-right fa-lg"></i> 引用资源</h5><p>引用文章的资源。<br><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_path</span> slug %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_img</span> slug [title] %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">asset_link</span> slug [title] %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><h5 id="Raw"><a href="#Raw" class="headerlink" title=" Raw"></a><i class="fa fa-caret-right fa-lg"></i> Raw</h5><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。<br><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&#123;%<span class="built_in"> raw </span>%&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10离线安装.NET Framework 3.5</title>
      <link href="/Windows/2077812280.html"/>
      <url>/Windows/2077812280.html</url>
      
        <content type="html"><![CDATA[<h5 id="在线安装"><a href="#在线安装" class="headerlink" title=" 在线安装"></a><i class="fa fa-caret-right fa-lg"></i> 在线安装</h5><p><img src="/images/pasted-31.png" alt><br><img src="/images/pasted-32.png" alt><br><img src="/images/pasted-33.png" alt><br><img src="/images/pasted-30.png" alt></p><div class="note warning">            <p>该方式存在安装失败的情况!</p>          </div><a id="more"></a><h5 id="本地离线安装"><a href="#本地离线安装" class="headerlink" title=" 本地离线安装"></a><i class="fa fa-caret-right fa-lg"></i> 本地离线安装</h5><p><img src="/images/pasted-29.png" alt><br><img src="/images/pasted-34.png" alt></p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">C:</span>\Windows\system32&gt;dism.exe <span class="regexp">/online /</span>enable-feature <span class="regexp">/featurename:netfx3 /</span><span class="string">Source:</span><span class="string">H:</span>\sources\sxs</span><br></pre></td></tr></table></figure><blockquote class="pullquote note danger"><p><code>请以管理员身份运行cmd或者powershell，否则将会出现如下错误!</code></p><font style="color:red">错误: 740<br>需要提升权限才能运行 DISM。<br>使用提升的命令提示符完成这些任务。</font></blockquote><p><img src="/images/pasted-35.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>favicon网站收藏</title>
      <link href="/uncategorized/323709734.html"/>
      <url>/uncategorized/323709734.html</url>
      
        <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZWFzeWljb24ubmV0Lw==" title="https://www.easyicon.net/">https://www.easyicon.net/<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署</title>
      <link href="/Hexo/2726177698.html"/>
      <url>/Hexo/2726177698.html</url>
      
        <content type="html"><![CDATA[<h5 id="安装前提"><a href="#安装前提" class="headerlink" title=" 安装前提"></a><i class="fa fa-caret-right fa-lg"></i> 安装前提</h5><ul><li><strong>Node.js</strong> <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==" title="https://nodejs.org/en/">https://nodejs.org/en/<i class="fa fa-external-link"></i></span></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v10.4.0/node-v10.4.0-linux-x64.tar.xz</span><br><span class="line">tar xvf node-v10.4.0-linux-x64.tar.xz -C /opt/laohulab</span><br><span class="line"><span class="built_in">cd</span> /opt/laohulab</span><br><span class="line">mv node-v10.4.0-linux-x64 node-10.4.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/opt/laohulab/node-10.4.0/bin:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><strong>Git</strong></li></ul><div class="note info">            <p>本地部署环境为 <kbd>CentOS Linux release 7.3.1611 (Core)</kbd>,Git已默认安装，版本为 <kbd>git version 1.8.3.1</kbd>,若未安装可以通过YUM安装 <kbd>yum install git-core</kbd></p>          </div><div class="note warning">            <p>Git版本若为1.7版本，通过如下命令安装git会出现如下错误<br><code>curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code></p><p>Please upgrade your git client.<br>GitHub.com no longer supports git over dumb-http: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Jsb2cvODA5LWdpdC1kdW1iLWh0dHAtdHJhbnNwb3J0LXRvLWJlLXR1cm5lZC1vZmYtaW4tOTAtZGF5cw==" title="https://github.com/blog/809-git-dumb-http-transport-to-be-turned-off-in-90-days">https://github.com/blog/809-git-dumb-http-transport-to-be-turned-off-in-90-days<i class="fa fa-external-link"></i></span></p>          </div><h5 id="安装hexo"><a href="#安装hexo" class="headerlink" title=" 安装hexo"></a><i class="fa fa-caret-right fa-lg"></i> 安装hexo</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="built_in">cd</span> /opt/laohulab</span><br><span class="line">hexo init blog <span class="comment">#初始化，名字任意</span></span><br><span class="line">hexo --debug -i 192.168.10.27 s <span class="comment">#debug模式启动</span></span><br></pre></td></tr></table></figure><h5 id="安装hexo常用插件"><a href="#安装hexo常用插件" class="headerlink" title=" 安装hexo常用插件"></a><i class="fa fa-caret-right fa-lg"></i> 安装hexo常用插件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-index --save <span class="comment">#索引</span></span><br><span class="line">npm install hexo-generator-archive --save <span class="comment">#归档</span></span><br><span class="line">npm install hexo-migrator-rss --save <span class="comment">#RSS</span></span><br><span class="line">npm install hexo-generator-feed --save <span class="comment">#RSS</span></span><br><span class="line">npm install hexo-generator-searchdb --save <span class="comment">#搜索</span></span><br><span class="line">npm install hexo-generator-search --save <span class="comment">#搜索</span></span><br><span class="line">npm install hexo-wordcount --save <span class="comment">#字符统计</span></span><br><span class="line">npm install hexo-admin --save <span class="comment">#后台管理</span></span><br><span class="line">npm install hexo-generator-sitemap --save --registry https://registry.npm.taobao.org <span class="comment">#sitemap</span></span><br><span class="line">npm install hexo-pdf --save  --registry https://registry.npm.taobao.org <span class="comment">#pdf插件</span></span><br></pre></td></tr></table></figure><h5 id="hexo-admin配置"><a href="#hexo-admin配置" class="headerlink" title=" hexo-admin配置"></a><i class="fa fa-caret-right fa-lg"></i> hexo-admin配置</h5><h6 id="点击setup"><a href="#点击setup" class="headerlink" title=" 点击setup"></a><i class="fa fa-angle-double-right fa-lg"></i> 点击setup</h6><p><img src="/images/pasted-11.png" alt></p><h6 id="配置账号相关"><a href="#配置账号相关" class="headerlink" title=" 配置账号相关"></a><i class="fa fa-angle-double-right fa-lg"></i> 配置账号相关</h6><p><img src="/images/pasted-12.png" alt></p><h6 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title=" 配置_config.yml"></a><i class="fa fa-angle-double-right fa-lg"></i> 配置_config.yml</h6><p><img src="/images/pasted-13.png" alt></p><div class="note info">            <p>将自动生成配置信息插入站点配置文件<code>_config.yml</code>，重启hexo服务即可！</p>          </div><h5 id="配置主页标签"><a href="#配置主页标签" class="headerlink" title=" 配置主页标签"></a><i class="fa fa-caret-right fa-lg"></i> 配置主页标签</h5><p><img src="/images/pasted-14.png" alt></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags <span class="comment">#标签</span></span><br><span class="line">hexo new page categories <span class="comment">#分类</span></span><br><span class="line">hexo new page commonweal <span class="comment">#公益404</span></span><br><span class="line">hexo new page about <span class="comment">#关于</span></span><br><span class="line">hexo new page schedule <span class="comment">#日程</span></span><br></pre></td></tr></table></figure><div class="note info">            <p>默认未创建相关标签主页，点击会出现404错误，创建即可!</p>          </div><h5 id="hexo主题修改"><a href="#hexo主题修改" class="headerlink" title=" hexo主题修改"></a><i class="fa fa-caret-right fa-lg"></i> hexo主题修改</h5><h6 id="安装"><a href="#安装" class="headerlink" title=" 安装"></a><i class="fa fa-angle-double-right fa-lg"></i> 安装</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/laohulab/blog</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next /themes/next</span><br></pre></td></tr></table></figure><p>官网:<span class="exturl" data-url="aHR0cDovL3RoZW1lLW5leHQuaWlzc25hbi5jb20=" title="http://theme-next.iissnan.com">http://theme-next.iissnan.com<i class="fa fa-external-link"></i></span></p><h6 id="启用next主题"><a href="#启用next主题" class="headerlink" title=" 启用next主题"></a><i class="fa fa-angle-double-right fa-lg"></i> 启用next主题</h6><p><img src="/images/pasted-15.png" alt></p><h5 id="Next主题个性化配置"><a href="#Next主题个性化配置" class="headerlink" title=" Next主题个性化配置"></a><i class="fa fa-caret-right fa-lg"></i> Next主题个性化配置</h5><h6 id="启用Gemini"><a href="#启用Gemini" class="headerlink" title=" 启用Gemini"></a><i class="fa fa-angle-double-right fa-lg"></i> 启用Gemini</h6><p><img src="/images/pasted-16.png" alt></p><div class="note ">            <p>4种模式，个人倾向于Gemini模式，以下的修改均基于Gemini</p>          </div><h6 id="启用字符统计"><a href="#启用字符统计" class="headerlink" title=" 启用字符统计"></a><i class="fa fa-angle-double-right fa-lg"></i> 启用字符统计</h6><p><img src="/images/pasted-17.png" alt></p><h6 id="修改字体"><a href="#修改字体" class="headerlink" title=" 修改字体"></a><i class="fa fa-angle-double-right fa-lg"></i> 修改字体</h6><p><img src="/images/pasted-18.png" alt></p><h6 id="启用站点统计"><a href="#启用站点统计" class="headerlink" title=" 启用站点统计"></a><i class="fa fa-angle-double-right fa-lg"></i> 启用站点统计</h6><p><img src="/images/pasted-19.png" alt></p><h6 id="启用本地搜索"><a href="#启用本地搜索" class="headerlink" title=" 启用本地搜索"></a><i class="fa fa-angle-double-right fa-lg"></i> 启用本地搜索</h6><p><img src="/images/pasted-20.png" alt></p><h6 id="关闭fancybox功能"><a href="#关闭fancybox功能" class="headerlink" title=" 关闭fancybox功能"></a><i class="fa fa-angle-double-right fa-lg"></i> 关闭fancybox功能</h6><p><img src="/images/pasted-21.png" alt></p><h6 id="启用文章meta信息"><a href="#启用文章meta信息" class="headerlink" title=" 启用文章meta信息"></a><i class="fa fa-angle-double-right fa-lg"></i> 启用文章meta信息</h6><p><img src="/images/pasted-22.png" alt></p><h6 id="修改文章显示时间"><a href="#修改文章显示时间" class="headerlink" title=" 修改文章显示时间"></a><i class="fa fa-angle-double-right fa-lg"></i> 修改文章显示时间</h6><p><img src="/images/pasted-23.png" alt></p><div class="note info">            <p><code>vim themes/next/layout/_macro/post.swig</code><br>默认仅显示日期，不显示时间,进行修改！</p>          </div><h6 id="阅读量增加中文"><a href="#阅读量增加中文" class="headerlink" title=" 阅读量增加中文"></a><i class="fa fa-angle-double-right fa-lg"></i> 阅读量增加中文</h6><p><code>vim themes/next/layout/_macro/post.swig</code></p><p><img src="/images/pasted-24.png" alt></p><h6 id="文章统计增加中文"><a href="#文章统计增加中文" class="headerlink" title=" 文章统计增加中文"></a><i class="fa fa-angle-double-right fa-lg"></i> 文章统计增加中文</h6><p><code>vim themes/next/layout/_macro/post.swig</code></p><p><img src="/images/pasted-25.png" alt></p><h6 id="修改表格显示宽度和字体大小"><a href="#修改表格显示宽度和字体大小" class="headerlink" title=" 修改表格显示宽度和字体大小"></a><i class="fa fa-angle-double-right fa-lg"></i> 修改表格显示宽度和字体大小</h6><p><code>vim themes/next/source/css/_variables/base.styl</code></p><p><img src="/images/pasted-64.png" alt></p><h6 id="修改正文显示宽度"><a href="#修改正文显示宽度" class="headerlink" title=" 修改正文显示宽度"></a><i class="fa fa-angle-double-right fa-lg"></i> 修改正文显示宽度</h6><p><code>vim themes/next/source/css/_variables/Gemini.styl</code></p><p><img src="/images/pasted-27.png" alt></p><h6 id="修改tag标签显示"><a href="#修改tag标签显示" class="headerlink" title=" 修改tag标签显示"></a><i class="fa fa-angle-double-right fa-lg"></i> 修改tag标签显示</h6><p><img src="/images/pasted-28.png" alt></p><div class="note info">            <p><code>vim themes/next/layout/_macro/post.swig</code><br>将默认#号修改为 <i class="fa fa-tag"></i></p>          </div><h6 id="其他设置"><a href="#其他设置" class="headerlink" title=" 其他设置"></a><i class="fa fa-angle-double-right fa-lg"></i> 其他设置</h6><p><code>vim themes/next/source/css/_custom/custom.styl</code> 新增如下配置！<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//表头增加背景色</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#f0f8ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//水平线由默认3px变更为2px</span><br><span class="line"><span class="selector-tag">hr</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//代码块预览显示，需要修改hexo配置文件，取消显示行号</span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-class">.code</span> <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">white-space</span>: pre-wrap;</span><br><span class="line">    <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">    <span class="attribute">width</span>: auto</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//取消默认灰色背景，修改为绿色背景，文字白色</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#3fb618</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//图片默认居中，修改inline-block，靠左对齐</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP源码编译安装</title>
      <link href="/PHP/1488718542.html"/>
      <url>/PHP/1488718542.html</url>
      
        <content type="html"><![CDATA[<h5 id="nbsp-源码编译安装"><a href="#nbsp-源码编译安装" class="headerlink" title="&nbsp;源码编译安装"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>源码编译安装</h5><h6 id="nbsp-官网"><a href="#nbsp-官网" class="headerlink" title="&nbsp;官网"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>官网</h6><ul><li>官网：<span class="exturl" data-url="aHR0cDovL3BocC5uZXQv" title="http://php.net/">http://php.net/<i class="fa fa-external-link"></i></span> </li><li>官网下载：<span class="exturl" data-url="aHR0cDovL3BocC5uZXQvZG93bmxvYWRzLnBocA==" title="http://php.net/downloads.php">http://php.net/downloads.php<i class="fa fa-external-link"></i></span></li></ul><a id="more"></a><h5 id="nbsp-了解与准备"><a href="#nbsp-了解与准备" class="headerlink" title="&nbsp;了解与准备"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>了解与准备</h5><h6 id="nbsp-Apache-httpd-nginx-与-php-连接方式："><a href="#nbsp-Apache-httpd-nginx-与-php-连接方式：" class="headerlink" title="&nbsp;Apache(httpd)  nginx 与 php 连接方式："></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>Apache(httpd)  nginx 与 php 连接方式：</h6><p><strong>httpd与php</strong></p><ul><li>php 作为 httpd 模块 </li><li>fastcgi(php-fpm)  </li><li>cgi(此处不讲解) </li></ul><p><strong>nginx与php</strong></p><ul><li>fastcgi(php-fpm)</li></ul><h6 id="nbsp-PHP安装与依赖"><a href="#nbsp-PHP安装与依赖" class="headerlink" title="&nbsp;PHP安装与依赖"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>PHP安装与依赖</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ libxml2 libxml2-devel bzip2 bzip2-devel libmcrypt libmcrypt-devel openssl openssl-devel libcurl-devel libjpeg-devel libpng-devel freetype-devel readline readline-devel libxslt-devel perl perl-devel psmisc.x86_64 recode recode-devel libtidy libtidy-devel</span><br></pre></td></tr></table></figure><div class="note info">            <p>备注：  </p><ul><li>上面的依赖基本解决所需要的依赖。  </li><li>编译安装完成后可以增减所支持的php模块，此处所编译的模块已经非常完备。  </li><li>需要编译单个模块，查看php模块编译方式：php模块编译  </li><li>下面编译安装的配置选项：<ul><li>–prefix=/usr/local/php7    主程序文件路径  </li><li>–sysconfdir=/etc/php7      配置文件路径  </li><li>–with-config-file-path=/etc/php7       php.ini 文件路径  </li><li>–with-apxs2=/usr/local/httpd/bin/apxs  以 httpd 模块编译时需要指定 httpd 的 apxs 文件路径。  其他的配置可以按自己需求指定，这几个选项也可以使用默认配置。</li></ul></li><li>php7移除了 mysql 扩展，php7仅能是用 mysqli 和 pdo_mysql。php5可以使用。php5编译时加入选项：–with-mysql 。详情查看下面的 PHP与MariaDB（mysql）连接  </li><li>此处以 CentOs7 编译 php7 为示例，配合讲解php5安装的要点。  </li><li>php.ini 文件是在包目录下的 php.ini-development（开发）， php.ini-production（生产）<br>编译完成后选择自己需要的 php.ini 文件 复制到 –with-config-file-path 指定的目录。<br> 如果编译时为指定此选项，编译完成配置并启动nginx和php查看 phpinfo() 函数所指定的 php.ini 文件路径：Configuration File (php.ini) Path<br> 默认为php目录下的 lib 目录。  </li><li>PHP安装与依赖中 psmisc.x86_64 是 killall 命令的包名，以便最小化安装时终止进程。</li></ul>          </div><h6 id="nbsp-php编译与配置"><a href="#nbsp-php编译与配置" class="headerlink" title="&nbsp;php编译与配置"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>php编译与配置</h6><ul><li>httpd 模块</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">备注：需要事先存在httpd ，编译指定 apxs 文件位置。此处以--with-apxs2=/usr/<span class="built_in">local</span>/httpd/bin/apxs 作为演示。  </span><br><span class="line">php7：  </span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php7 --sysconfdir=/etc/php7 --with-config-file-path=/etc/php7 --with-apxs2=/usr/<span class="built_in">local</span>/httpd/bin/apxs --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mhash --with-openssl --with-zlib --with-bz2 --with-curl --with-libxml-dir --with-gd --with-jpeg-dir --with-png-dir --with-zlib --<span class="built_in">enable</span>-mbstring --with-mcrypt --<span class="built_in">enable</span>-sockets --with-iconv-dir --with-xsl --<span class="built_in">enable</span>-zip --with-pcre-dir --with-pear --<span class="built_in">enable</span>-session  --<span class="built_in">enable</span>-gd-native-ttf --<span class="built_in">enable</span>-xml --with-freetype-dir --<span class="built_in">enable</span>-gd-jis-conv --<span class="built_in">enable</span>-inline-optimization --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-bcmath --<span class="built_in">enable</span>-sysvmsg --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-sysvshm --<span class="built_in">enable</span>-mbregex --<span class="built_in">enable</span>-pcntl --with-xmlrpc --with-gettext --<span class="built_in">enable</span>-exif --with-readline --with-recode --with-tidy </span><br><span class="line">  </span><br><span class="line">php5.6：（仅增加了选项 --with-mysql=mysqlnd）  </span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php5 --sysconfdir=/etc/php5 --with-config-file-path=/etc/php5 --with-apxs2=/usr/<span class="built_in">local</span>/httpd/bin/apxs --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mhash --with-openssl --with-zlib --with-bz2 --with-curl --with-libxml-dir --with-gd --with-jpeg-dir --with-png-dir --with-zlib --<span class="built_in">enable</span>-mbstring --with-mcrypt --<span class="built_in">enable</span>-sockets --with-iconv-dir --with-xsl --<span class="built_in">enable</span>-zip --with-pcre-dir --with-pear --<span class="built_in">enable</span>-session  --<span class="built_in">enable</span>-gd-native-ttf --<span class="built_in">enable</span>-xml --with-freetype-dir --<span class="built_in">enable</span>-gd-jis-conv --<span class="built_in">enable</span>-inline-optimization --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-bcmath --<span class="built_in">enable</span>-sysvmsg --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-sysvshm --<span class="built_in">enable</span>-mbregex --<span class="built_in">enable</span>-pcntl --with-xmlrpc --with-gettext --<span class="built_in">enable</span>-exif --with-readline --with-recode --with-tidy</span><br></pre></td></tr></table></figure><ul><li>整合httpd和fastcgi php-fpm模式</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--with-apxs2(需要apxs程序)</span><br><span class="line">yum -y install httpd-devel</span><br></pre></td></tr></table></figure><hr><ul><li>fastcgi php-fpm 模式</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php5.6：（仅增加了选项 --with-mysql=mysqlnd）  </span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php5 --sysconfdir=/etc/php5 --with-config-file-path=/etc/php5 --<span class="built_in">enable</span>-fpm --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mhash --with-openssl --with-zlib --with-bz2 --with-curl --with-libxml-dir --with-gd --with-jpeg-dir --with-png-dir --with-zlib --<span class="built_in">enable</span>-mbstring --with-mcrypt --<span class="built_in">enable</span>-sockets --with-iconv-dir --with-xsl --<span class="built_in">enable</span>-zip --with-pcre-dir --with-pear --<span class="built_in">enable</span>-session  --<span class="built_in">enable</span>-gd-native-ttf --<span class="built_in">enable</span>-xml --with-freetype-dir --<span class="built_in">enable</span>-gd-jis-conv --<span class="built_in">enable</span>-inline-optimization --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-bcmath --<span class="built_in">enable</span>-sysvmsg --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-sysvshm --<span class="built_in">enable</span>-mbregex --<span class="built_in">enable</span>-pcntl --with-xmlrpc --with-gettext --<span class="built_in">enable</span>-exif --with-readline --with-recode --with-tidy </span><br><span class="line"></span><br><span class="line">./configure --prefix=/opt/laohulab/php5.6.31 --sysconfdir=/opt/laohulab/php5.6.31/etc  --with-config-file-path=/opt/laohulab/php5.6.31/etc --with-config-file-scan-dir=/opt/laohulab/php5.6.31/etc.d --with-apxs2 --<span class="built_in">enable</span>-fpm --with-fpm-user=www --with-fpm-group=www --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mhash --with-openssl --with-zlib --with-bz2 --with-curl --with-libxml-dir --with-gd --with-jpeg-dir --with-png-dir --with-zlib --<span class="built_in">enable</span>-mbstring --with-mcrypt --<span class="built_in">enable</span>-sockets --with-iconv-dir --with-xsl --<span class="built_in">enable</span>-zip --with-pcre-dir --with-pear --<span class="built_in">enable</span>-session  --<span class="built_in">enable</span>-gd-native-ttf --<span class="built_in">enable</span>-xml --with-freetype-dir --<span class="built_in">enable</span>-gd-jis-conv --<span class="built_in">enable</span>-inline-optimization --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-bcmath --<span class="built_in">enable</span>-sysvmsg --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-sysvshm --<span class="built_in">enable</span>-mbregex --<span class="built_in">enable</span>-pcntl --with-xmlrpc --with-gettext --<span class="built_in">enable</span>-exif --with-readline --with-recode --with-tidy</span><br></pre></td></tr></table></figure><ul><li>fastcgi php-fpm</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /etc/php7/php-fpm.conf.default /etc/php7/php-fpm.conf  </span><br><span class="line">cp /etc/php7/php-fpm.d/www.conf.default /etc/php7/php-fpm.d/www.conf  </span><br><span class="line"><span class="comment"># 默认即可是本机 127.0.0.1 不必修改。  </span></span><br><span class="line">vim /etc/php7/php-fpm.d/www.conf  </span><br><span class="line"><span class="comment"># 监听地址  </span></span><br><span class="line">listen = 127.0.0.1:9000  </span><br><span class="line"><span class="comment"># 允许的客户端  </span></span><br><span class="line">listen.allowed_clients = 127.0.0.1  </span><br><span class="line">备注：php5 需要复制 php-fpm.conf.default 为 php-fpm.conf 即可。查看 php-fpm.conf 监听地址和允许的客户端。</span><br></pre></td></tr></table></figure><h6 id="nbsp-php-ini-配置文件（在源码包目录下）"><a href="#nbsp-php-ini-配置文件（在源码包目录下）" class="headerlink" title="&nbsp;php.ini 配置文件（在源码包目录下）"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>php.ini 配置文件（在源码包目录下）</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@nginx-10-20 php-5.6.31]<span class="comment"># pwd</span></span><br><span class="line">/root/php/php-5.6.31</span><br><span class="line">[root@nginx-10-20 php-5.6.31]<span class="comment"># cp php.ini-production /opt/laohulab/php5.6.31/etc/php.ini</span></span><br></pre></td></tr></table></figure><h6 id="nbsp-php-作为-httpd-模块"><a href="#nbsp-php-作为-httpd-模块" class="headerlink" title="&nbsp;php 作为 httpd 模块"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>php 作为 httpd 模块</h6><p>不需要修改 php 配置</p><h6 id="nbsp-启动与停止"><a href="#nbsp-启动与停止" class="headerlink" title="&nbsp;启动与停止"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>启动与停止</h6><ul><li>httpd模块</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">重新加载 httpd 。</span><br></pre></td></tr></table></figure><ul><li>fastcgi</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/php7/php-fpm.conf  </span><br><span class="line">打开注释：（不打开注释仅能使用 killall php-fpm 关闭 php）  </span><br><span class="line">pid = run/php-fpm.pid  </span><br><span class="line">  </span><br><span class="line">启动：  </span><br><span class="line">/usr/<span class="built_in">local</span>/php7/sbin/php-fpm </span><br><span class="line">   </span><br><span class="line">立刻终止  </span><br><span class="line"><span class="built_in">kill</span> -INT `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid`  </span><br><span class="line"><span class="built_in">kill</span> -TERM `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid`  </span><br><span class="line">killall php-fpm  </span><br><span class="line">  </span><br><span class="line">平滑终止  </span><br><span class="line"><span class="built_in">kill</span> -QUIT `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid` </span><br><span class="line">   </span><br><span class="line">平滑重启  </span><br><span class="line"><span class="built_in">kill</span> -USR2 `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid`</span><br></pre></td></tr></table></figure><h6 id="nbsp-加入环境变量"><a href="#nbsp-加入环境变量" class="headerlink" title="&nbsp;加入环境变量"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>加入环境变量</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PHP=/opt/laohulab/php</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$PHP</span>/bin:<span class="variable">$PHP</span>/sbin</span><br></pre></td></tr></table></figure><h6 id="nbsp-CentOS-系统服务（-etc-php7-php-fpm-conf-文件-pid-run-php-fpm-pid-注释需要打开：2-6-）"><a href="#nbsp-CentOS-系统服务（-etc-php7-php-fpm-conf-文件-pid-run-php-fpm-pid-注释需要打开：2-6-）" class="headerlink" title="&nbsp;CentOS 系统服务（/etc/php7/php-fpm.conf 文件 pid = run/php-fpm.pid 注释需要打开：2.6 ）"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>CentOS 系统服务（/etc/php7/php-fpm.conf 文件 pid = run/php-fpm.pid 注释需要打开：2.6 ）</h6><ul><li>CentOS 6</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/rc.d/init.d/php-fpm  </span><br><span class="line">chmod +x /etc/rc.d/init.d/php-fpm  </span><br><span class="line">--------------------------file start---------------------------------  </span><br><span class="line"><span class="meta">#! /bin/sh  </span></span><br><span class="line"><span class="comment"># chkconfig: - 84 16  </span></span><br><span class="line"><span class="comment"># description:  PHP FastCGI Process Manager  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Source function library.  </span></span><br><span class="line">. /etc/init.d/<span class="built_in">functions</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Check that networking is up.  </span></span><br><span class="line">. /etc/sysconfig/network  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># Additional environment file  </span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/sysconfig/php-fpm ]; <span class="keyword">then</span>  </span><br><span class="line">      . /etc/sysconfig/php-fpm  </span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ]  </span><br><span class="line"><span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">exit</span> 0  </span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line">  </span><br><span class="line">RETVAL=0  </span><br><span class="line">prog=<span class="string">"php-fpm"</span>  </span><br><span class="line"><span class="comment"># 可根据版本不同修改 phpfpm pidfile lockfile变量。其他地方不用修改。  </span></span><br><span class="line">phpfpm=<span class="string">"/usr/local/php7/sbin/php-fpm"</span>  </span><br><span class="line">pidfile=<span class="variable">$&#123;PIDFILE-/usr/local/php7/var/run/php-fpm.pid&#125;</span>  </span><br><span class="line">lockfile=<span class="variable">$&#123;LOCKFILE-/usr/local/php7/var/run/php-fpm.lock&#125;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="title">start</span></span> () &#123;  </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span>  </span><br><span class="line">    dir=$(dirname <span class="variable">$&#123;pidfile&#125;</span>)  </span><br><span class="line">    [ -d <span class="variable">$dir</span> ] || mkdir <span class="variable">$dir</span>  </span><br><span class="line">    daemon --pidfile <span class="variable">$&#123;pidfile&#125;</span> <span class="variable">$&#123;phpfpm&#125;</span>  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    <span class="built_in">echo</span>  </span><br><span class="line">    [ <span class="variable">$RETVAL</span> -eq 0 ] &amp;&amp; touch <span class="variable">$&#123;lockfile&#125;</span>  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="title">stop</span></span> () &#123;  </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span>  </span><br><span class="line">    killproc -p <span class="variable">$&#123;pidfile&#125;</span> php-fpm  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    <span class="built_in">echo</span>  </span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> -eq 0 ] ; <span class="keyword">then</span>  </span><br><span class="line">        rm -f <span class="variable">$&#123;lockfile&#125;</span> <span class="variable">$&#123;pidfile&#125;</span>  </span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="title">restart</span></span> () &#123;  </span><br><span class="line">        stop  </span><br><span class="line">        start  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="title">reload</span></span> () &#123;  </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span>  </span><br><span class="line">    <span class="keyword">if</span> ! <span class="variable">$&#123;phpfpm&#125;</span> --<span class="built_in">test</span> ; <span class="keyword">then</span>  </span><br><span class="line">            RETVAL=6  </span><br><span class="line">            <span class="built_in">echo</span> $<span class="string">"not reloading due to configuration syntax error"</span>  </span><br><span class="line">            failure $<span class="string">"not reloading <span class="variable">$prog</span> due to configuration syntax error"</span>  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        killproc -p <span class="variable">$&#123;pidfile&#125;</span> php-fpm -USR2  </span><br><span class="line">        RETVAL=$?  </span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line">    <span class="built_in">echo</span>  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment"># See how we were called.  </span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span>  </span><br><span class="line">  start)  </span><br><span class="line">    start  </span><br><span class="line">    ;;  </span><br><span class="line">  stop)  </span><br><span class="line">    stop  </span><br><span class="line">    ;;  </span><br><span class="line">  status)  </span><br><span class="line">    status -p <span class="variable">$&#123;pidfile&#125;</span> php-fpm  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    ;;  </span><br><span class="line">  restart)  </span><br><span class="line">    restart  </span><br><span class="line">    ;;  </span><br><span class="line">  reload|force-reload)  </span><br><span class="line">    reload  </span><br><span class="line">    ;;  </span><br><span class="line">  configtest)  </span><br><span class="line">    <span class="variable">$&#123;phpfpm&#125;</span> --<span class="built_in">test</span>  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    ;;  </span><br><span class="line">  condrestart|try-restart)  </span><br><span class="line">    [ -f <span class="variable">$&#123;lockfile&#125;</span> ] &amp;&amp; restart || :  </span><br><span class="line">    ;;  </span><br><span class="line">  *)  </span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|reload|force-reload|condrestart|try-restart|configtest&#125;"</span>  </span><br><span class="line">    RETVAL=2  </span><br><span class="line">        ;;  </span><br><span class="line"><span class="keyword">esac</span>  </span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span>  </span><br><span class="line">--------------------------file end---------------------------------  </span><br><span class="line">service php-fpm &#123;start|stop|status|restart|reload|force-reload|condrestart|try-restart|configtest&#125;</span><br></pre></td></tr></table></figure><ul><li>CentOS 7</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/php-fpm.service  </span><br><span class="line">--------------------------file start---------------------------------  </span><br><span class="line">[Unit]  </span><br><span class="line">Description=php-fpm  </span><br><span class="line">After=syslog.target network.target  </span><br><span class="line">  </span><br><span class="line">[Service]  </span><br><span class="line">Type=forking  </span><br><span class="line">PIDFile=/usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid  </span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/php7/sbin/php-fpm  </span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -USR2 <span class="variable">$MAINPID</span>  </span><br><span class="line">PrivateTmp=<span class="literal">true</span>  </span><br><span class="line">  </span><br><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target  </span><br><span class="line">--------------------------file end---------------------------------  </span><br><span class="line">systemctl （start | restart | reload | stop | <span class="built_in">enable</span> | <span class="built_in">disable</span> | status） php-fpm.service</span><br></pre></td></tr></table></figure><h6 id="nbsp-系统启动服务"><a href="#nbsp-系统启动服务" class="headerlink" title="&nbsp;系统启动服务"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>系统启动服务</h6><ul><li>CentOS 6</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">加入 chkconfig 管理：  </span><br><span class="line">chkconfig --add php-fpm  </span><br><span class="line"></span><br><span class="line">开机启动：  </span><br><span class="line">chkconfig --level 345 php-fpm on  </span><br><span class="line"></span><br><span class="line">开机不启动：  </span><br><span class="line">chkconfig php-fpm off  </span><br><span class="line"></span><br><span class="line">查看开机是否启动  </span><br><span class="line">chkconfig --list php-fpm</span><br></pre></td></tr></table></figure><ul><li>CentOS 7</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">开机启动：  </span><br><span class="line">systemctl <span class="built_in">enable</span> php-fpm.service  </span><br><span class="line"></span><br><span class="line">开机不启动：  </span><br><span class="line">systemctl <span class="built_in">disable</span> php-fpm.service</span><br></pre></td></tr></table></figure><h6 id="nbsp-加入-man-文档"><a href="#nbsp-加入-man-文档" class="headerlink" title="&nbsp;加入 man 文档"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>加入 man 文档</h6><ul><li>CentOS 6</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/man.config</span><br></pre></td></tr></table></figure><ul><li>CentOS 7：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/man_db.conf</span><br></pre></td></tr></table></figure><div class="note info">            <p>写入:MANPATH /usr/local/php7/php/man,然后就可以使用 man 命令查看</p>          </div><h6 id="nbsp-httpd-nginx-与-php-连接"><a href="#nbsp-httpd-nginx-与-php-连接" class="headerlink" title="&nbsp;httpd  nginx 与 php 连接"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>httpd  nginx 与 php 连接</h6><ul><li>httpd 模块 php </li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">要点：  </span><br><span class="line">1：httpd开启模块：  </span><br><span class="line">    LoadModule proxy_module modules/mod_proxy.so  </span><br><span class="line">    LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so  </span><br><span class="line"></span><br><span class="line">2：php编译指定 httpd apxs 路径（成为 httpd 模块）  </span><br><span class="line">    --with-apxs2=/usr/<span class="built_in">local</span>/httpd24/bin/apxs  </span><br><span class="line"></span><br><span class="line">连接：  </span><br><span class="line">vim /etc/httpd/httpd.conf  </span><br><span class="line">添加：（编译时这个默认已经添加）  </span><br><span class="line">    LoadModule php7_module        modules/libphp7.so  </span><br><span class="line">    <span class="comment">#LoadModule php5_module        modules/libphp5.so  </span></span><br><span class="line">添加 index.php：  </span><br><span class="line">    &lt;IfModule dir_module&gt;  </span><br><span class="line">        DirectoryIndex index.php index.html  </span><br><span class="line">    &lt;/IfModule&gt;  </span><br><span class="line">文件最后添加：  </span><br><span class="line">    &lt;FilesMatch \.php$&gt;  </span><br><span class="line">        SetHandler application/x-httpd-php  </span><br><span class="line">    &lt;/FilesMatch&gt;  </span><br><span class="line">备注：vhost 也可以应用</span><br></pre></td></tr></table></figure><ul><li>httpd（fastcgi）与 php-fpm</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">要点：  </span><br><span class="line">1：httpd开启模块：  </span><br><span class="line">    LoadModule proxy_module modules/mod_proxy.so  </span><br><span class="line">    LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so  </span><br><span class="line"></span><br><span class="line">2：php编译开启模块：  </span><br><span class="line">    --<span class="built_in">enable</span>-fpm  </span><br><span class="line"></span><br><span class="line">连接方式1：  </span><br><span class="line">vi /etc/httpd/httpd.conf  </span><br><span class="line">    最后添加：  </span><br><span class="line">      <span class="comment"># On：正向代理（默认）  Off：反向代理（此处建议使用）  </span></span><br><span class="line">      ProxyRequests Off  </span><br><span class="line">    &lt;FilesMatch \.php$&gt;  </span><br><span class="line">             SetHandler proxy:fcgi://127.0.0.1:9000  </span><br><span class="line">    &lt;/FilesMatch&gt;  </span><br><span class="line"></span><br><span class="line">连接方式2：  </span><br><span class="line">vi /etc/httpd/httpd.conf  </span><br><span class="line">    最后添加：  </span><br><span class="line">      <span class="comment"># On：正向代理（默认）  Off：反向代理（此处建议使用）  </span></span><br><span class="line">      ProxyRequests Off  </span><br><span class="line">    &lt;LocationMatch ^(.*\.php)$&gt;   </span><br><span class="line">        ProxyPass fcgi://127.0.0.1:9000/var/www/html/  </span><br><span class="line">    &lt;/LocationMatch&gt;  </span><br><span class="line"></span><br><span class="line">连接方式3：类型2的改变  </span><br><span class="line">vi /etc/httpd/httpd.conf  </span><br><span class="line">    最后添加：  </span><br><span class="line">      <span class="comment"># On：正向代理（默认）  Off：反向代理（此处建议使用）  </span></span><br><span class="line">      ProxyRequests Off  </span><br><span class="line">      ProxyPassMatch ^/(.*\.php)$  fcgi://127.0.0.1:9000/var/www/html/<span class="variable">$1</span>  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">连接方式设置完后再添加 index.php：  </span><br><span class="line">    &lt;IfModule dir_module&gt;  </span><br><span class="line">        DirectoryIndex index.php index.html  </span><br><span class="line">    &lt;/IfModule&gt;  </span><br><span class="line"></span><br><span class="line">备注：连接方式1 更方便在本地使用，2和3一般会使用远程 php 服务器上。</span><br></pre></td></tr></table></figure><ul><li>Nginx与php连接</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">要点：  </span><br><span class="line">1：Nginx 默认支持 fastcgi  </span><br><span class="line">2：php编译开启模块：  </span><br><span class="line">    --<span class="built_in">enable</span>-fpm  </span><br><span class="line"></span><br><span class="line">连接：  </span><br><span class="line">server &#123;  </span><br><span class="line">    listen       80;  </span><br><span class="line">    server_name  localhost;  </span><br><span class="line">    root /var/www/html;  </span><br><span class="line">    index  index.php index.html;  </span><br><span class="line">    .......  </span><br><span class="line">    <span class="comment"># nginx 连接方式  </span></span><br><span class="line">    location ~ \.php$ &#123;  </span><br><span class="line">        <span class="comment"># root /：可以在这里单独设置php的根，$document_root 变量是上面 root 定义的网站根路径。  </span></span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;  </span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;  </span><br><span class="line">        include        fastcgi_params;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="nbsp-PHP与MariaDB-mysql-连接"><a href="#nbsp-PHP与MariaDB-mysql-连接" class="headerlink" title="&nbsp;PHP与MariaDB(mysql)连接"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>PHP与MariaDB(mysql)连接</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">4.1：使用 MariaDB 编译（相对于mysql安装的目录）  </span><br><span class="line">--with-mysql=/usr/<span class="built_in">local</span>/mysql  </span><br><span class="line">--with-mysqli=/usr/<span class="built_in">local</span>/mysql/bin/mysql_config  </span><br><span class="line">--with-pdo-mysql=/usr/<span class="built_in">local</span>/mysql  </span><br><span class="line"></span><br><span class="line">4.2：使用 PHP 的 mysqlnd 编译（推荐使用）  </span><br><span class="line">--with-mysql=mysqlnd  </span><br><span class="line">--with-mysqli=mysqlnd  </span><br><span class="line">--with-pdo-mysql=mysqlnd  </span><br><span class="line"></span><br><span class="line">4.3：php版本区别要点：  </span><br><span class="line">1：php7移除了 mysql 扩展，php7仅能是用 mysqli 和 pdo_mysql  </span><br><span class="line">2：mysqlnd 要求 php版本 &gt;= 5.3  </span><br><span class="line">4：mysqlnd和php内部机制结合更紧密，是优化过的mysql驱动，建议使用</span><br></pre></td></tr></table></figure><h5 id="nbsp-测试"><a href="#nbsp-测试" class="headerlink" title="&nbsp;测试"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>测试</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">添加文件与内容  </span><br><span class="line">vim /var/www/html/index.php  </span><br><span class="line">    &lt;?php  </span><br><span class="line">    phpinfo();  </span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure><h5 id="nbsp-php多版本安装注意事项"><a href="#nbsp-php多版本安装注意事项" class="headerlink" title="&nbsp;php多版本安装注意事项"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>php多版本安装注意事项</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">6.1：httpd与php  </span><br><span class="line">httpd 模块：可以编译多个版本，但同时只能运行一个，另外一个需要注释。  </span><br><span class="line">    LoadModule php7_module        modules/libphp7.so  </span><br><span class="line">    <span class="comment">#LoadModule php5_module        modules/libphp5.so  </span></span><br><span class="line"></span><br><span class="line">httpd fastcgi：  </span><br><span class="line">    在 vhost 虚拟机中指定不同的监听地址。  </span><br><span class="line">    例如：  </span><br><span class="line">        &lt;VirtualHost *:80&gt;  </span><br><span class="line">        DocumentRoot <span class="string">"/web/a"</span>  </span><br><span class="line">        ServerName www.a.com  </span><br><span class="line">                &lt;FilesMatch \.php$&gt;  </span><br><span class="line">                         SetHandler proxy:fcgi://127.0.0.1:9000  </span><br><span class="line">                &lt;/FilesMatch&gt;  </span><br><span class="line">                <span class="comment"># 或者  </span></span><br><span class="line">                ProxyRequests Off  </span><br><span class="line">               ProxyPassMatch ^/(.*\.php)$  fcgi://127.0.0.1:9000/var/www/html/<span class="variable">$1</span>  </span><br><span class="line">        &lt;/VirtualHost&gt;  </span><br><span class="line"></span><br><span class="line">6.2：nginx与php  </span><br><span class="line">    指定不同的监听地址  </span><br><span class="line">    location ~ \.php$ &#123;  </span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="nbsp-推荐博客"><a href="#nbsp-推荐博客" class="headerlink" title="&nbsp;推荐博客"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>推荐博客</h5><ul><li><span class="exturl" data-url="aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2luc3RhbGwucGhwKOWumOe9keWuieijheW4ruWKqeaWh+ahoyk=" title="http://php.net/manual/zh/install.php(官网安装帮助文档)">http://php.net/manual/zh/install.php(官网安装帮助文档)<i class="fa fa-external-link"></i></span>  </li><li><span class="exturl" data-url="aHR0cDovL2Nuemh4Lm5ldC9ibG9nL2FwYWNoZS1odHRwZC1tb2RfcHJveHlfZmNnaS1waHAtZnBtLw==" title="http://cnzhx.net/blog/apache-httpd-mod_proxy_fcgi-php-fpm/">http://cnzhx.net/blog/apache-httpd-mod_proxy_fcgi-php-fpm/<i class="fa fa-external-link"></i></span> </li><li><span class="exturl" data-url="aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDg2MTUxNC9hcnRpY2xlL2RldGFpbHMvNTE5MjY1NzU=" title="http://blog.csdn.net/u010861514/article/details/51926575">http://blog.csdn.net/u010861514/article/details/51926575<i class="fa fa-external-link"></i></span></li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx编译安装</title>
      <link href="/Nginx/974856413.html"/>
      <url>/Nginx/974856413.html</url>
      
        <content type="html"><![CDATA[<h5 id="nbsp-Nginx编译安装"><a href="#nbsp-Nginx编译安装" class="headerlink" title="&nbsp;Nginx编译安装"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>Nginx编译安装</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.10.2.tar.gz</span><br><span class="line">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.39.tar.gz </span><br><span class="line">wget http://zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2l.tar.gz</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="nbsp-编译安装"><a href="#nbsp-编译安装" class="headerlink" title="&nbsp;编译安装"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>编译安装</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/opt/laohulab/nginx --user=www --group=www --with-openssl=../openssl-1.0.2l --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.11 --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><div class="note info">            <font style="color:red">此处编译将openssl、pcre、zlib编译至nginx启动内核，从而不依赖系统openssl、pcre、zlib，加快nginx启动速度！</font>          </div><h5 id="nbsp-查看安装版本"><a href="#nbsp-查看安装版本" class="headerlink" title="&nbsp;查看安装版本"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>查看安装版本</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@dokuwiki-10-26 ~]<span class="comment"># /opt/laohulab/nginx/sbin/nginx -V</span></span><br><span class="line">nginx version: nginx/1.10.2</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC) </span><br><span class="line">built with OpenSSL 1.0.2l  25 May 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/opt/laohulab/nginx --user=www --group=www --with-openssl=../openssl-1.0.2l --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.11 --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module</span><br></pre></td></tr></table></figure><h5 id="nbsp-参考案例"><a href="#nbsp-参考案例" class="headerlink" title="&nbsp;参考案例"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>参考案例</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx version: nginx/1.10.2</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) </span><br><span class="line">built with OpenSSL 1.0.2j  26 Sep 2016</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/opt/tuniu/nginx --user=www --group=www --with-ld-opt=-Wl,-rpath,/usr/<span class="built_in">local</span>/luajit/lib --with-openssl=../openssl-1.0.2j --with-pcre=../pcre-8.39/ --with-zlib=../zlib-1.2.8/ --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module --add-module=../ngx_devel_kit-0.3.0 --add-module=../lua-nginx-module-0.10.7 --add-module=../ngx_cache_purge-2.3 --add-module=../nginx-http-concat --add-module=../ngx_http_sticky_module --add-module=../nginx-upsync-module</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取adsl公网地址</title>
      <link href="/Adsl/3153032326.html"/>
      <url>/Adsl/3153032326.html</url>
      
        <content type="html"><![CDATA[<h5 id="nbsp-背景"><a href="#nbsp-背景" class="headerlink" title="&nbsp;背景"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>背景</h5><ul><li>实时获取宽带ADSL公网地址</li><li>解决动态域名更新失败，无法获取公网IP</li><li>邮件通知变更</li></ul><a id="more"></a><h5 id="nbsp-监控脚本"><a href="#nbsp-监控脚本" class="headerlink" title="&nbsp;监控脚本"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i><strong>监控脚本</strong></h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> urllib2,re,sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetWanIP</span><span class="params">()</span>:</span></span><br><span class="line">    respone = urllib2.urlopen(<span class="string">'http://ddns.oray.com/checkip'</span>,timeout=<span class="number">5</span>)</span><br><span class="line">    r = respone.read()</span><br><span class="line">    ip = re.search(<span class="string">'\d+\.\d+\.\d+\.\d+'</span>,r).group()</span><br><span class="line">    <span class="keyword">return</span> ip</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SentMail</span><span class="params">(LastWanIP,CurrentWanIP,time)</span>:</span></span><br><span class="line">    mail_host = <span class="string">'mail.laohulab.com'</span></span><br><span class="line">    mail_user = <span class="string">'postmaster'</span></span><br><span class="line">    mail_pass = <span class="string">'password'</span></span><br><span class="line">    sender = <span class="string">'postmaster@laohulab.com'</span></span><br><span class="line">    receivers = [<span class="string">'120731842@qq.com'</span>,<span class="string">'yongjianhu@laohulab.com'</span>]</span><br><span class="line"></span><br><span class="line">    message = MIMEMultipart()</span><br><span class="line">    message[<span class="string">'From'</span>] = Header(sender)</span><br><span class="line">    message[<span class="string">'To'</span>] = Header(<span class="string">';'</span>.join(receivers))</span><br><span class="line">    message[<span class="string">'Subject'</span>] = Header(<span class="string">'Adsl IP Update For laohulab.com !'</span>,<span class="string">'utf-8'</span>)</span><br><span class="line">    message.attach(MIMEText(<span class="string">'Time:%s\nLastWanIP:%s\nCurrentWanIP:%s\n'</span> % (time,LastWanIP,CurrentWanIP), <span class="string">'plain'</span>, <span class="string">'utf-8'</span>))</span><br><span class="line">    att1 = MIMEText(open(<span class="string">'adsl.txt'</span>,<span class="string">'rb'</span>).read(), <span class="string">'base64'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">    att1[<span class="string">"Content-Type"</span>] = <span class="string">'application/octet-stream'</span></span><br><span class="line">    att1[<span class="string">"Content-Disposition"</span>] = <span class="string">'attachment; filename=adsl.txt'</span></span><br><span class="line">    message.attach(att1)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        smtpObj = smtplib.SMTP()</span><br><span class="line">        smtpObj.connect(mail_host, <span class="number">25</span>)</span><br><span class="line">        smtpObj.login(mail_user,mail_pass)</span><br><span class="line">        smtpObj.sendmail(sender, receivers, message.as_string())</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\033[31;1mSuccess Sent Mail To %s\033[0m'</span> % receivers</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\033[31;1mFailer Sent Mail To %s\033[0m'</span> % receivers</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    f = file(<span class="string">'adsl.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">    LastWanIP = re.search(<span class="string">'\d+\.\d+\.\d+\.\d+'</span>,f.read().strip().split()[<span class="number">-1</span>]).group()</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">print</span> LastWanIP</span><br><span class="line">    CurrentIP = GetWanIP()</span><br><span class="line">    <span class="keyword">print</span> CurrentIP</span><br><span class="line">    <span class="keyword">if</span> CurrentIP == LastWanIP:</span><br><span class="line">        sys.exit(<span class="string">'\033[34;1m Current Adsl IP Not Changed For laohulab.com !\033[0m'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t = time.asctime(time.localtime(time.time()))</span><br><span class="line">        f = file(<span class="string">'adsl.txt'</span>,<span class="string">'ab'</span>)</span><br><span class="line">        f.write(<span class="string">'%s %s\n'</span> % (t,CurrentIP))</span><br><span class="line">        f.flush()</span><br><span class="line">        f.close()</span><br><span class="line">        SentMail(LastWanIP,CurrentIP,t)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Adsl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Adsl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定制登录shell提示信息</title>
      <link href="/uncategorized/445565787.html"/>
      <url>/uncategorized/445565787.html</url>
      
        <content type="html"><![CDATA[<h5 id="nbsp-定制提示信息"><a href="#nbsp-定制提示信息" class="headerlink" title="&nbsp;定制提示信息"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>定制提示信息</h5><p><img src="/images/pasted-10.png" alt></p><h5 id="nbsp-脚本文件"><a href="#nbsp-脚本文件" class="headerlink" title="&nbsp;脚本文件"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>脚本文件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Get Local IP LIST</span></span><br><span class="line">IP_LIST=`ifconfig  |grep -v <span class="string">'inet6'</span> |grep <span class="string">'inet'</span>|grep -v <span class="string">'127.0.0.1'</span>|awk <span class="string">'&#123;print $2&#125;'</span>|awk -F: <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">IP_ARRY=(<span class="variable">$IP_LIST</span>)</span><br><span class="line">IP=<span class="string">"|"</span></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> <span class="variable">$&#123;IP_ARRY[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    IP=<span class="string">"<span class="variable">$IP</span> <span class="variable">$v</span> |"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32;1m</span></span><br><span class="line"><span class="string">----------------------------------------------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Hi\033[0m \033[31;1m`whoami`\033[0m \033[32;1mWelcome to login Nanjing JumpBox.</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">-----------------------\033[0m\033[31;1m NanJing JumpBox Info \033[0m\033[32;1m-------------------------</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> HomeDir = <span class="variable">$HOME</span>                                                                 </span></span><br><span class="line"><span class="string"> HostName = <span class="variable">$HOSTNAME</span>                       </span></span><br><span class="line"><span class="string"> OS = `cat /etc/centos-release`                          </span></span><br><span class="line"><span class="string"> Kernel = `uname -r`                          </span></span><br><span class="line"><span class="string"> CPU = `lscpu |grep Socket|awk '&#123;print <span class="variable">$2</span>&#125;'` *`cat /proc/cpuinfo | grep "</span>model name<span class="string">"|uniq|awk -F: '&#123;print <span class="variable">$2</span>&#125;'`           </span></span><br><span class="line"><span class="string"> MEM = `free -h|grep Mem|awk '&#123;print <span class="variable">$2</span>&#125;'`</span></span><br><span class="line"><span class="string"> DISK = `lsblk |grep sda |awk '&#123;print <span class="variable">$4</span>&#125;' | head -n 1`</span></span><br><span class="line"><span class="string"> IP = <span class="variable">$IP</span></span></span><br><span class="line"><span class="string"> Note:\033[31;1m Do not upload large files to JumpBox\033[32;1m</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">-----------------------\033[0m\033[31;1m YZKC Cluster 1 Phase \033[0m\033[32;1m-------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 1.Login Host: 20.0.0.10</span></span><br><span class="line"><span class="string"> 2.Directory Capacity: 40TB [/YZGROUP/genewiz]       </span></span><br><span class="line"><span class="string"> 3.Public Soft: /YZGROUP/genewiz/public/app                  </span></span><br><span class="line"><span class="string"> 4.SuZhou Directory: /YZGROUP/genewiz/genewizsz         </span></span><br><span class="line"><span class="string"> 5.NanJing Directory: /YZGROUP/genewiz/genewiznj      </span></span><br><span class="line"><span class="string">\033[0m\033[31;1m 6.Do not upload large files to the SubNode OF YZKC by JumpBox\033[0m  \033[32;1m</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Note:</span></span><br><span class="line"><span class="string"> 1.Please SSH \$&#123;hpcusername&#125;@20.0.0.10</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">-----------------------\033[0m\033[31;1m YZKC Cluster 2 Phase \033[0m\033[32;1m-------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 1.Login Host: njmgt02-04 njmgt02-05 njmgt02-07</span></span><br><span class="line"><span class="string"> 2.Directory Capacity: 100TB [/YZGROUP4/STORAGE/genewiz]       </span></span><br><span class="line"><span class="string"> 3.Public Soft: /YZGROUP4/STORAGE/genewiz/public                  </span></span><br><span class="line"><span class="string"> 4.SuZhou Directory: /YZGROUP4/STORAGE/genewiz/genewizsz         </span></span><br><span class="line"><span class="string"> 5.NanJing Directory: /YZGROUP4/STORAGE/genewiz/genewiznj        </span></span><br><span class="line"><span class="string">\033[0m\033[31;1m 6.Do not upload large files to the SubNode OF YZKC by JumpBox\033[0m  \033[32;1m</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> Note:</span></span><br><span class="line"><span class="string"> 1.Please first SSH \$&#123;hpcusername&#125;@20.0.0.10 </span></span><br><span class="line"><span class="string"> 2.SSH \$&#123;hpcusername&#125;@&#123;njmgt02-04|njmgt02-05|njmgt02-07&#125;</span></span><br><span class="line"><span class="string">----------------------------------------------------------------------\033[0m"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix安装指南</title>
      <link href="/uncategorized/1129683265.html"/>
      <url>/uncategorized/1129683265.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>zabbix告警邮件</title>
      <link href="/Zabbix/2948901815.html"/>
      <url>/Zabbix/2948901815.html</url>
      
        <content type="html"><![CDATA[<h5 id="nbsp-新增功能"><a href="#nbsp-新增功能" class="headerlink" title="&nbsp;新增功能"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>新增功能</h5><ul><li>对邮件内容进行了重新定制</li><li>增加了监控告警图表展示</li></ul><a id="more"></a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.mime.application <span class="keyword">import</span> MIMEApplication</span><br><span class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</span><br><span class="line"> </span><br><span class="line"><span class="comment">#zabbix接口地址、登录地址、图片地址</span></span><br><span class="line">zabbix_url = <span class="string">'http://njzabbix.local.genewiz.com/api_jsonrpc.php'</span></span><br><span class="line">login_url = <span class="string">'http://njzabbix.local.genewiz.com/index.php'</span></span><br><span class="line">zabbix_header = &#123;</span><br><span class="line">    <span class="string">"Content-Type"</span>:<span class="string">"application/json-rpc"</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#获取token</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetToken</span><span class="params">()</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">        <span class="string">"method"</span>: <span class="string">"user.login"</span>,</span><br><span class="line">        <span class="string">"params"</span>: &#123;</span><br><span class="line">            <span class="string">"user"</span>: <span class="string">"xxxxxxxx"</span>,</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"xxxxxxxx"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"auth"</span>: <span class="literal">None</span></span><br><span class="line">    &#125;</span><br><span class="line">    request = requests.post(url=zabbix_url, headers=zabbix_header, data=json.dumps(data))</span><br><span class="line">    token = json.loads(request.content)[<span class="string">"result"</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"> </span><br><span class="line"><span class="comment">#获取graphitem id</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetGraphID</span><span class="params">(itemids)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">        <span class="string">"method"</span>: <span class="string">"graphitem.get"</span>,</span><br><span class="line">        <span class="string">"params"</span>: &#123;</span><br><span class="line">            <span class="string">"output"</span>: <span class="string">"extend"</span>,</span><br><span class="line">            <span class="string">"itemids"</span>: itemids</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"auth"</span>: GetToken(),</span><br><span class="line">        <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    request = requests.post(url=zabbix_url, headers=zabbix_header, data=json.dumps(data))</span><br><span class="line">    <span class="keyword">if</span> json.loads(request.content)[<span class="string">'result'</span>]:</span><br><span class="line">        <span class="keyword">return</span> json.loads(request.content)[<span class="string">'result'</span>][<span class="number">0</span>][<span class="string">'graphid'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">PicSave</span><span class="params">(ip,graphid)</span>:</span></span><br><span class="line">    <span class="comment">#新建以当天日期为名的文件夹保存图片</span></span><br><span class="line">    today = datetime.datetime.now().date().strftime(<span class="string">'%Y%m%d'</span>)</span><br><span class="line">    pic_save_path_dir= os.path.join(<span class="string">'/opt/genewiznj/zabbix/img/'</span>,today )</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(pic_save_path_dir):</span><br><span class="line">        os.makedirs(pic_save_path_dir)</span><br><span class="line">    pic_name = ip + <span class="string">'-'</span> + graphid +<span class="string">'.png'</span></span><br><span class="line">    pic_save_path = os.path.join(pic_save_path_dir,pic_name)</span><br><span class="line">    <span class="comment">#定义graph的starttime参数，从前一天的9:00开始</span></span><br><span class="line">    yesterday = (datetime.datetime.now()-datetime.timedelta(days=<span class="number">1</span>))</span><br><span class="line">    yesterday9 = datetime.datetime(yesterday.year,yesterday.month,yesterday.day,<span class="number">9</span>).strftime(<span class="string">'%Y%m%d%H%M%S'</span>)</span><br><span class="line">    graph_args = &#123;</span><br><span class="line">        <span class="string">"graphid"</span>:graphid,</span><br><span class="line">        <span class="string">"width"</span>:<span class="number">800</span>,</span><br><span class="line">        <span class="string">"stime"</span>:yesterday9,</span><br><span class="line">        <span class="string">"isNow"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"period"</span>:<span class="number">7200</span> <span class="comment">#定义时长，取1天的数据,单位s</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">print</span> graph_args</span><br><span class="line">    graph_url = <span class="string">'http://njzabbix.local.genewiz.com/chart2.php'</span></span><br><span class="line">    client = requests.session()</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">'jianhu.yong'</span>,</span><br><span class="line">        <span class="string">"password"</span>: <span class="string">'Welcome2017'</span>,</span><br><span class="line">        <span class="string">"autologin"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"enter"</span>: <span class="string">"Sign in"</span></span><br><span class="line">    &#125;</span><br><span class="line">    time.sleep(<span class="number">10</span>)</span><br><span class="line">    r=client.post(url=login_url,data=data)</span><br><span class="line">    r=client.get(url=graph_url,params=graph_args)</span><br><span class="line">    <span class="keyword">with</span> open(pic_save_path,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line">        <span class="comment">#f.flush()</span></span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">return</span> pic_save_path</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SendMail</span><span class="params">(username, password, from_addr, to_addrs, message)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        server = smtplib.SMTP(<span class="string">'smtp.partner.outlook.cn'</span>, <span class="string">'587'</span>)</span><br><span class="line">        server.ehlo()</span><br><span class="line">        server.starttls()</span><br><span class="line">        server.ehlo()</span><br><span class="line">        server.login(username, password)</span><br><span class="line">        server.sendmail(from_addr,to_addrs,message.as_string())</span><br><span class="line">        server.quit()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) != <span class="number">4</span>:</span><br><span class="line">        sys.exit(<span class="string">'Usage:%s test@examplie.com mail_subject mail_content'</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        username = <span class="string">'jianhu.yong@genewiz.com.cn'</span></span><br><span class="line">        password = <span class="string">'Welcome2017'</span></span><br><span class="line">        from_addr = <span class="string">'jianhu.yong@genewiz.com.cn'</span></span><br><span class="line">        mail_msg = sys.argv[<span class="number">3</span>].strip().split(<span class="string">'\r\n'</span>)</span><br><span class="line">        mail_dic = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> mail_msg:</span><br><span class="line">            temp = i.split(<span class="string">':'</span>)</span><br><span class="line">            <span class="keyword">if</span> len(temp)==<span class="number">2</span>:</span><br><span class="line">                mail_dic[temp[<span class="number">0</span>]] = temp[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                mail_dic[temp[<span class="number">0</span>]] = <span class="string">':'</span>.join(temp[<span class="number">1</span>:])</span><br><span class="line">        <span class="keyword">print</span> mail_dic</span><br><span class="line">        <span class="keyword">if</span> mail_dic.has_key(<span class="string">'Problem Time'</span>):</span><br><span class="line">            key = <span class="string">'Problem Time'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            key = <span class="string">'Recovery Time'</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        graphitem_id = GetGraphID(<span class="string">'&#123;0&#125;'</span>.format(mail_dic[<span class="string">'Problem Item ID'</span>]))</span><br><span class="line">        <span class="keyword">if</span> graphitem_id:</span><br><span class="line">            pic_save_path = PicSave(mail_dic[<span class="string">'Problem Host IP'</span>],graphitem_id)</span><br><span class="line">            mail_msg = <span class="string">'''</span></span><br><span class="line"><span class="string">                &lt;html lang="en"&gt;&lt;head&gt;</span></span><br><span class="line"><span class="string">                &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</span></span><br><span class="line"><span class="string">                    &lt;title&gt;Document&lt;/title&gt;</span></span><br><span class="line"><span class="string">                    &lt;style type="text/css"&gt;</span></span><br><span class="line"><span class="string">                    .bg &#123;</span></span><br><span class="line"><span class="string">                        /*width: 600px;*/</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    .bg table &#123;</span></span><br><span class="line"><span class="string">                        /*width: 600px;*/</span></span><br><span class="line"><span class="string">                        font: 12px microsoft yahei;</span></span><br><span class="line"><span class="string">                        border-collapse: collapse;</span></span><br><span class="line"><span class="string">                        border: 1px solid #B9B4B1;</span></span><br><span class="line"><span class="string">                        text-align: left;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    .bg table td &#123;</span></span><br><span class="line"><span class="string">                        border: 1px solid #B9B4B1;</span></span><br><span class="line"><span class="string">                        text-align: left;</span></span><br><span class="line"><span class="string">                        height: 28px;</span></span><br><span class="line"><span class="string">                        padding-left: 10px;</span></span><br><span class="line"><span class="string">                        padding-right: 10px;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    .bg .r1 &#123;</span></span><br><span class="line"><span class="string">                        background: #4285F4;</span></span><br><span class="line"><span class="string">                        color: #F8FBFD;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    ul&#123;</span></span><br><span class="line"><span class="string">                        padding:0;</span></span><br><span class="line"><span class="string">                        margin:0;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    ul li&#123;</span></span><br><span class="line"><span class="string">                        list-style: none;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    ul li a&#123;</span></span><br><span class="line"><span class="string">                        text-decoration: none;</span></span><br><span class="line"><span class="string">                        display: inline-block;</span></span><br><span class="line"><span class="string">                        width: 400px;</span></span><br><span class="line"><span class="string">                        height: 20px;</span></span><br><span class="line"><span class="string">                        color: #4285F4;</span></span><br><span class="line"><span class="string">                        font:12px/20px microsoft yahei;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    p&#123;</span></span><br><span class="line"><span class="string">                        color: red;</span></span><br><span class="line"><span class="string">                        font:12px/20px microsoft yahei;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    &lt;/style&gt;</span></span><br><span class="line"><span class="string">                &lt;/head&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                &lt;body&gt;</span></span><br><span class="line"><span class="string">                    &lt;h4 style="border-bottom:1px solid black;padding-bottom: 10px"&gt;1.告警详情&lt;/h4&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="bg"&gt;</span></span><br><span class="line"><span class="string">                        &lt;table&gt;</span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;                </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Host&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Host IP&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Item ID&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Name&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Key&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Value&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Level&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Trigger Name&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;        </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Trigger Rule&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Latest Collection Value&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Original Problem ID&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;   </span></span><br><span class="line"><span class="string">                        &lt;/table&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    &lt;h4 style="border-bottom:1px solid black;padding-bottom: 10px"&gt;2.监控图表&lt;/h4&gt;</span></span><br><span class="line"><span class="string">                    &lt;img src="cid:image1"&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                &lt;/body&gt;</span></span><br><span class="line"><span class="string">                &lt;/html&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">            '''</span> % (</span><br><span class="line">                    key,</span><br><span class="line">                    mail_dic[key],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Host'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Host IP'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Item ID'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Name'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Key'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Value'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Level'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Trigger Name'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Trigger Rule'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Latest Collection Value'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Original Problem ID'</span>]</span><br><span class="line">                )</span><br><span class="line">            message = MIMEText(mail_msg, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">            msg=MIMEMultipart(<span class="string">'related'</span>)</span><br><span class="line">            to_addrs = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> sys.argv[<span class="number">1</span>].split(<span class="string">','</span>):</span><br><span class="line">                to_addrs.append(i)</span><br><span class="line">            msg[<span class="string">'From'</span>] = from_addr</span><br><span class="line">            <span class="keyword">if</span> len(to_addrs) == <span class="number">1</span>:</span><br><span class="line">                msg[<span class="string">'To'</span>] = to_addrs[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                msg[<span class="string">'To'</span>] = <span class="string">','</span>.join(to_addrs)</span><br><span class="line">            subject = sys.argv[<span class="number">2</span>]</span><br><span class="line">            msg[<span class="string">'Subject'</span>] = subject</span><br><span class="line">            msgAlternative = MIMEMultipart(<span class="string">'alternative'</span>)</span><br><span class="line">            msg.attach(msgAlternative)</span><br><span class="line">            msgAlternative.attach(message)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            fp=open(pic_save_path,<span class="string">'rb'</span>)</span><br><span class="line">            image=MIMEImage(fp.read())</span><br><span class="line">            fp.close()</span><br><span class="line">            image.add_header(<span class="string">'Content-ID'</span>,<span class="string">'&lt;image1&gt;'</span>)</span><br><span class="line">            msg.attach(image)</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> SendMail(username, password, from_addr, to_addrs, msg) == <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"Email successfully sent to"</span>, to_addrs</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"Email not sent to"</span>, to_addrs</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            mail_msg = <span class="string">'''</span></span><br><span class="line"><span class="string">                &lt;html lang="en"&gt;&lt;head&gt;</span></span><br><span class="line"><span class="string">                &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</span></span><br><span class="line"><span class="string">                    &lt;title&gt;Document&lt;/title&gt;</span></span><br><span class="line"><span class="string">                    &lt;style type="text/css"&gt;</span></span><br><span class="line"><span class="string">                    .bg &#123;</span></span><br><span class="line"><span class="string">                        /*width: 600px;*/</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    .bg table &#123;</span></span><br><span class="line"><span class="string">                        /*width: 600px;*/</span></span><br><span class="line"><span class="string">                        font: 12px microsoft yahei;</span></span><br><span class="line"><span class="string">                        border-collapse: collapse;</span></span><br><span class="line"><span class="string">                        border: 1px solid #B9B4B1;</span></span><br><span class="line"><span class="string">                        text-align: left;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    .bg table td &#123;</span></span><br><span class="line"><span class="string">                        border: 1px solid #B9B4B1;</span></span><br><span class="line"><span class="string">                        text-align: left;</span></span><br><span class="line"><span class="string">                        height: 28px;</span></span><br><span class="line"><span class="string">                        padding-left: 10px;</span></span><br><span class="line"><span class="string">                        padding-right: 10px;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    .bg .r1 &#123;</span></span><br><span class="line"><span class="string">                        background: #4285F4;</span></span><br><span class="line"><span class="string">                        color: #F8FBFD;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    ul&#123;</span></span><br><span class="line"><span class="string">                        padding:0;</span></span><br><span class="line"><span class="string">                        margin:0;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    ul li&#123;</span></span><br><span class="line"><span class="string">                        list-style: none;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    ul li a&#123;</span></span><br><span class="line"><span class="string">                        text-decoration: none;</span></span><br><span class="line"><span class="string">                        display: inline-block;</span></span><br><span class="line"><span class="string">                        width: 400px;</span></span><br><span class="line"><span class="string">                        height: 20px;</span></span><br><span class="line"><span class="string">                        color: #4285F4;</span></span><br><span class="line"><span class="string">                        font:12px/20px microsoft yahei;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    p&#123;</span></span><br><span class="line"><span class="string">                        color: red;</span></span><br><span class="line"><span class="string">                        font:12px/20px microsoft yahei;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    &lt;/style&gt;</span></span><br><span class="line"><span class="string">                &lt;/head&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                &lt;body&gt;</span></span><br><span class="line"><span class="string">                    &lt;h4 style="border-bottom:1px solid black;padding-bottom: 10px"&gt;1.告警详情&lt;/h4&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="bg"&gt;</span></span><br><span class="line"><span class="string">                        &lt;table&gt;</span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;                </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Host&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Host IP&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Item ID&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Name&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Key&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Value&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Level&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Trigger Name&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;        </span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Problem Trigger Rule&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Latest Collection Value&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td style="color: red"&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                                &lt;td class="r1"&gt;Original Problem ID&lt;/td&gt;</span></span><br><span class="line"><span class="string">                                &lt;td&gt;%s&lt;/td&gt;</span></span><br><span class="line"><span class="string">                            &lt;/tr&gt;   </span></span><br><span class="line"><span class="string">                        &lt;/table&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/body&gt;</span></span><br><span class="line"><span class="string">                &lt;/html&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">            '''</span> % (</span><br><span class="line">                    key,</span><br><span class="line">                    mail_dic[key],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Host'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Host IP'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Item ID'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Name'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Key'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Value'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Level'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Trigger Name'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Problem Trigger Rule'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Latest Collection Value'</span>],</span><br><span class="line">                    mail_dic[<span class="string">'Original Problem ID'</span>]</span><br><span class="line">                )</span><br><span class="line">            message = MIMEText(mail_msg, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">            to_addrs = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> sys.argv[<span class="number">1</span>].split(<span class="string">','</span>):</span><br><span class="line">                to_addrs.append(i)</span><br><span class="line">            message[<span class="string">'From'</span>] = from_addr</span><br><span class="line">            <span class="keyword">if</span> len(to_addrs) == <span class="number">1</span>:</span><br><span class="line">                message[<span class="string">'To'</span>] = to_addrs[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                message[<span class="string">'To'</span>] = <span class="string">','</span>.join(to_addrs)</span><br><span class="line">            subject = sys.argv[<span class="number">2</span>]</span><br><span class="line">            message[<span class="string">'Subject'</span>] = subject</span><br><span class="line">            <span class="keyword">if</span> SendMail(username, password, from_addr, to_addrs, message) == <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"Email successfully sent to"</span>, to_addrs</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"Email not sent to"</span>, to_addr</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wise-installation</title>
      <link href="/Bioinformatics-Software/3851490840.html"/>
      <url>/Bioinformatics-Software/3851490840.html</url>
      
        <content type="html"><![CDATA[<h5 id="nbsp-软件相关"><a href="#nbsp-软件相关" class="headerlink" title="&nbsp;软件相关"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>软件相关</h5><ul><li>软件下载地址：<span class="exturl" data-url="aHR0cDovL3d3dy5lYmkuYWMudWsvfmJpcm5leS93aXNlMi93aXNlMi40LjEudGFyLmd6" title="http://www.ebi.ac.uk/~birney/wise2/wise2.4.1.tar.gz">http://www.ebi.ac.uk/~birney/wise2/wise2.4.1.tar.gz<i class="fa fa-external-link"></i></span></li><li>软件介绍：<span class="exturl" data-url="aHR0cDovL3d3dy5lYmkuYWMudWsvfmJpcm5leS93aXNlMi8=" title="http://www.ebi.ac.uk/~birney/wise2/">http://www.ebi.ac.uk/~birney/wise2/<i class="fa fa-external-link"></i></span></li><li>软件help页面：<span class="exturl" data-url="aHR0cDovL3d3dy5lYmkuYWMudWsvVG9vbHMvcHNhL2dlbmV3aXNlL2hlbHA=" title="http://www.ebi.ac.uk/Tools/psa/genewise/help">http://www.ebi.ac.uk/Tools/psa/genewise/help<i class="fa fa-external-link"></i></span></li></ul><a id="more"></a><h5 id="nbsp-安装路径"><a href="#nbsp-安装路径" class="headerlink" title="&nbsp;安装路径"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装路径</h5><p>安装路径：/share/home/pengyang.xu/software<br>bin目录：/share/home/pengyang.xu/software/wise2.4.1/src/bin</p><h5 id="nbsp-安装指南"><a href="#nbsp-安装指南" class="headerlink" title="&nbsp;安装指南"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装指南</h5><h6 id="nbsp-安装glib2-devel依赖包（YUM或者源码编译安装-编译安装涉及相关头文件）"><a href="#nbsp-安装glib2-devel依赖包（YUM或者源码编译安装-编译安装涉及相关头文件）" class="headerlink" title="&nbsp;安装glib2-devel依赖包（YUM或者源码编译安装,编译安装涉及相关头文件）"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>安装glib2-devel依赖包（YUM或者源码编译安装,编译安装涉及相关头文件）</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install glib2-devel</span><br></pre></td></tr></table></figure><h6 id="nbsp-下载并加压安装包"><a href="#nbsp-下载并加压安装包" class="headerlink" title="&nbsp;下载并加压安装包"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>下载并加压安装包</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://www.ebi.ac.uk/~birney/wise2/wise2.4.1.tar.gz  -P /tmp</span><br><span class="line">tar zxvf /tmp/wise2.4.1.tar.gz -C /share/home/pengyang.xu/software/</span><br></pre></td></tr></table></figure><h6 id="nbsp-配置Maekefile"><a href="#nbsp-配置Maekefile" class="headerlink" title="&nbsp;配置Maekefile"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>配置Maekefile</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">'s#CFLAGS = -c -O3  `glib-config --cflags`#CFLAGS = -c -O3  `glib-config --cflags` -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include#g'</span> /share/home/pengyang.xu/software/wise2.4.1/src/makefile</span><br><span class="line">find /share/home/pengyang.xu/software/wise2.4.1/src  -name <span class="string">"makefile"</span> |xargs sed -i <span class="string">'s/glib-config/pkg-config --libs glib-2.0/g'</span></span><br><span class="line">sed -i <span class="string">'s/getline/getline_new/g'</span> /share/home/pengyang.xu/software/wise2.4.1/src/HMMer2/sqio.c</span><br><span class="line">sed -i <span class="string">'s/isnumber/isdigit/g'</span> /share/home/pengyang.xu/software/wise2.4.1/src/models/phasemodel.c</span><br></pre></td></tr></table></figure><h6 id="nbsp-安装"><a href="#nbsp-安装" class="headerlink" title="&nbsp;安装"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>安装</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/share/home/pengyang.xu/software/wise2.4.1/src  &amp;&amp; make all</span><br></pre></td></tr></table></figure><h6 id="nbsp-配置WISECONFIGDIR路径（请写入-bashrc或者-bash-profile）"><a href="#nbsp-配置WISECONFIGDIR路径（请写入-bashrc或者-bash-profile）" class="headerlink" title="&nbsp;配置WISECONFIGDIR路径（请写入.bashrc或者.bash_profile）"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>配置WISECONFIGDIR路径（请写入.bashrc或者.bash_profile）</h6><p><img src="/images/pasted-3.png" alt></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> WISECONFIGDIR=/share/home/pengyang.xu/software/wise2.4.1/wisecfg</span><br></pre></td></tr></table></figure><h6 id="nbsp-验证安装是否成功"><a href="#nbsp-验证安装是否成功" class="headerlink" title="&nbsp;验证安装是否成功"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>验证安装是否成功</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /share/home/pengyang.xu/software/wise2.4.1/src &amp;&amp; make <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-4.png" alt></p><div class="note warning">            <p>验证前请先配置环境变量（exportWISECONFIGDIR=/share/home/pengyang.xu/software/wise2.4.1/wisecfg）</p>          </div><h5 id="nbsp-常见问题"><a href="#nbsp-常见问题" class="headerlink" title="&nbsp;常见问题"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i><font style="color:red">常见问题</font></h5><h6 id="nbsp-getline冲突"><a href="#nbsp-getline冲突" class="headerlink" title="&nbsp;getline冲突"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>getline冲突</h6><p><img src="/images/pasted-5.png" alt><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">解决方案：</span><br><span class="line">sed -i <span class="string">'s/getline/getline_new/g'</span> /share/home/pengyang.xu/software/wise2.4.1/src/HMMer2/sqio.c</span><br></pre></td></tr></table></figure></p><h6 id="nbsp-安装过程中无法找到相关的头文件"><a href="#nbsp-安装过程中无法找到相关的头文件" class="headerlink" title="&nbsp;安装过程中无法找到相关的头文件"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>安装过程中无法找到相关的头文件</h6><p><img src="/images/pasted-6.png" alt><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">解决方案：</span><br><span class="line">sed -i <span class="string">'s#CFLAGS = -c -O3  `glib-config --cflags`#CFLAGS = -c -O3  `glib-config --cflags` -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include#g'</span> /share/home/pengyang.xu/software/wise2.4.1/src/makefile</span><br></pre></td></tr></table></figure></p><h6 id="nbsp-glib-config-command-not-found"><a href="#nbsp-glib-config-command-not-found" class="headerlink" title="&nbsp;glib-config: command not found"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>glib-config: command not found</h6><p><img src="/images/pasted-7.png" alt><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">解决方案：</span><br><span class="line">find /share/home/pengyang.xu/software/wise2.4.1/src  -name <span class="string">"makefile"</span> |xargs sed -i <span class="string">'s/glib-config/pkg-config --libs glib-2.0/g'</span></span><br></pre></td></tr></table></figure></p><div class="note info">            <p>备注：该软件版本较老，使用的glib库是glib1的库，现在较新的系统都用的glib2的库，所以没有glib1，按照软件默认的makefile文件来编译就会报glib-config command not found这种错误。</p>          </div><p><img src="/images/pasted-8.png" alt></p><h6 id="nbsp-undefined-reference-to-isnumber"><a href="#nbsp-undefined-reference-to-isnumber" class="headerlink" title="&nbsp;undefined reference to isnumber"></a><i class="fa fa-angle-double-right fa-lg">&nbsp;</i>undefined reference to isnumber</h6><p><img src="/images/pasted-9.png" alt><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">解决方案：</span><br><span class="line">sed -i <span class="string">'s/isnumber/isdigit/g'</span> /share/home/pengyang.xu/software/wise2.4.1/src/models/phasemodel.c</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Bioinformatics Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>rtg-tool-installation</title>
      <link href="/Bioinformatics-Software/13202640.html"/>
      <url>/Bioinformatics-Software/13202640.html</url>
      
        <content type="html"><![CDATA[<h6 id="nbsp-软件介绍"><a href="#nbsp-软件介绍" class="headerlink" title="&nbsp;软件介绍"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>软件介绍</h6><p><i class="fa fa-link fa-1x">&nbsp;</i><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1JlYWxUaW1lR2Vub21pY3MvcnRnLXRvb2xz" title="https://github.com/RealTimeGenomics/rtg-tools">https://github.com/RealTimeGenomics/rtg-tools<i class="fa fa-external-link"></i></span></p><h6 id="nbsp-安装依赖"><a href="#nbsp-安装依赖" class="headerlink" title="&nbsp;安装依赖"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装依赖</h6><ul><li>java 1.8 or later [已安装]</li><li>graphviz [已安装]</li><li>apache ant 1.9 or later [待安装]</li></ul><a id="more"></a><p><i class="fa fa-angle-double-right fa-lg">&nbsp;</i><strong>安装apache ant</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache//ant/binaries/apache-ant-1.9.11-bin.tar.gz</span><br><span class="line">tar zxvf apache-ant-1.9.11-bin.tar.gz</span><br><span class="line">mv apache-ant-1.9.11 /YZGROUP/genewiz/public/app/</span><br></pre></td></tr></table></figure><p><i class="fa fa-angle-double-right fa-lg">&nbsp;</i><strong>配置环境变量</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="string">"/YZGROUP/genewiz/public/app/jdk18"</span></span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="string">"/YZGROUP/genewiz/public/app/jdk18/jre"</span></span><br><span class="line"><span class="built_in">export</span> ANT_HOME=<span class="string">"/YZGROUP/genewiz/public/app/apache-ant-1.9.11"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JRE_HOME</span>/bin:<span class="variable">$ANT_HOME</span>/bin:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure><h6 id="nbsp-安装rtg-tools"><a href="#nbsp-安装rtg-tools" class="headerlink" title="&nbsp;安装rtg-tools"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装rtg-tools</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/RealTimeGenomics/rtg-tools.git</span><br><span class="line"><span class="built_in">cd</span> rtg-tools/</span><br><span class="line">ant runalltests</span><br><span class="line">ant zip-nojre</span><br><span class="line"><span class="built_in">cd</span> /YZGROUP/genewiz/public/download/rtg-tools/dist</span><br><span class="line">unzip rtg-tools-3.9-eda9a71-nojre.zip</span><br><span class="line">mv rtg-tools-3.9-eda9a71 /YZGROUP/genewiz/public/app/rtg-tools-3.9</span><br><span class="line"><span class="built_in">cd</span> /YZGROUP/genewiz/public/app/rtg-tools-3.9</span><br><span class="line">./scripts/demo-tools.sh <span class="variable">$PWD</span>/rtg <span class="comment">#生成demo数据</span></span><br></pre></td></tr></table></figure><h6 id="nbsp-配置rtg-PATH"><a href="#nbsp-配置rtg-PATH" class="headerlink" title="&nbsp;配置rtg PATH"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>配置rtg PATH</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/YZGROUP/genewiz/public/app/rtg-tools-3.9:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bioinformatics Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sjm-installation</title>
      <link href="/Bioinformatics-Software/2537426028.html"/>
      <url>/Bioinformatics-Software/2537426028.html</url>
      
        <content type="html"><![CDATA[<h6 id="nbsp-安装依赖"><a href="#nbsp-安装依赖" class="headerlink" title="&nbsp;安装依赖"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装依赖</h6><ul><li>tclap</li><li>boost [/YZGROUP4/STORAGE/genewiz/public/app/boost-1.64.0/]</li><li>lsf [/YZGROUP4/ibm/lsf2.0/lsf/10.1/include]</li></ul><a id="more"></a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf tclap-1.2.1.tar.gz </span><br><span class="line"><span class="built_in">cd</span> tclap-1.2.1/</span><br><span class="line">./configure --prefix=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/tclap-1.2.1"</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h6 id="nbsp-安装sjm"><a href="#nbsp-安装sjm" class="headerlink" title="&nbsp;安装sjm"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装sjm</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> CXXFLAGS=<span class="string">"-I/YZGROUP4/STORAGE/genewiz/public/app/tclap-1.2.1/include -I/YZGROUP4/STORAGE/genewiz/public/app/boost-1.64.0/include -I/YZGROUP4/ibm/lsf2.0/lsf/10.1/include"</span></span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">"-L/YZGROUP4/STORAGE/genewiz/public/app/tclap-1.2.1/lib -L/YZGROUP4/STORAGE/genewiz/public/app/boost-1.64.0/lib"</span></span><br><span class="line">./configure --prefix=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/sjm-1.3.0"</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bioinformatics Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>allpathslg-installation</title>
      <link href="/Bioinformatics-Software/2990336266.html"/>
      <url>/Bioinformatics-Software/2990336266.html</url>
      
        <content type="html"><![CDATA[<h6 id="nbsp-官网"><a href="#nbsp-官网" class="headerlink" title="&nbsp;官网"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>官网</h6><p><i class="fa fa-hand-point-right fa-1x">&nbsp;<br></i><span class="exturl" data-url="aHR0cDovL3NvZnR3YXJlLmJyb2FkaW5zdGl0dXRlLm9yZy9hbGxwYXRocy1sZy9ibG9nLz9wYWdlX2lkPTEy" title="http://software.broadinstitute.org/allpaths-lg/blog/?page_id=12">http://software.broadinstitute.org/allpaths-lg/blog/?page_id=12<i class="fa fa-external-link"></i></span></p><h6 id="nbsp-官方文档"><a href="#nbsp-官方文档" class="headerlink" title="&nbsp;官方文档"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>官方文档</h6><p><i class="fa fa-file-pdf-o fa-1x">&nbsp;</i><a href="/Bioinformatics-Software/2990336266/AllPaths-LG_Manual.pdf" title="AllPaths-LG_Manual.pdf">AllPaths-LG_Manual.pdf</a></p><div class="pdf" target="/Bioinformatics-Software/2990336266/AllPaths-LG_Manual.pdf" height></div><a id="more"></a><h6 id="nbsp-安装条件检查"><a href="#nbsp-安装条件检查" class="headerlink" title="&nbsp;安装条件检查"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装条件检查</h6><ul><li><span class="exturl" data-url="aHR0cDovL2djYy5nbnUub3Jn" title="http://gcc.gnu.org">The g++ compiler from GCC, version 4.7.0 or higher.<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL2dtcGxpYi5vcmc=" title="http://gmplib.org">The GMP library compiled with the C++ interface. Your GCC installation may already include GMP.<i class="fa fa-external-link"></i></span></li><li>The Picard set of Java‐based command‐line utilities for SAM file manipulation available at <span class="exturl" data-url="aHR0cDovL3BpY2FyZC5zb3VyY2Vmb3JnZS5uZXQ=" title="http://picard.sourceforge.net">http://picard.sourceforge.net<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5ncmFwaHZpei5vcmc=" title="http://www.graphviz.org">The graph command dot from the graphviz package.<i class="fa fa-external-link"></i></span></li></ul><h6 id="nbsp-安装"><a href="#nbsp-安装" class="headerlink" title="&nbsp;安装"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/graphviz-2.40.1/bin:<span class="variable">$PATH</span>"</span> </span><br><span class="line">./configure --prefix=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/allpathslg-52488"</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bioinformatics Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>bamtools-installation</title>
      <link href="/Bioinformatics-Software/316235107.html"/>
      <url>/Bioinformatics-Software/316235107.html</url>
      
        <content type="html"><![CDATA[<h6 id="nbsp-官方文档"><a href="#nbsp-官方文档" class="headerlink" title="&nbsp;官方文档"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>官方文档</h6><p><i class="fa fa-link fa-1x">&nbsp;</i><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Blem1hc3RlcjMxL2JhbXRvb2xzL3dpa2kv" title="https://github.com/pezmaster31/bamtools/wiki/">https://github.com/pezmaster31/bamtools/wiki/<i class="fa fa-external-link"></i></span></p><h6 id="nbsp-安装jsoncpp"><a href="#nbsp-安装jsoncpp" class="headerlink" title="&nbsp;安装jsoncpp"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装jsoncpp</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/open-source-parsers/jsoncpp/archive/1.8.4.tar.gz</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/cmake-3.10.3/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line">mv 1.8.4.tar.gz jsoncpp-1.8.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> jsoncpp-1.8.4/</span><br><span class="line">mkdir -p build/debug</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=debug -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/jsoncpp-1.8.4/"</span> -G <span class="string">"Unix Makefiles"</span> ../..</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="nbsp-安装bantools"><a href="#nbsp-安装bantools" class="headerlink" title="&nbsp;安装bantools"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装bantools</h6><div class="note warning">            <p><i class="fa fa-info-circle fa-lg" style="color:yellowgreen">&nbsp;</i><strong>安装文档中建议使用jsoncpp,若不指定jsoncpp路径，会出现如下错误</strong></p>          </div><p><img src="/images/pasted-1.png" alt><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf bamtools.tgz </span><br><span class="line"><span class="built_in">cd</span> bamtools/</span><br><span class="line"><span class="built_in">export</span> LIBRARY_PATH=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/jsoncpp-1.8.4/lib64/:<span class="variable">$LIBRARY_PATH</span>"</span></span><br><span class="line"><span class="built_in">export</span> CPLUS_INCLUDE_PATH=/YZGROUP4/STORAGE/genewiz/public/app/jsoncpp-1.8.4/include:<span class="variable">$CPLUS_INCLUDE_PATH</span></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/jsoncpp-1.8.4/lib64/pkgconfig:<span class="variable">$PKG_CONFIG_PATH</span>"</span></span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/bamtools-2.5.1"</span> ..</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-2.png" alt></p><h6 id="nbsp-注意事项"><a href="#nbsp-注意事项" class="headerlink" title="&nbsp;注意事项"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i><font color="red">注意事项</font></h6><blockquote><p>使用bamtools需要配置LD_LIBRARY_PATH</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">"/YZGROUP4/STORAGE/genewiz/public/app/jsoncpp-1.8.4/lib64/:<span class="variable">$LD_LIBRARY_PATH</span>"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Bioinformatics Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wan-ip-api</title>
      <link href="/Other/20529414.html"/>
      <url>/Other/20529414.html</url>
      
        <content type="html"><![CDATA[<ul><li><span class="exturl" data-url="aHR0cDovL2lwLjM2MC5jbi9JUFNoYXJlL2luZm8=" title="http://ip.360.cn/IPShare/info">http://ip.360.cn/IPShare/info<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL215aXAuY29tLnR3" title="http://myip.com.tw">http://myip.com.tw<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL2lwLnhpYW5odWEuY29tLmNu" title="http://ip.xianhua.com.cn">http://ip.xianhua.com.cn<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5pcC5jbg==" title="http://www.ip.cn">http://www.ip.cn<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy4xMjNjaGEuY29tL2lw" title="http://www.123cha.com/ip">http://www.123cha.com/ip<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5pcDM4LmNvbQ==" title="http://www.ip38.com">http://www.ip38.com<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL2lwLmNoaW5hei5jb20=" title="http://ip.chinaz.com">http://ip.chinaz.com<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy50YW9iYW8uY29tL2hlbHAvZ2V0aXAucGhw" title="http://www.taobao.com/help/getip.php">http://www.taobao.com/help/getip.php<i class="fa fa-external-link"></i></span></li></ul>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>django-ldap-windows</title>
      <link href="/Django/2821565288.html"/>
      <url>/Django/2821565288.html</url>
      
        <content type="html"><![CDATA[<h6 id="nbsp-安装依赖包"><a href="#nbsp-安装依赖包" class="headerlink" title="&nbsp;安装依赖包"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>安装依赖包</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install django==<span class="number">1.11</span><span class="number">.2</span></span><br><span class="line">pip install django-auth-ldap==<span class="number">1.3</span><span class="number">.0</span></span><br><span class="line">pip install python-ldap==<span class="number">2.5</span><span class="number">.2</span></span><br></pre></td></tr></table></figure><a id="more"></a>&gt;<br><br>###### <i class="fa fa-caret-right fa-lg">&nbsp;</i>配置ldap认证<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ldap</span><br><span class="line"><span class="keyword">from</span> django_auth_ldap.config <span class="keyword">import</span> LDAPSearch, GroupOfNamesType</span><br><span class="line"> </span><br><span class="line"><span class="comment">#配置ldap调试日志</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger = logging.getLogger(<span class="string">'django_auth_ldap'</span>)</span><br><span class="line">logger.addHandler(logging.StreamHandler())</span><br><span class="line">logger.setLevel(logging.DEBUG)</span><br><span class="line"> </span><br><span class="line">AUTH_LDAP_SERVER_URI = <span class="string">"ldap://xx.xx.xx.xx"</span></span><br><span class="line">AUTH_LDAP_BIND_DN = <span class="string">"CN=Search User,OU=Special Accounts,OU=Users,OU=NJ115,DC=local,DC=genewiz,DC=com"</span></span><br><span class="line">AUTH_LDAP_BIND_PASSWORD = <span class="string">"xxxxxxxx"</span></span><br><span class="line">AUTH_LDAP_USER_SEARCH = LDAPSearch(<span class="string">"ou=Accounts,ou=users,ou=SZ,dc=local,dc=genewiz,dc=com"</span>,</span><br><span class="line">    ldap.SCOPE_SUBTREE, <span class="string">"(sAMAccountName=%(user)s)"</span>)</span><br><span class="line"> </span><br><span class="line">AUTH_LDAP_GROUP_SEARCH = LDAPSearch(<span class="string">"CN=CN Infrastructure Team,OU=Distribution Lists,OU=Users,OU=SZ,DC=local,DC=genewiz,DC=com"</span>,</span><br><span class="line">    ldap.SCOPE_SUBTREE, <span class="string">"(objectClass=group)"</span></span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr=<span class="string">"cn"</span>)</span><br><span class="line"> </span><br><span class="line">AUTH_LDAP_USER_FLAGS_BY_GROUP = &#123;</span><br><span class="line">    <span class="comment">#"is_active": "cn=active,ou=django,ou=groups,dc=example,dc=com",</span></span><br><span class="line">    <span class="string">"is_staff"</span>: <span class="string">"CN=CN Infrastructure Team,OU=Distribution Lists,OU=Users,OU=SZ,DC=local,DC=genewiz,DC=com"</span>,</span><br><span class="line">    <span class="string">"is_superuser"</span>: <span class="string">"CN=CN Infrastructure Team,OU=Distribution Lists,OU=Users,OU=SZ,DC=local,DC=genewiz,DC=com"</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">AUTH_LDAP_USER_ATTR_MAP = &#123;</span><br><span class="line">    <span class="string">"first_name"</span>: <span class="string">"givenName"</span>,</span><br><span class="line">    <span class="string">"last_name"</span>: <span class="string">"sn"</span>,</span><br><span class="line">    <span class="string">"email"</span>: <span class="string">"mail"</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">AUTH_LDAP_ALWAYS_UPDATE_USER = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">'django_auth_ldap.backend.LDAPBackend'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth.backends.ModelBackend'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h6 id="nbsp-登录测试"><a href="#nbsp-登录测试" class="headerlink" title="&nbsp;登录测试"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>登录测试</h6><p><img src="/images/pasted-0.png" alt></p><h6 id="nbsp-参考资料"><a href="#nbsp-参考资料" class="headerlink" title="&nbsp;参考资料"></a><i class="fa fa-caret-right fa-lg">&nbsp;</i>参考资料</h6><p><i class="fa fa-link fa-1x">&nbsp;</i><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZHJlYW1lci1maXNoL3AvNTQ3NDI4OS5odG1s" title="https://www.cnblogs.com/dreamer-fish/p/5474289.html">https://www.cnblogs.com/dreamer-fish/p/5474289.html<i class="fa fa-external-link"></i></span><br><i class="fa fa-link fa-1x">&nbsp;</i><span class="exturl" data-url="aHR0cHM6Ly9kamFuZ28tYXV0aC1sZGFwLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9leGFtcGxlLmh0bWw=" title="https://django-auth-ldap.readthedocs.io/en/latest/example.html">https://django-auth-ldap.readthedocs.io/en/latest/example.html<i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
