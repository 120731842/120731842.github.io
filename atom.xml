<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Happy Every Day</title>
  
  <subtitle>No Pain No Gain</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.laohulab.com/"/>
  <updated>2019-05-05T00:53:58.821Z</updated>
  <id>http://blog.laohulab.com/</id>
  
  <author>
    <name>Jianhu Yong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>megacli在线磁盘raid</title>
    <link href="http://blog.laohulab.com/uncategorized/2604242901.html"/>
    <id>http://blog.laohulab.com/uncategorized/2604242901.html</id>
    <published>2019-05-05T00:52:59.000Z</published>
    <updated>2019-05-05T00:53:58.821Z</updated>
    
    <content type="html"><![CDATA[<p>测试机：idrac：10.10.10.199 calvin@Dell 测试机：10.10.10.208</p><h5 id="查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）"><a href="#查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）" class="headerlink" title="查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）"></a>查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -PDList -aALL</span><br><span class="line"> </span><br><span class="line">查看重要数据</span><br><span class="line">Adapter <span class="comment">#0</span></span><br><span class="line">Enclosure Device ID: 32</span><br><span class="line">Slot Number: 0</span><br><span class="line">PD Type: SAS</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="查看适配器信息"><a href="#查看适配器信息" class="headerlink" title="查看适配器信息"></a>查看适配器信息</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64  -AdpAllInfo -aAll</span><br></pre></td></tr></table></figure><h5 id="查看Raid初始化情况"><a href="#查看Raid初始化情况" class="headerlink" title="查看Raid初始化情况"></a>查看Raid初始化情况</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -LDBI -ShowProg -LALL -aALL</span><br></pre></td></tr></table></figure><h5 id="扫描外来盘的个数"><a href="#扫描外来盘的个数" class="headerlink" title="扫描外来盘的个数"></a>扫描外来盘的个数</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -cfgforeign -scan -a0</span><br></pre></td></tr></table></figure><h5 id="清除外来盘配置"><a href="#清除外来盘配置" class="headerlink" title="清除外来盘配置"></a>清除外来盘配置</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -cfgforeign -clear -a0</span><br></pre></td></tr></table></figure><h5 id="查看JBOD是否启用"><a href="#查看JBOD是否启用" class="headerlink" title="查看JBOD是否启用"></a>查看JBOD是否启用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -AdpGetProp -enablejbod -aALL</span><br><span class="line">Adapter 0: JBOD: Enabled</span><br></pre></td></tr></table></figure><h5 id="禁用JBOD模式"><a href="#禁用JBOD模式" class="headerlink" title="禁用JBOD模式"></a>禁用JBOD模式</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -AdpSetProp -EnableJBOD -0 -a0 </span><br><span class="line">Adapter 0: Set JBOD to Disable success.</span><br><span class="line">val - 0=Disable JBOD mode.</span><br><span class="line">1= Enable JBOD mode</span><br></pre></td></tr></table></figure><h5 id="创建Raid"><a href="#创建Raid" class="headerlink" title="创建Raid"></a>创建Raid</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -CfgLdAdd -r1 [32:2,32:3] WB Direct -a0</span><br><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -CfgLdAdd -r5 [32:2,32:3,32:4] WB Direct -a0</span><br><span class="line"> </span><br><span class="line">-r1 raid1</span><br><span class="line"> </span><br><span class="line">[32:2] 磁盘ID</span><br><span class="line">Enclosure Device ID: 32</span><br><span class="line">Slot Number: 2</span><br><span class="line"> </span><br><span class="line">[32:3] 磁盘ID</span><br><span class="line">Enclosure Device ID: 32</span><br><span class="line">Slot Number: 3</span><br><span class="line">WB ：磁盘缓存策略 write back</span><br><span class="line">-a0 :阵列卡序号</span><br><span class="line"> </span><br><span class="line">-a0:即adpter0，RAID卡0，如果有更多RAID卡，请确认当前要操作的适配器，可用下面命令查看</span><br><span class="line">/opt/MegaRAID/MegaCli/MegaCli64  -AdpAllInfo -aAll</span><br></pre></td></tr></table></figure><h5 id="查看阵列后台初始化进度"><a href="#查看阵列后台初始化进度" class="headerlink" title="查看阵列后台初始化进度"></a>查看阵列后台初始化进度</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -LDBI -ShowProg -LALL -aALL</span><br></pre></td></tr></table></figure><h5 id="快速初始化和完全初始化"><a href="#快速初始化和完全初始化" class="headerlink" title="快速初始化和完全初始化"></a>快速初始化和完全初始化</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 快速初始化</span></span><br><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -LDInit -start –L0 -a0 </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 完全初始化</span></span><br><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -LDInit -start -full –L0 -a0 </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示初始化的进度</span></span><br><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -LDInit -progdsply -L0 -a0 </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 结束完全初始化</span></span><br><span class="line">/opt/MegaRAID/MegaCli/MegaCli64 -LDInit -abort -L0 -a0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试机：idrac：10.10.10.199 calvin@Dell 测试机：10.10.10.208&lt;/p&gt;
&lt;h5 id=&quot;查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）&quot;&gt;&lt;a href=&quot;#查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）&quot; class=&quot;headerlink&quot; title=&quot;查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）&quot;&gt;&lt;/a&gt;查看下物理磁盘信息（可以查看到物理磁盘及raid适配器的信息，及磁盘容量大小）&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/opt/MegaRAID/MegaCli/MegaCli64 -PDList -aALL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看重要数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Adapter &lt;span class=&quot;comment&quot;&gt;#0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enclosure Device ID: 32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Slot Number: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PD Type: SAS&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>php编译安装</title>
    <link href="http://blog.laohulab.com/php/1814833900.html"/>
    <id>http://blog.laohulab.com/php/1814833900.html</id>
    <published>2019-05-04T08:03:00.000Z</published>
    <updated>2019-05-05T00:54:16.449Z</updated>
    
    <content type="html"><![CDATA[<h5 id="源码编译安装"><a href="#源码编译安装" class="headerlink" title="源码编译安装"></a>源码编译安装</h5><h5 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h5><ul><li>官网：<span class="exturl" data-url="aHR0cDovL3BocC5uZXQv" title="http://php.net/">http://php.net/<i class="fa fa-external-link"></i></span></li><li>官网下载：<span class="exturl" data-url="aHR0cDovL3BocC5uZXQvZG93bmxvYWRzLnBocA==" title="http://php.net/downloads.php">http://php.net/downloads.php<i class="fa fa-external-link"></i></span></li></ul><h5 id="了解与准备"><a href="#了解与准备" class="headerlink" title="了解与准备"></a>了解与准备</h5><h6 id="Apache-httpd-nginx-与-php-连接方式："><a href="#Apache-httpd-nginx-与-php-连接方式：" class="headerlink" title="Apache(httpd) nginx 与 php 连接方式："></a>Apache(httpd) nginx 与 php 连接方式：</h6><h6 id="httpd与php："><a href="#httpd与php：" class="headerlink" title="httpd与php："></a>httpd与php：</h6><ul><li>php 作为 httpd 模块</li><li>fastcgi(php-fpm)</li><li>cgi(此处不讲解)</li></ul><h5 id="nginx与php："><a href="#nginx与php：" class="headerlink" title="nginx与php："></a>nginx与php：</h5><ul><li>fastcgi(php-fpm)</li></ul><a id="more"></a><h6 id="PHP安装与依赖："><a href="#PHP安装与依赖：" class="headerlink" title="PHP安装与依赖："></a>PHP安装与依赖：</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ libxml2 libxml2-devel bzip2 bzip2-devel libmcrypt libmcrypt-devel openssl openssl-devel libcurl-devel libjpeg-devel libpng-devel freetype-devel readline readline-devel libxslt-devel perl perl-devel psmisc.x86_64 recode recode-devel libtidy libtidy-devel</span><br></pre></td></tr></table></figure><ul><li>上面的依赖基本解决所需要的依赖。  </li><li>编译安装完成后可以增减所支持的php模块，此处所编译的模块已经非常完备。  </li><li>需要编译单个模块，查看php模块编译方式：php模块编译  </li><li>下面编译安装的配置选项：  <ul><li>–prefix=/usr/local/php7    主程序文件路径  </li><li>–sysconfdir=/etc/php7      配置文件路径  </li><li>–with-config-file-path=/etc/php7       php.ini 文件路径  </li><li>–with-apxs2=/usr/local/httpd/bin/apxs  以 httpd 模块编译时需要指定 httpd 的 apxs 文件路径。  </li><li>其他的配置可以按自己需求指定，这几个选项也可以使用默认配置。  </li></ul></li><li>php7移除了 mysql 扩展，php7仅能是用 mysqli 和 pdo_mysql。php5可以使用。  php5编译时加入选项：–with-mysql 。详情查看下面的 PHP与MariaDB（mysql）连接  </li><li>此处以 CentOs7 编译 php7 为示例，配合讲解php5安装的要点。  </li><li>php.ini 文件是在包目录下的 php.ini-development（开发）， php.ini-production（生产）<br> 编译完成后选择自己需要的 php.ini 文件 复制到 –with-config-file-path 指定的目录。<br> 如果编译时为指定此选项，编译完成配置并启动nginx和php查看 phpinfo() 函数所指定的 php.ini 文件路径：Configuration File (php.ini) Path<br>默认为php目录下的 lib 目录。  </li><li>PHP安装与依赖中 psmisc.x86_64 是 killall 命令的包名，以便最小化安装时终止进程。</li></ul><h5 id="php编译与配置"><a href="#php编译与配置" class="headerlink" title="php编译与配置"></a>php编译与配置</h5><h6 id="httpd-模块"><a href="#httpd-模块" class="headerlink" title="httpd 模块"></a>httpd 模块</h6><div class="note danger">            <h6 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h6><p>需要事先存在httpd ，编译指定 apxs 文件位置。此处以–with-apxs2=/usr/local/httpd/bin/apxs 作为演示。  </p>          </div><div class="tabs" id="php"><ul class="nav-tabs"><li class="tab active"><a href="#php-1">php5.6</a></li><li class="tab"><a href="#php-2">php7</a></li></ul><div class="tab-content"><div class="tab-pane active" id="php-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure –prefix=/usr/<span class="built_in">local</span>/php5 –sysconfdir=/etc/php5 –with-config-file-path=/etc/php5 –with-apxs2=/usr/<span class="built_in">local</span>/httpd/bin/apxs –with-mysql=mysqlnd –with-mysqli=mysqlnd –with-pdo-mysql=mysqlnd –with-mhash –with-openssl –with-zlib –with-bz2 –with-curl –with-libxml-dir –with-gd –with-jpeg-dir –with-png-dir –with-zlib –<span class="built_in">enable</span>-mbstring –with-mcrypt –<span class="built_in">enable</span>-sockets –with-iconv-dir –with-xsl –<span class="built_in">enable</span>-zip –with-pcre-dir –with-pear –<span class="built_in">enable</span>-session  –<span class="built_in">enable</span>-gd-native-ttf –<span class="built_in">enable</span>-xml –with-freetype-dir –<span class="built_in">enable</span>-gd-jis-conv –<span class="built_in">enable</span>-inline-optimization –<span class="built_in">enable</span>-shared –<span class="built_in">enable</span>-bcmath –<span class="built_in">enable</span>-sysvmsg –<span class="built_in">enable</span>-sysvsem –<span class="built_in">enable</span>-sysvshm –<span class="built_in">enable</span>-mbregex –<span class="built_in">enable</span>-pcntl –with-xmlrpc –with-gettext –<span class="built_in">enable</span>-exif –with-readline –with-recode –with-tidy </span><br></pre></td></tr></table></figure><blockquote><p><code>仅增加了选项--with-mysql=mysqlnd</code></p></blockquote></div><div class="tab-pane" id="php-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure –prefix=/usr/<span class="built_in">local</span>/php7 –sysconfdir=/etc/php7 –with-config-file-path=/etc/php7 –with-apxs2=/usr/<span class="built_in">local</span>/httpd/bin/apxs –with-mysqli=mysqlnd –with-pdo-mysql=mysqlnd –with-mhash –with-openssl –with-zlib –with-bz2 –with-curl –with-libxml-dir –with-gd –with-jpeg-dir –with-png-dir –with-zlib –<span class="built_in">enable</span>-mbstring –with-mcrypt –<span class="built_in">enable</span>-sockets –with-iconv-dir –with-xsl –<span class="built_in">enable</span>-zip –with-pcre-dir –with-pear –<span class="built_in">enable</span>-session  –<span class="built_in">enable</span>-gd-native-ttf –<span class="built_in">enable</span>-xml –with-freetype-dir –<span class="built_in">enable</span>-gd-jis-conv –<span class="built_in">enable</span>-inline-optimization –<span class="built_in">enable</span>-shared –<span class="built_in">enable</span>-bcmath –<span class="built_in">enable</span>-sysvmsg –<span class="built_in">enable</span>-sysvsem –<span class="built_in">enable</span>-sysvshm –<span class="built_in">enable</span>-mbregex –<span class="built_in">enable</span>-pcntl –with-xmlrpc –with-gettext –<span class="built_in">enable</span>-exif –with-readline –with-recode –with-tidy  </span><br></pre></td></tr></table></figure></div></div></div><h5 id="fastcgi-php-fpm-模式"><a href="#fastcgi-php-fpm-模式" class="headerlink" title="fastcgi php-fpm 模式"></a>fastcgi php-fpm 模式</h5><div class="tabs" id="php-fpm"><ul class="nav-tabs"><li class="tab active"><a href="#php-fpm-1">php5.6</a></li><li class="tab"><a href="#php-fpm-2">php7</a></li></ul><div class="tab-content"><div class="tab-pane active" id="php-fpm-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">./configure –prefix=/usr/local/php5 –sysconfdir=/etc/php5 –<span class="keyword">with</span>-config-file-path=/etc/php5 –enable-fpm –<span class="keyword">with</span>-mysql=mysqlnd –<span class="keyword">with</span>-mysqli=mysqlnd –<span class="keyword">with</span>-pdo-mysql=mysqlnd –<span class="keyword">with</span>-mhash –<span class="keyword">with</span>-openssl –<span class="keyword">with</span>-zlib –<span class="keyword">with</span>-bz2 –<span class="keyword">with</span>-curl –<span class="keyword">with</span>-libxml-dir –<span class="keyword">with</span>-gd –<span class="keyword">with</span>-jpeg-dir –<span class="keyword">with</span>-png-dir –<span class="keyword">with</span>-zlib –enable-mbstring –<span class="keyword">with</span>-mcrypt –enable-sockets –<span class="keyword">with</span>-iconv-dir –<span class="keyword">with</span>-xsl –enable-zip –<span class="keyword">with</span>-pcre-dir –<span class="keyword">with</span>-pear –enable-session  –enable-gd-native-ttf –enable-xml –<span class="keyword">with</span>-freetype-dir –enable-gd-jis-conv –enable-inline-optimization –enable-shared –enable-bcmath –enable-sysvmsg –enable-sysvsem –enable-sysvshm –enable-mbregex –enable-pcntl –<span class="keyword">with</span>-xmlrpc –<span class="keyword">with</span>-gettext –enable-exif –<span class="keyword">with</span>-readline –<span class="keyword">with</span>-recode –<span class="keyword">with</span>-tidy  </span><br></pre></td></tr></table></figure><blockquote><p><code>仅增加了选项 --with-mysql=mysqlnd</code></p></blockquote></div><div class="tab-pane" id="php-fpm-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure –prefix=/usr/<span class="built_in">local</span>/php7 –sysconfdir=/etc/php7 –with-config-file-path=/etc/php7 –<span class="built_in">enable</span>-fpm –with-mysqli=mysqlnd –with-pdo-mysql=mysqlnd –with-mhash –with-openssl –with-zlib –with-bz2 –with-curl –with-libxml-dir –with-gd –with-jpeg-dir –with-png-dir –with-zlib –<span class="built_in">enable</span>-mbstring –with-mcrypt –<span class="built_in">enable</span>-sockets –with-iconv-dir –with-xsl –<span class="built_in">enable</span>-zip –with-pcre-dir –with-pear –<span class="built_in">enable</span>-session  –<span class="built_in">enable</span>-gd-native-ttf –<span class="built_in">enable</span>-xml –with-freetype-dir –<span class="built_in">enable</span>-gd-jis-conv –<span class="built_in">enable</span>-inline-optimization –<span class="built_in">enable</span>-shared –<span class="built_in">enable</span>-bcmath –<span class="built_in">enable</span>-sysvmsg –<span class="built_in">enable</span>-sysvsem –<span class="built_in">enable</span>-sysvshm –<span class="built_in">enable</span>-mbregex –<span class="built_in">enable</span>-pcntl –with-xmlrpc –with-gettext –<span class="built_in">enable</span>-exif –with-readline –with-recode –with-tidy </span><br></pre></td></tr></table></figure></div></div></div><h5 id="整合httpd和fastcgi-php-fpm模式"><a href="#整合httpd和fastcgi-php-fpm模式" class="headerlink" title="整合httpd和fastcgi php-fpm模式"></a>整合httpd和fastcgi php-fpm模式</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--with-apxs2(需要apxs程序)</span><br><span class="line">yum -y install httpd-devel</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/opt/laohulab/php5.6.31 --sysconfdir=/opt/laohulab/php5.6.31/etc  --with-config-file-path=/opt/laohulab/php5.6.31/etc --with-config-file-scan-dir=/opt/laohulab/php5.6.31/etc.d --with-apxs2 --<span class="built_in">enable</span>-fpm --with-fpm-user=www --with-fpm-group=www --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mhash --with-openssl --with-zlib --with-bz2 --with-curl --with-libxml-dir --with-gd --with-jpeg-dir --with-png-dir --with-zlib --<span class="built_in">enable</span>-mbstring --with-mcrypt --<span class="built_in">enable</span>-sockets --with-iconv-dir --with-xsl --<span class="built_in">enable</span>-zip --with-pcre-dir --with-pear --<span class="built_in">enable</span>-session  --<span class="built_in">enable</span>-gd-native-ttf --<span class="built_in">enable</span>-xml --with-freetype-dir --<span class="built_in">enable</span>-gd-jis-conv --<span class="built_in">enable</span>-inline-optimization --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-bcmath --<span class="built_in">enable</span>-sysvmsg --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-sysvshm --<span class="built_in">enable</span>-mbregex --<span class="built_in">enable</span>-pcntl --with-xmlrpc --with-gettext --<span class="built_in">enable</span>-exif --with-readline --with-recode --with-tidy</span><br></pre></td></tr></table></figure><h5 id="php-ini-配置文件（在源码包目录下）"><a href="#php-ini-配置文件（在源码包目录下）" class="headerlink" title="php.ini 配置文件（在源码包目录下）"></a>php.ini 配置文件（在源码包目录下）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@nginx-10-20 php-5.6.31]<span class="comment"># pwd</span></span><br><span class="line">/root/php/php-5.6.31</span><br><span class="line">[root@nginx-10-20 php-5.6.31]<span class="comment"># cp php.ini-production /opt/laohulab/php5.6.31/etc/php.ini</span></span><br></pre></td></tr></table></figure><h5 id="php-作为-httpd-模块"><a href="#php-作为-httpd-模块" class="headerlink" title="php 作为 httpd 模块"></a>php 作为 httpd 模块</h5><p>不需要修改 php 配置</p><h5 id="fastcgi-php-fpm"><a href="#fastcgi-php-fpm" class="headerlink" title="fastcgi php-fpm"></a>fastcgi php-fpm</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /etc/php7/php-fpm.conf.default /etc/php7/php-fpm.conf  </span><br><span class="line">cp /etc/php7/php-fpm.d/www.conf.default /etc/php7/php-fpm.d/www.conf  </span><br><span class="line"><span class="comment"># 默认即可是本机 127.0.0.1 不必修改。  </span></span><br><span class="line">vim /etc/php7/php-fpm.d/www.conf  </span><br><span class="line"><span class="comment"># 监听地址  </span></span><br><span class="line">listen = 127.0.0.1:9000  </span><br><span class="line"><span class="comment"># 允许的客户端  </span></span><br><span class="line">listen.allowed_clients = 127.0.0.1  </span><br><span class="line">备注：php5 需要复制 php-fpm.conf.default 为 php-fpm.conf 即可。查看 php-fpm.conf 监听地址和允许的客户端。</span><br></pre></td></tr></table></figure><h5 id="启动与停止"><a href="#启动与停止" class="headerlink" title="启动与停止"></a>启动与停止</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">httpd模块：  </span><br><span class="line">重新加载 httpd 。  </span><br><span class="line"></span><br><span class="line">fastcgi：  </span><br><span class="line">vim /etc/php7/php-fpm.conf  </span><br><span class="line">打开注释：（不打开注释仅能使用 killall php-fpm 关闭 php）  </span><br><span class="line">pid = run/php-fpm.pid  </span><br><span class="line"></span><br><span class="line">启动：  </span><br><span class="line">/usr/<span class="built_in">local</span>/php7/sbin/php-fpm </span><br><span class="line"> </span><br><span class="line">立刻终止  </span><br><span class="line"><span class="built_in">kill</span> -INT `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid`  </span><br><span class="line"><span class="built_in">kill</span> -TERM `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid`  </span><br><span class="line">killall php-fpm  </span><br><span class="line"></span><br><span class="line">平滑终止  </span><br><span class="line"><span class="built_in">kill</span> -QUIT `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid` </span><br><span class="line"> </span><br><span class="line">平滑重启  </span><br><span class="line"><span class="built_in">kill</span> -USR2 `cat /usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid`</span><br></pre></td></tr></table></figure><h5 id="加入环境变量"><a href="#加入环境变量" class="headerlink" title="加入环境变量"></a>加入环境变量</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">PHP</span>=/opt/laohulab/php</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$PHP/bin:$PHP/sbin</span><br></pre></td></tr></table></figure><h5 id="CentOS-系统服务（-etc-php7-php-fpm-conf-文件-pid-run-php-fpm-pid-注释需要打开：2-6-）"><a href="#CentOS-系统服务（-etc-php7-php-fpm-conf-文件-pid-run-php-fpm-pid-注释需要打开：2-6-）" class="headerlink" title="CentOS 系统服务（/etc/php7/php-fpm.conf 文件 pid = run/php-fpm.pid 注释需要打开：2.6 ）"></a>CentOS 系统服务（/etc/php7/php-fpm.conf 文件 pid = run/php-fpm.pid 注释需要打开：2.6 ）</h5><div class="tabs" id="services"><ul class="nav-tabs"><li class="tab active"><a href="#services-1">centos6</a></li><li class="tab"><a href="#services-2">centos7</a></li></ul><div class="tab-content"><div class="tab-pane active" id="services-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">vi /etc/rc.d/init.d/php-fpm  </span><br><span class="line">chmod +x /etc/rc.d/init.d/php-fpm  </span><br><span class="line"></span><br><span class="line"><span class="meta">#! /bin/sh  </span></span><br><span class="line"><span class="comment"># chkconfig: - 84 16  </span></span><br><span class="line"><span class="comment"># description:  PHP FastCGI Process Manager  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.  </span></span><br><span class="line">. /etc/init.d/<span class="built_in">functions</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.  </span></span><br><span class="line">. /etc/sysconfig/network  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Additional environment file  </span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/sysconfig/php-fpm ]; <span class="keyword">then</span>  </span><br><span class="line">      . /etc/sysconfig/php-fpm  </span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">“<span class="variable">$NETWORKING</span>“</span> = <span class="string">“no”</span> ]  </span><br><span class="line"><span class="keyword">then</span>  </span><br><span class="line">    <span class="built_in">exit</span> 0  </span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line">RETVAL=0  </span><br><span class="line">prog=<span class="string">“php-fpm”</span>  </span><br><span class="line"><span class="comment"># 可根据版本不同修改 phpfpm pidfile lockfile变量。其他地方不用修改。  </span></span><br><span class="line">phpfpm=<span class="string">“/usr/local/php7/sbin/php-fpm”</span>  </span><br><span class="line">pidfile=<span class="variable">$&#123;PIDFILE-/usr/local/php7/var/run/php-fpm.pid&#125;</span>  </span><br><span class="line">lockfile=<span class="variable">$&#123;LOCKFILE-/usr/local/php7/var/run/php-fpm.lock&#125;</span>  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span> () &#123;  </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">“Starting <span class="variable">$prog</span>: “</span>  </span><br><span class="line">    dir=$(dirname <span class="variable">$&#123;pidfile&#125;</span>)  </span><br><span class="line">    [ -d <span class="variable">$dir</span> ] || mkdir <span class="variable">$dir</span>  </span><br><span class="line">    daemon –pidfile <span class="variable">$&#123;pidfile&#125;</span> <span class="variable">$&#123;phpfpm&#125;</span>  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    <span class="built_in">echo</span>  </span><br><span class="line">    [ <span class="variable">$RETVAL</span> -eq 0 ] &amp;&amp; touch <span class="variable">$&#123;lockfile&#125;</span>  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="title">stop</span></span> () &#123;  </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">“Stopping <span class="variable">$prog</span>: “</span>  </span><br><span class="line">    killproc -p <span class="variable">$&#123;pidfile&#125;</span> php-fpm  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    <span class="built_in">echo</span>  </span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> -eq 0 ] ; <span class="keyword">then</span>  </span><br><span class="line">        rm -f <span class="variable">$&#123;lockfile&#125;</span> <span class="variable">$&#123;pidfile&#125;</span>  </span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="title">restart</span></span> () &#123;  </span><br><span class="line">        stop  </span><br><span class="line">        start  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="title">reload</span></span> () &#123;  </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">“Reloading <span class="variable">$prog</span>: “</span>  </span><br><span class="line">    <span class="keyword">if</span> ! <span class="variable">$&#123;phpfpm&#125;</span> –<span class="built_in">test</span> ; <span class="keyword">then</span>  </span><br><span class="line">            RETVAL=6  </span><br><span class="line">            <span class="built_in">echo</span> $<span class="string">“not reloading due to configuration syntax error”</span>  </span><br><span class="line">            failure $<span class="string">“not reloading <span class="variable">$prog</span> due to configuration syntax error”</span>  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        killproc -p <span class="variable">$&#123;pidfile&#125;</span> php-fpm -USR2  </span><br><span class="line">        RETVAL=$?  </span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line">    <span class="built_in">echo</span>  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment"># See how we were called.  </span></span><br><span class="line"><span class="keyword">case</span> <span class="string">“<span class="variable">$1</span>“</span> <span class="keyword">in</span>  </span><br><span class="line">  start)  </span><br><span class="line">    start  </span><br><span class="line">    ;;  </span><br><span class="line">  stop)  </span><br><span class="line">    stop  </span><br><span class="line">    ;;  </span><br><span class="line">  status)  </span><br><span class="line">    status -p <span class="variable">$&#123;pidfile&#125;</span> php-fpm  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    ;;  </span><br><span class="line">  restart)  </span><br><span class="line">    restart  </span><br><span class="line">    ;;  </span><br><span class="line">  reload|force-reload)  </span><br><span class="line">    reload  </span><br><span class="line">    ;;  </span><br><span class="line">  configtest)  </span><br><span class="line">    <span class="variable">$&#123;phpfpm&#125;</span> –<span class="built_in">test</span>  </span><br><span class="line">    RETVAL=$?  </span><br><span class="line">    ;;  </span><br><span class="line">  condrestart|try-restart)  </span><br><span class="line">    [ -f <span class="variable">$&#123;lockfile&#125;</span> ] &amp;&amp; restart || :  </span><br><span class="line">    ;;  </span><br><span class="line">  *)  </span><br><span class="line">    <span class="built_in">echo</span> $<span class="string">“Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|reload|force-reload|condrestart|try-restart|configtest&#125;”</span>  </span><br><span class="line">    RETVAL=2  </span><br><span class="line">        ;;  </span><br><span class="line"><span class="keyword">esac</span>  </span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span>  </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service php-fpm &#123;start|stop|status|restart|reload|force-reload|condrestart|try-restart|configtest&#125;  </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="services-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">cp -p  sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">chmod 755 /etc/init.d/php-fpm</span><br><span class="line"></span><br><span class="line">vim /usr/lib/systemd/system/php-fpm.service    </span><br><span class="line">[Unit]  </span><br><span class="line">Description=php-fpm  </span><br><span class="line">After=syslog.target network.target  </span><br><span class="line"></span><br><span class="line">[Service]  </span><br><span class="line">Type=forking  </span><br><span class="line">PIDFile=/usr/<span class="built_in">local</span>/php7/var/run/php-fpm.pid  </span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/php7/sbin/php-fpm  </span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -USR2 <span class="variable">$MAINPID</span>  </span><br><span class="line">PrivateTmp=<span class="literal">true</span>  </span><br><span class="line"></span><br><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target   </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl （start | restart | reload | stop | <span class="built_in">enable</span> | <span class="built_in">disable</span> | status） php-fpm.service</span><br></pre></td></tr></table></figure></div></div></div><h5 id="系统启动服务"><a href="#系统启动服务" class="headerlink" title="系统启动服务"></a>系统启动服务</h5><div class="tabs" id="services-boot"><ul class="nav-tabs"><li class="tab active"><a href="#services-boot-1">CentOS 6</a></li><li class="tab"><a href="#services-boot-2">CentOS 7</a></li></ul><div class="tab-content"><div class="tab-pane active" id="services-boot-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">chkconfig –add php-fpm  </span><br><span class="line">chkconfig –level 345 php-fpm on  </span><br><span class="line">chkconfig php-fpm off  </span><br><span class="line">chkconfig –list php-fpm  </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="services-boot-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  </span><br><span class="line">systemctl <span class="built_in">enable</span> php-fpm.service  </span><br><span class="line">systemctl <span class="built_in">disable</span> php-fpm.service </span><br></pre></td></tr></table></figure></div></div></div><h5 id="加入-man-文档"><a href="#加入-man-文档" class="headerlink" title="加入 man 文档"></a>加入 man 文档</h5><div class="tabs" id="man"><ul class="nav-tabs"><li class="tab active"><a href="#man-1">CentOS 6</a></li><li class="tab"><a href="#man-2">CentOS 7</a></li></ul><div class="tab-content"><div class="tab-pane active" id="man-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/man.config </span><br><span class="line">MANPATH /usr/<span class="built_in">local</span>/php7/php/man  </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="man-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/man_db.conf  </span><br><span class="line">MANPATH /usr/<span class="built_in">local</span>/php7/php/man </span><br></pre></td></tr></table></figure></div></div></div><blockquote><p>然后就可以使用 man 命令查看</p></blockquote><h5 id="httpd-nginx-与-php-连接"><a href="#httpd-nginx-与-php-连接" class="headerlink" title="httpd nginx 与 php 连接"></a>httpd nginx 与 php 连接</h5><h6 id="httpd-模块-php"><a href="#httpd-模块-php" class="headerlink" title="httpd 模块 php"></a>httpd 模块 php</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">要点：  </span><br><span class="line">1：httpd开启模块：  </span><br><span class="line">    LoadModule proxy_module modules/mod_proxy.so  </span><br><span class="line">    LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so  </span><br><span class="line"> </span><br><span class="line">2：php编译指定 httpd apxs 路径（成为 httpd 模块）  </span><br><span class="line">    --with-apxs2=/usr/<span class="built_in">local</span>/httpd24/bin/apxs  </span><br><span class="line"> </span><br><span class="line">连接：  </span><br><span class="line">~]<span class="comment"># vi /etc/httpd/httpd.conf  </span></span><br><span class="line">1：添加：（编译时这个默认已经添加）  </span><br><span class="line">    LoadModule php7_module        modules/libphp7.so  </span><br><span class="line">    <span class="comment">#LoadModule php5_module        modules/libphp5.so  </span></span><br><span class="line">2：添加 index.php：  </span><br><span class="line">    &lt;IfModule dir_module&gt;  </span><br><span class="line">        DirectoryIndex index.php index.html  </span><br><span class="line">    &lt;/IfModule&gt;  </span><br><span class="line">3：文件最后添加：  </span><br><span class="line">    &lt;FilesMatch \.php$&gt;  </span><br><span class="line">        SetHandler application/x-httpd-php  </span><br><span class="line">    &lt;/FilesMatch&gt;  </span><br><span class="line">备注：vhost 也可以应用</span><br></pre></td></tr></table></figure><h5 id="httpd（fastcgi）与-php-fpm"><a href="#httpd（fastcgi）与-php-fpm" class="headerlink" title="httpd（fastcgi）与 php-fpm"></a>httpd（fastcgi）与 php-fpm</h5><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">要点：  </span><br><span class="line"><span class="number">1</span>：httpd开启模块：  </span><br><span class="line">    LoadModule proxy_module modules/mod_proxy.so  </span><br><span class="line">    LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so  </span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>：php编译开启模块：  </span><br><span class="line">    --enable-fpm  </span><br><span class="line"> </span><br><span class="line">连接方式<span class="number">1</span>：  </span><br><span class="line">~]<span class="meta"># vi /etc/httpd/httpd.conf  </span></span><br><span class="line">    最后添加：  </span><br><span class="line">      <span class="meta"># On：正向代理（默认）  Off：反向代理（此处建议使用）  </span></span><br><span class="line">      ProxyRequests Off  </span><br><span class="line">    <span class="params">&lt;FilesMatch \.php$&gt;</span>  </span><br><span class="line">             SetHandler proxy:fcgi:<span class="comment">//127.0.0.1:9000  </span></span><br><span class="line">    <span class="params">&lt;/FilesMatch&gt;</span>  </span><br><span class="line"> </span><br><span class="line">连接方式<span class="number">2</span>：  </span><br><span class="line">~]<span class="meta"># vi /etc/httpd/httpd.conf  </span></span><br><span class="line">    最后添加：  </span><br><span class="line">      <span class="meta"># On：正向代理（默认）  Off：反向代理（此处建议使用）  </span></span><br><span class="line">      ProxyRequests Off  </span><br><span class="line">    <span class="params">&lt;LocationMatch ^(.*\.php)$&gt;</span>   </span><br><span class="line">        ProxyPass fcgi:<span class="comment">//127.0.0.1:9000/var/www/html/  </span></span><br><span class="line">    <span class="params">&lt;/LocationMatch&gt;</span>  </span><br><span class="line"> </span><br><span class="line">连接方式<span class="number">3</span>：类型<span class="number">2</span>的改变  </span><br><span class="line">~]<span class="meta"># vi /etc/httpd/httpd.conf  </span></span><br><span class="line">    最后添加：  </span><br><span class="line">      <span class="meta"># On：正向代理（默认）  Off：反向代理（此处建议使用）  </span></span><br><span class="line">      ProxyRequests Off  </span><br><span class="line">      ProxyPassMatch ^/(.*\.php)$  fcgi:<span class="comment">//127.0.0.1:9000/var/www/html/$1  </span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">连接方式设置完后再添加 index.php：  </span><br><span class="line">    <span class="params">&lt;IfModule dir_module&gt;</span>  </span><br><span class="line">        DirectoryIndex index.php index.html  </span><br><span class="line">    <span class="params">&lt;/IfModule&gt;</span>  </span><br><span class="line"> </span><br><span class="line">备注：连接方式<span class="number">1</span> 更方便在本地使用，<span class="number">2</span>和<span class="number">3</span>一般会使用远程 php 服务器上。</span><br></pre></td></tr></table></figure><h5 id="Nginx与php连接"><a href="#Nginx与php连接" class="headerlink" title="Nginx与php连接"></a>Nginx与php连接</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">要点：  </span><br><span class="line">1：Nginx 默认支持 fastcgi  </span><br><span class="line">2：php编译开启模块：  </span><br><span class="line">    --<span class="built_in">enable</span>-fpm  </span><br><span class="line"> </span><br><span class="line">连接：  </span><br><span class="line">server &#123;  </span><br><span class="line">    listen       80;  </span><br><span class="line">    server_name  localhost;  </span><br><span class="line">    root /var/www/html;  </span><br><span class="line">    index  index.php index.html;  </span><br><span class="line">    .......  </span><br><span class="line">    <span class="comment"># nginx 连接方式  </span></span><br><span class="line">    location ~ \.php$ &#123;  </span><br><span class="line">        <span class="comment"># root /：可以在这里单独设置php的根，$document_root 变量是上面 root 定义的网站根路径。  </span></span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;  </span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;  </span><br><span class="line">        include        fastcgi_params;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PHP与MariaDB-mysql-连接"><a href="#PHP与MariaDB-mysql-连接" class="headerlink" title="PHP与MariaDB(mysql)连接"></a>PHP与MariaDB(mysql)连接</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">4.1：使用 MariaDB 编译（相对于mysql安装的目录）  </span><br><span class="line">--with-mysql=/usr/<span class="built_in">local</span>/mysql  </span><br><span class="line">--with-mysqli=/usr/<span class="built_in">local</span>/mysql/bin/mysql_config  </span><br><span class="line">--with-pdo-mysql=/usr/<span class="built_in">local</span>/mysql  </span><br><span class="line"> </span><br><span class="line">4.2：使用 PHP 的 mysqlnd 编译（推荐使用）  </span><br><span class="line">--with-mysql=mysqlnd  </span><br><span class="line">--with-mysqli=mysqlnd  </span><br><span class="line">--with-pdo-mysql=mysqlnd  </span><br><span class="line"> </span><br><span class="line">4.3：php版本区别要点：  </span><br><span class="line">1：php7移除了 mysql 扩展，php7仅能是用 mysqli 和 pdo_mysql  </span><br><span class="line">2：mysqlnd 要求 php版本 &gt;= 5.3  </span><br><span class="line">4：mysqlnd和php内部机制结合更紧密，是优化过的mysql驱动，建议使用</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.1：添加文件与内容  </span><br><span class="line">vim /var/www/html/index.php  </span><br><span class="line">    &lt;?php  </span><br><span class="line">    phpinfo();  </span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure><h5 id="php多版本安装注意事项"><a href="#php多版本安装注意事项" class="headerlink" title="php多版本安装注意事项"></a>php多版本安装注意事项</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">6.1：httpd与php  </span><br><span class="line">httpd 模块：可以编译多个版本，但同时只能运行一个，另外一个需要注释。  </span><br><span class="line">    LoadModule php7_module        modules/libphp7.so  </span><br><span class="line">    <span class="comment">#LoadModule php5_module        modules/libphp5.so  </span></span><br><span class="line"> </span><br><span class="line">httpd fastcgi：  </span><br><span class="line">    在 vhost 虚拟机中指定不同的监听地址。  </span><br><span class="line">    例如：  </span><br><span class="line">        &lt;VirtualHost *:80&gt;  </span><br><span class="line">        DocumentRoot <span class="string">"/web/a"</span>  </span><br><span class="line">        ServerName www.a.com  </span><br><span class="line">                &lt;FilesMatch \.php$&gt;  </span><br><span class="line">                         SetHandler proxy:fcgi://127.0.0.1:9000  </span><br><span class="line">                &lt;/FilesMatch&gt;  </span><br><span class="line">                <span class="comment"># 或者  </span></span><br><span class="line">                ProxyRequests Off  </span><br><span class="line">               ProxyPassMatch ^/(.*\.php)$  fcgi://127.0.0.1:9000/var/www/html/<span class="variable">$1</span>  </span><br><span class="line">        &lt;/VirtualHost&gt;  </span><br><span class="line"> </span><br><span class="line">6.2：nginx与php  </span><br><span class="line">    指定不同的监听地址  </span><br><span class="line">    location ~ \.php$ &#123;  </span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul><li><span class="exturl" data-url="aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2luc3RhbGwucGhw" title="http://php.net/manual/zh/install.php">http://php.net/manual/zh/install.php<i class="fa fa-external-link"></i></span>(官网安装帮助文档)</li><li><span class="exturl" data-url="aHR0cDovL2Nuemh4Lm5ldC9ibG9nL2FwYWNoZS1odHRwZC1tb2RfcHJveHlfZmNnaS1waHAtZnBtLw==" title="http://cnzhx.net/blog/apache-httpd-mod_proxy_fcgi-php-fpm/">http://cnzhx.net/blog/apache-httpd-mod_proxy_fcgi-php-fpm/<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDg2MTUxNC9hcnRpY2xlL2RldGFpbHMvNTE5MjY1NzU=" title="http://blog.csdn.net/u010861514/article/details/51926575">http://blog.csdn.net/u010861514/article/details/51926575<i class="fa fa-external-link"></i></span></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;源码编译安装&quot;&gt;&lt;a href=&quot;#源码编译安装&quot; class=&quot;headerlink&quot; title=&quot;源码编译安装&quot;&gt;&lt;/a&gt;源码编译安装&lt;/h5&gt;&lt;h5 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;官网：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3BocC5uZXQv&quot; title=&quot;http://php.net/&quot;&gt;http://php.net/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;官网下载：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3BocC5uZXQvZG93bmxvYWRzLnBocA==&quot; title=&quot;http://php.net/downloads.php&quot;&gt;http://php.net/downloads.php&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;了解与准备&quot;&gt;&lt;a href=&quot;#了解与准备&quot; class=&quot;headerlink&quot; title=&quot;了解与准备&quot;&gt;&lt;/a&gt;了解与准备&lt;/h5&gt;&lt;h6 id=&quot;Apache-httpd-nginx-与-php-连接方式：&quot;&gt;&lt;a href=&quot;#Apache-httpd-nginx-与-php-连接方式：&quot; class=&quot;headerlink&quot; title=&quot;Apache(httpd) nginx 与 php 连接方式：&quot;&gt;&lt;/a&gt;Apache(httpd) nginx 与 php 连接方式：&lt;/h6&gt;&lt;h6 id=&quot;httpd与php：&quot;&gt;&lt;a href=&quot;#httpd与php：&quot; class=&quot;headerlink&quot; title=&quot;httpd与php：&quot;&gt;&lt;/a&gt;httpd与php：&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;php 作为 httpd 模块&lt;/li&gt;
&lt;li&gt;fastcgi(php-fpm)&lt;/li&gt;
&lt;li&gt;cgi(此处不讲解)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;nginx与php：&quot;&gt;&lt;a href=&quot;#nginx与php：&quot; class=&quot;headerlink&quot; title=&quot;nginx与php：&quot;&gt;&lt;/a&gt;nginx与php：&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;fastcgi(php-fpm)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="php" scheme="http://blog.laohulab.com/categories/php/"/>
    
    
      <category term="php" scheme="http://blog.laohulab.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>nginx编译安装</title>
    <link href="http://blog.laohulab.com/nginx/347607591.html"/>
    <id>http://blog.laohulab.com/nginx/347607591.html</id>
    <published>2019-05-04T07:57:00.000Z</published>
    <updated>2019-05-04T13:27:57.857Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Nginx编译安装"><a href="#Nginx编译安装" class="headerlink" title="Nginx编译安装"></a>Nginx编译安装</h5><h5 id="下载相关软件包"><a href="#下载相关软件包" class="headerlink" title="下载相关软件包"></a>下载相关软件包</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.10.2.tar.gz</span><br><span class="line">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.39.tar.gz </span><br><span class="line">wget http://zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2l.tar.gz</span><br></pre></td></tr></table></figure><h5 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/opt/laohulab/nginx --user=www --group=www --with-openssl=../openssl-1.0.2l --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.11 --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module</span><br><span class="line"> </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="查看安装版本"><a href="#查看安装版本" class="headerlink" title="查看安装版本"></a>查看安装版本</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@dokuwiki-10-26 ~]<span class="comment"># /opt/laohulab/nginx/sbin/nginx -V</span></span><br><span class="line">nginx version: nginx/1.10.2</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC) </span><br><span class="line">built with OpenSSL 1.0.2l  25 May 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/opt/laohulab/nginx --user=www --group=www --with-openssl=../openssl-1.0.2l --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.11 --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module</span><br></pre></td></tr></table></figure><h5 id="参考案例"><a href="#参考案例" class="headerlink" title="参考案例"></a>参考案例</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx version: nginx/1.10.2</span><br><span class="line">built by gcc 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) </span><br><span class="line">built with OpenSSL 1.0.2j  26 Sep 2016</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/opt/tuniu/nginx --user=www --group=www --with-ld-opt=-Wl,-rpath,/usr/<span class="built_in">local</span>/luajit/lib --with-openssl=../openssl-1.0.2j --with-pcre=../pcre-8.39/ --with-zlib=../zlib-1.2.8/ --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module --add-module=../ngx_devel_kit-0.3.0 --add-module=../lua-nginx-module-0.10.7 --add-module=../ngx_cache_purge-2.3 --add-module=../nginx-http-concat --add-module=../ngx_http_sticky_module --add-module=../nginx-upsync-module</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Nginx编译安装&quot;&gt;&lt;a href=&quot;#Nginx编译安装&quot; class=&quot;headerlink&quot; title=&quot;Nginx编译安装&quot;&gt;&lt;/a&gt;Nginx编译安装&lt;/h5&gt;&lt;h5 id=&quot;下载相关软件包&quot;&gt;&lt;a href=&quot;#下载相关软件包&quot; class=&quot;headerlink&quot; title=&quot;下载相关软件包&quot;&gt;&lt;/a&gt;下载相关软件包&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://nginx.org/download/nginx-1.10.2.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.39.tar.gz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http://zlib.net/zlib-1.2.11.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://www.openssl.org/&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;/openssl-1.0.2l.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;编译安装&quot;&gt;&lt;a href=&quot;#编译安装&quot; class=&quot;headerlink&quot; title=&quot;编译安装&quot;&gt;&lt;/a&gt;编译安装&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./configure --prefix=/opt/laohulab/nginx --user=www --group=www --with-openssl=../openssl-1.0.2l --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.11 --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="nginx" scheme="http://blog.laohulab.com/categories/nginx/"/>
    
    
      <category term="nginx" scheme="http://blog.laohulab.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>mysql5.7编译安装</title>
    <link href="http://blog.laohulab.com/Mysql/1435796682.html"/>
    <id>http://blog.laohulab.com/Mysql/1435796682.html</id>
    <published>2019-05-04T07:35:00.000Z</published>
    <updated>2019-05-04T13:27:54.697Z</updated>
    
    <content type="html"><![CDATA[<h5 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove mariadb</span><br><span class="line">yum -y install gcc gcc-c++ ncurses ncurses-devel cmake </span><br><span class="line">wget http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz</span><br><span class="line">wget http://files.directadmin.com/services/all/mysql/5.7/5.7.20/mysql-5.7.20.tar.gz</span><br><span class="line">useradd -M -s /sbin/nologin  mysql</span><br><span class="line">tar zxvf boost_1_59_0.tar.gz </span><br><span class="line">tar zxvf mysql-5.7.20.tar.gz </span><br><span class="line">mkdir -p /opt/laohulab/mysql-5.7.20/data</span><br><span class="line"><span class="built_in">cd</span> mysql-5.7.20/</span><br><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=<span class="string">"/opt/laohulab/mysql-5.7.20"</span> -DMYSQL_DATADIR=<span class="string">"/opt/laohulab/mysql-5.7.20/data"</span> -DDOWNLOAD_BOOST=1 -DWITH_BOOST=../boost_1_59_0 -DSYSCONFDIR=/opt/laohulab/mysql-5.7.20 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DWITH_FEDERATED_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_MYISAM_STORAGE_ENGINE=1 -DENABLED_LOCAL_INFILE=1 -DENABLE_DTRACE=0 -DDEFAULT_CHARSET=utf8mb4 -DDEFAULT_COLLATION=utf8mb4_general_ci -DWITH_EMBEDDED_SERVER=0</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="配置系统服务"><a href="#配置系统服务" class="headerlink" title="配置系统服务"></a>配置系统服务</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /opt/laohulab/mysql-5.7.20/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">chkconfig --list mysqld</span><br></pre></td></tr></table></figure><h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/laohulab/mysql-5.7.20/bin/mysqld --initialize-insecure --user=mysql --basedir=/opt/laohulab/mysql-5.7.20 --datadir=/opt/laohulab/mysql-5.7.20/data</span><br><span class="line">touch /opt/laohulab/mysql-5.7.20/mysql-error.log</span><br><span class="line">chown -R mysql.mysql /opt/laohulab/mysql-5.7.20/</span><br><span class="line">/opt/laohulab/mysql-5.7.20/bin/mysqld_safe --defaults-file=<span class="string">"/opt/laohulab/mysql-5.7.20/my.cnf"</span> &amp;</span><br></pre></td></tr></table></figure><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE `tonnydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure><h5 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grant all privileges on tonnydb.* to <span class="string">'tonny'</span>@<span class="string">'%'</span> identified by Welcome2018@<span class="string">';</span></span><br><span class="line"><span class="string">flush privileges;</span></span><br></pre></td></tr></table></figure><h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/laohulab/mysql-5.7.20/bin/mysql -uroot -p</span><br><span class="line"> </span><br><span class="line">select host,user,authentication_string from user;</span><br><span class="line">UPDATE user SET authentication_string=PASSWORD(<span class="string">'newpassword'</span>) WHERE user=<span class="string">'root'</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><span class="exturl" data-url="aHR0cDovL3d3dy4zNjBkb2MuY29tL2NvbnRlbnQvMTUvMDYyOS8xNy8xNDkwMDM0MV80ODE1MDQzNjUuc2h0bWw=" title="http://www.360doc.com/content/15/0629/17/14900341_481504365.shtml">http://www.360doc.com/content/15/0629/17/14900341_481504365.shtml<i class="fa fa-external-link"></i></span> centos7</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;编译安装&quot;&gt;&lt;a href=&quot;#编译安装&quot; class=&quot;headerlink&quot; title=&quot;编译安装&quot;&gt;&lt;/a&gt;编译安装&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum remove mariadb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install gcc gcc-c++ ncurses ncurses-devel cmake &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http://files.directadmin.com/services/all/mysql/5.7/5.7.20/mysql-5.7.20.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;useradd -M -s /sbin/nologin  mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf boost_1_59_0.tar.gz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf mysql-5.7.20.tar.gz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p /opt/laohulab/mysql-5.7.20/data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; mysql-5.7.20/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake . -DCMAKE_INSTALL_PREFIX=&lt;span class=&quot;string&quot;&gt;&quot;/opt/laohulab/mysql-5.7.20&quot;&lt;/span&gt; -DMYSQL_DATADIR=&lt;span class=&quot;string&quot;&gt;&quot;/opt/laohulab/mysql-5.7.20/data&quot;&lt;/span&gt; -DDOWNLOAD_BOOST=1 -DWITH_BOOST=../boost_1_59_0 -DSYSCONFDIR=/opt/laohulab/mysql-5.7.20 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DWITH_FEDERATED_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_MYISAM_STORAGE_ENGINE=1 -DENABLED_LOCAL_INFILE=1 -DENABLE_DTRACE=0 -DDEFAULT_CHARSET=utf8mb4 -DDEFAULT_COLLATION=utf8mb4_general_ci -DWITH_EMBEDDED_SERVER=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Mysql" scheme="http://blog.laohulab.com/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://blog.laohulab.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>自签名ssl证书</title>
    <link href="http://blog.laohulab.com/SSL/1808019060.html"/>
    <id>http://blog.laohulab.com/SSL/1808019060.html</id>
    <published>2019-05-04T07:30:00.000Z</published>
    <updated>2019-05-04T13:27:37.609Z</updated>
    
    <content type="html"><![CDATA[<h5 id="定制个人签名证书"><a href="#定制个人签名证书" class="headerlink" title="定制个人签名证书"></a>定制个人签名证书</h5><h6 id="生成私钥文件"><a href="#生成私钥文件" class="headerlink" title="生成私钥文件"></a>生成私钥文件</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genrsa -des3 -out www.laohulab.com.key 2048</span><br></pre></td></tr></table></figure><h6 id="移除私钥密码"><a href="#移除私钥密码" class="headerlink" title="移除私钥密码"></a>移除私钥密码</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rsa -<span class="keyword">in</span> www.laohulab.com.key -out www.laohulab.com.key</span><br></pre></td></tr></table></figure><h6 id="生成自签名证书"><a href="#生成自签名证书" class="headerlink" title="生成自签名证书"></a>生成自签名证书</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl req -new -sha256  \</span><br><span class="line">    -x509 \</span><br><span class="line">    -days 10000 \</span><br><span class="line">    -key www.laohulab.com.key \</span><br><span class="line">    -subj <span class="string">"/C=CN/ST=BeiJing/L=Beijing/O=QUNAR/OU=FE/CN=www.laohulab.com"</span> \</span><br><span class="line">    -extensions SAN \</span><br><span class="line">    -config &lt;(cat ./openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS.1:www:laohulab.com,DNS.2:wiki.laohulab.com,DNS.3:*.laohulab.com"</span>)) \</span><br><span class="line">    -out www.laohulab.com.crt</span><br></pre></td></tr></table></figure><a id="more"></a><div class="note danger">            <h6 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h6><ul><li>由于各服务器openssl版本不同，当前服务器自签名的证书拷贝至其他服务器可能会出现问题，最好在需要使用服务器上使用openssl重新生成</li><li>使用到本机openssl.cnf文件</li></ul>          </div><h6 id="生成genewiz证书示例"><a href="#生成genewiz证书示例" class="headerlink" title="生成genewiz证书示例"></a>生成genewiz证书示例</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genrsa -des3 -out gwharbor03.local.genewiz.com.key 2048</span><br><span class="line">openssl rsa -<span class="keyword">in</span> gwharbor03.local.genewiz.com.key -out gwharbor03.local.genewiz.com.key    </span><br><span class="line">openssl req -new -sha256  \</span><br><span class="line">    -x509 \</span><br><span class="line">    -days 10000 \</span><br><span class="line">    -key gwharbor03.local.genewiz.com.key \</span><br><span class="line">    -subj <span class="string">"/C=CN/ST=Jiangsu/L=Suzhou/O=ITSA/OU=ITSA/CN=*.local.genewiz.com"</span> \</span><br><span class="line">    -extensions SAN \</span><br><span class="line">    -config &lt;(cat ./openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS.1:gwharbor03.local.genewiz.com,DNS.2:*.local.genewiz.com"</span>)) \</span><br><span class="line">    -out gwharbor03.local.genewiz.com.crt</span><br></pre></td></tr></table></figure><h6 id="生成laohulab-com自签名证书"><a href="#生成laohulab-com自签名证书" class="headerlink" title="生成laohulab.com自签名证书"></a>生成laohulab.com自签名证书</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genrsa -des3 -out laohulab.com.key 2048</span><br></pre></td></tr></table></figure><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-174425.png" alt="img"></p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">openssl rsa -<span class="keyword">in</span> laohulab<span class="selector-class">.com</span><span class="selector-class">.key</span> -out laohulab<span class="selector-class">.com</span><span class="selector-class">.key</span></span><br></pre></td></tr></table></figure><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-174739.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@nginx-10-20 ~]<span class="comment"># openssl req -new -sha256  \</span></span><br><span class="line">&gt;     -x509 \</span><br><span class="line">&gt;     -days 10000 \</span><br><span class="line">&gt;     -key laohulab.com.key \</span><br><span class="line">&gt;     -subj <span class="string">"/C=CN/ST=JiangSu/L=Nanjing/O=IT/OU=IT/CN=laohulab.com"</span> \</span><br><span class="line">&gt;     -extensions SAN \</span><br><span class="line">&gt;     -config &lt;(cat ./openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS.1:laohulab.com,DNS.2:www.laohulab.com,DNS.3:*.laohulab.com"</span>)) \</span><br><span class="line">&gt;     -out laohulab.com.crt</span><br></pre></td></tr></table></figure><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-175027.png" alt="img"></p><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-175326.png" alt="img"><br>6.测试证书</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">由于自签名证书并未被各大主流浏览器根证书信任，所以访问时会提示证书信任警告，将自签名的laohulab.<span class="keyword">com</span>.crt导入浏览器即可</span><br><span class="line">[root@nginx-<span class="number">10</span>-<span class="number">20</span> ~]# mv laohulab.<span class="keyword">com</span>.* /<span class="keyword">opt</span>/laohulab/nginx/certs/</span><br><span class="line">[root@nginx-<span class="number">10</span>-<span class="number">20</span> ~]# <span class="keyword">cd</span> /<span class="keyword">opt</span>/laohulab/nginx/certs/</span><br></pre></td></tr></table></figure><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-175813.png" alt="img"></p><p>重启Nginx，进行测试！ IE测试，由于自签名证书并未被各大主流浏览器根证书信任，所以访问时会提示证书信任警告，将自签名的laohulab.com.crt导入浏览器即可<br><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-175942.png" alt="img"></p><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-180043.png" alt="img"></p><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-181124.png" alt="img"></p><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-181415.png" alt="img"></p><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-182548.png" alt="img"></p><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=laohulab:ssl%E8%AF%81%E4%B9%A6%E7%9B%B8%E5%85%B3:pasted:20171021-182629.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;定制个人签名证书&quot;&gt;&lt;a href=&quot;#定制个人签名证书&quot; class=&quot;headerlink&quot; title=&quot;定制个人签名证书&quot;&gt;&lt;/a&gt;定制个人签名证书&lt;/h5&gt;&lt;h6 id=&quot;生成私钥文件&quot;&gt;&lt;a href=&quot;#生成私钥文件&quot; class=&quot;headerlink&quot; title=&quot;生成私钥文件&quot;&gt;&lt;/a&gt;生成私钥文件&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -des3 -out www.laohulab.com.key 2048&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;移除私钥密码&quot;&gt;&lt;a href=&quot;#移除私钥密码&quot; class=&quot;headerlink&quot; title=&quot;移除私钥密码&quot;&gt;&lt;/a&gt;移除私钥密码&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl rsa -&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; www.laohulab.com.key -out www.laohulab.com.key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;生成自签名证书&quot;&gt;&lt;a href=&quot;#生成自签名证书&quot; class=&quot;headerlink&quot; title=&quot;生成自签名证书&quot;&gt;&lt;/a&gt;生成自签名证书&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl req -new -sha256  \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -x509 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -days 10000 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -key www.laohulab.com.key \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -subj &lt;span class=&quot;string&quot;&gt;&quot;/C=CN/ST=BeiJing/L=Beijing/O=QUNAR/OU=FE/CN=www.laohulab.com&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -extensions SAN \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -config &amp;lt;(cat ./openssl.cnf &amp;lt;(&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;[SAN]\nsubjectAltName=DNS.1:www:laohulab.com,DNS.2:wiki.laohulab.com,DNS.3:*.laohulab.com&quot;&lt;/span&gt;)) \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -out www.laohulab.com.crt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="SSL" scheme="http://blog.laohulab.com/categories/SSL/"/>
    
    
      <category term="SSL" scheme="http://blog.laohulab.com/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>dns主从配置</title>
    <link href="http://blog.laohulab.com/DNS/681391827.html"/>
    <id>http://blog.laohulab.com/DNS/681391827.html</id>
    <published>2019-05-04T07:23:00.000Z</published>
    <updated>2019-05-04T13:27:47.601Z</updated>
    
    <content type="html"><![CDATA[<h5 id="安装bind软件"><a href="#安装bind软件" class="headerlink" title="安装bind软件"></a>安装bind软件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install <span class="built_in">bind</span></span><br></pre></td></tr></table></figure><h5 id="配置Master-DNS"><a href="#配置Master-DNS" class="headerlink" title="配置Master DNS"></a>配置Master DNS</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//</span><br><span class="line">// named.conf</span><br><span class="line">//</span><br><span class="line">// Provided by Red Hat <span class="built_in">bind</span> package to configure the ISC BIND named(8) DNS</span><br><span class="line">// server as a caching only nameserver (as a localhost DNS resolver only).</span><br><span class="line">//</span><br><span class="line">// See /usr/share/doc/<span class="built_in">bind</span>*/sample/ <span class="keyword">for</span> example named configuration files.</span><br><span class="line">//</span><br><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; 192.168.10.249; &#125;;</span><br><span class="line">        //listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">        directory       <span class="string">"/var/named"</span>;</span><br><span class="line">        dump-file       <span class="string">"/var/named/data/cache_dump.db"</span>;</span><br><span class="line">        statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</span><br><span class="line">        memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</span><br><span class="line">        allow-query     &#123; any; &#125;;</span><br><span class="line">        recursion yes;</span><br><span class="line"> </span><br><span class="line">        forwarders &#123; 218.2.135.1; 114.114.114.114; &#125;;</span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        //dnssec-validation yes;</span><br><span class="line">        //dnssec-lookaside auto;</span><br><span class="line">        /* Path to ISC DLV key */</span><br><span class="line">        //bindkeys-file <span class="string">"/etc/named.iscdlv.key"</span>;</span><br><span class="line">        //managed-keys-directory <span class="string">"/var/named/dynamic"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file <span class="string">"data/named.run"</span>;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">zone <span class="string">"."</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> hint;</span><br><span class="line">        file <span class="string">"named.ca"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">include <span class="string">"/etc/named.rfc1912.zones"</span>;</span><br><span class="line">include <span class="string">"/etc/named.laohulab.zones"</span>;</span><br><span class="line">//include <span class="string">"/etc/named.root.key"</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">zone <span class="string">"laohulab.com"</span> IN &#123;</span><br><span class="line">       <span class="built_in">type</span> master;</span><br><span class="line">       file <span class="string">"laohulab.com.zone"</span>;</span><br><span class="line">       allow-transfer &#123; 192.168.10.250; &#125;;</span><br><span class="line">       notify yes;</span><br><span class="line">       also-notify &#123; 192.168.10.250; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">zone</span><br><span class="line"><span class="string">"1.168.192.in-addr.arpa"</span> IN &#123;</span><br><span class="line">       <span class="built_in">type</span> master;</span><br><span class="line">       file <span class="string">"192.168.1.zone"</span>;</span><br><span class="line">       allow-transfer &#123; 192.168.10.250; &#125;;</span><br><span class="line">       notify yes;</span><br><span class="line">       also-notify &#123; 192.168.10.250; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="配置Slave-DNS"><a href="#配置Slave-DNS" class="headerlink" title="配置Slave DNS"></a>配置Slave DNS</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//</span><br><span class="line">// named.conf</span><br><span class="line">//</span><br><span class="line">// Provided by Red Hat <span class="built_in">bind</span> package to configure the ISC BIND named(8) DNS</span><br><span class="line">// server as a caching only nameserver (as a localhost DNS resolver only).</span><br><span class="line">//</span><br><span class="line">// See /usr/share/doc/<span class="built_in">bind</span>*/sample/ <span class="keyword">for</span> example named configuration files.</span><br><span class="line">//</span><br><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; 192.168.10.250; &#125;;</span><br><span class="line">        //listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">        directory       <span class="string">"/var/named"</span>;</span><br><span class="line">        dump-file       <span class="string">"/var/named/data/cache_dump.db"</span>;</span><br><span class="line">        statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</span><br><span class="line">        memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</span><br><span class="line">        allow-query     &#123; any; &#125;;</span><br><span class="line">//</span><br><span class="line">// named.conf</span><br><span class="line">//</span><br><span class="line">// Provided by Red Hat <span class="built_in">bind</span> package to configure the ISC BIND named(8) DNS</span><br><span class="line">// server as a caching only nameserver (as a localhost DNS resolver only).</span><br><span class="line">//</span><br><span class="line">// See /usr/share/doc/<span class="built_in">bind</span>*/sample/ <span class="keyword">for</span> example named configuration files.</span><br><span class="line">//</span><br><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; 192.168.10.250; &#125;;</span><br><span class="line">        //listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">        directory       <span class="string">"/var/named"</span>;</span><br><span class="line">        dump-file       <span class="string">"/var/named/data/cache_dump.db"</span>;</span><br><span class="line">        statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</span><br><span class="line">        memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</span><br><span class="line">        allow-query     &#123; any; &#125;;</span><br><span class="line">        recursion yes;</span><br><span class="line"> </span><br><span class="line">        forwarders &#123; 218.2.135.1; 114.114.114.114; &#125;;</span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        //dnssec-validation yes;</span><br><span class="line">        //dnssec-lookaside auto;</span><br><span class="line">        /* Path to ISC DLV key */</span><br><span class="line">        //bindkeys-file <span class="string">"/etc/named.iscdlv.key"</span>;</span><br><span class="line">        //managed-keys-directory <span class="string">"/var/named/dynamic"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file <span class="string">"data/named.run"</span>;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">zone <span class="string">"."</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> hint;</span><br><span class="line">        file <span class="string">"named.ca"</span>;</span><br><span class="line">&#125;;</span><br><span class="line">include <span class="string">"/etc/named.rfc1912.zones"</span>;</span><br><span class="line">include <span class="string">"/etc/named.laohulab.zones"</span>;</span><br><span class="line">//include <span class="string">"/etc/named.root.key"</span>;</span><br></pre></td></tr></table></figure><h5 id="启动服务及设置开机启动"><a href="#启动服务及设置开机启动" class="headerlink" title="启动服务及设置开机启动"></a>启动服务及设置开机启动</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@sdns-10-250 ~]<span class="comment"># chkconfig named on &amp;&amp; chkconfig --list named</span></span><br><span class="line">named          0:off1:off2:on3:on4:on5:on6:off</span><br><span class="line"> </span><br><span class="line">[root@mdns-10-250 ~]<span class="comment"># service named start</span></span><br><span class="line">Starting named:                                            [  OK  ]</span><br></pre></td></tr></table></figure><h5 id="检查-var-log-message-主从同步信息"><a href="#检查-var-log-message-主从同步信息" class="headerlink" title="检查/var/log/message 主从同步信息"></a>检查/var/log/message 主从同步信息</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Jul  7 09:02:24 mdns-10-249 named[1422]: zone laohulab.com/IN: loaded serial 2016122622</span><br><span class="line">Jul  7 09:02:24 mdns-10-249 named[1422]: zone laohulab.com/IN: sending notifies (serial 2016122622)</span><br><span class="line">Jul  7 09:02:24 mdns-10-249 named[1422]: client 192.168.10.250<span class="comment">#42323: transfer of 'laohulab.com/IN': AXFR-style IXFR started</span></span><br><span class="line">Jul  7 09:02:24 mdns-10-249 named[1422]: client 192.168.10.250<span class="comment">#42323: transfer of 'laohulab.com/IN': AXFR-style IXFR ended</span></span><br></pre></td></tr></table></figure><div class="note danger">            <h6 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h6><p>修改Master DNS记录，务必修改序列号，同步才能生效!</p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;安装bind软件&quot;&gt;&lt;a href=&quot;#安装bind软件&quot; class=&quot;headerlink&quot; title=&quot;安装bind软件&quot;&gt;&lt;/a&gt;安装bind软件&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum -y install &lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;配置Master-DNS&quot;&gt;&lt;a href=&quot;#配置Master-DNS&quot; class=&quot;headerlink&quot; title=&quot;配置Master DNS&quot;&gt;&lt;/a&gt;配置Master DNS&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// named.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Provided by Red Hat &lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt; package to configure the ISC BIND named(8) DNS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// server as a caching only nameserver (as a localhost DNS resolver only).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// See /usr/share/doc/&lt;span class=&quot;built_in&quot;&gt;bind&lt;/span&gt;*/sample/ &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; example named configuration files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen-on port 53 &amp;#123; 192.168.10.249; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //listen-on-v6 port 53 &amp;#123; ::1; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        directory       &lt;span class=&quot;string&quot;&gt;&quot;/var/named&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dump-file       &lt;span class=&quot;string&quot;&gt;&quot;/var/named/data/cache_dump.db&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        statistics-file &lt;span class=&quot;string&quot;&gt;&quot;/var/named/data/named_stats.txt&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        memstatistics-file &lt;span class=&quot;string&quot;&gt;&quot;/var/named/data/named_mem_stats.txt&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allow-query     &amp;#123; any; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        recursion yes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        forwarders &amp;#123; 218.2.135.1; 114.114.114.114; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dnssec-enable no;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //dnssec-validation yes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //dnssec-lookaside auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /* Path to ISC DLV key */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //bindkeys-file &lt;span class=&quot;string&quot;&gt;&quot;/etc/named.iscdlv.key&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //managed-keys-directory &lt;span class=&quot;string&quot;&gt;&quot;/var/named/dynamic&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;logging &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        channel default_debug &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                file &lt;span class=&quot;string&quot;&gt;&quot;data/named.run&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                severity dynamic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zone &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; IN &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; hint;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        file &lt;span class=&quot;string&quot;&gt;&quot;named.ca&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include &lt;span class=&quot;string&quot;&gt;&quot;/etc/named.rfc1912.zones&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include &lt;span class=&quot;string&quot;&gt;&quot;/etc/named.laohulab.zones&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//include &lt;span class=&quot;string&quot;&gt;&quot;/etc/named.root.key&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zone &lt;span class=&quot;string&quot;&gt;&quot;laohulab.com&quot;&lt;/span&gt; IN &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; master;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       file &lt;span class=&quot;string&quot;&gt;&quot;laohulab.com.zone&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       allow-transfer &amp;#123; 192.168.10.250; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       notify yes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       also-notify &amp;#123; 192.168.10.250; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;1.168.192.in-addr.arpa&quot;&lt;/span&gt; IN &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; master;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       file &lt;span class=&quot;string&quot;&gt;&quot;192.168.1.zone&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       allow-transfer &amp;#123; 192.168.10.250; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       notify yes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       also-notify &amp;#123; 192.168.10.250; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="DNS" scheme="http://blog.laohulab.com/categories/DNS/"/>
    
    
      <category term="DNS" scheme="http://blog.laohulab.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>django_setting相关配置</title>
    <link href="http://blog.laohulab.com/Django/354208569.html"/>
    <id>http://blog.laohulab.com/Django/354208569.html</id>
    <published>2019-05-04T07:16:00.000Z</published>
    <updated>2019-05-04T13:27:51.381Z</updated>
    
    <content type="html"><![CDATA[<h5 id="常规参数配置"><a href="#常规参数配置" class="headerlink" title="常规参数配置"></a>常规参数配置</h5><h6 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure><h6 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br></pre></td></tr></table></figure><h6 id="运行并未写入数据库"><a href="#运行并未写入数据库" class="headerlink" title="运行并未写入数据库"></a>运行并未写入数据库</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py makemigrations</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="写入数据库"><a href="#写入数据库" class="headerlink" title="写入数据库"></a>写入数据库</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><h6 id="创建管理员用户"><a href="#创建管理员用户" class="headerlink" title="创建管理员用户"></a>创建管理员用户</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure><h6 id="把模型注册至admin才能使用"><a href="#把模型注册至admin才能使用" class="headerlink" title="把模型注册至admin才能使用"></a>把模型注册至admin才能使用</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">admin.site.register(model)</span><br></pre></td></tr></table></figure><h5 id="配置静态资源目录"><a href="#配置静态资源目录" class="headerlink" title="配置静态资源目录"></a>配置静态资源目录</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATICFILES_DIRS = (</span><br><span class="line">os.path.join(BASE_DIR,<span class="string">'statics'</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h6 id="配置MYSQl数据库连接"><a href="#配置MYSQl数据库连接" class="headerlink" title="配置MYSQl数据库连接"></a>配置MYSQl数据库连接</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'csvt'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'123456'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">''</span>,</span><br><span class="line">        <span class="string">'PORT'</span>:<span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="设置模版文件夹"><a href="#设置模版文件夹" class="headerlink" title="设置模版文件夹"></a>设置模版文件夹</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR,<span class="string">'templates'</span>)],</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'builtins'</span>: [                                     <span class="comment"># Add this section</span></span><br><span class="line">                <span class="string">"debugtools.templatetags.debugtools_tags"</span>,   <span class="comment"># Add this line</span></span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="前端模版渲染"><a href="#前端模版渲染" class="headerlink" title="前端模版渲染"></a>前端模版渲染</h5><h6 id="获取变量值"><a href="#获取变量值" class="headerlink" title="获取变量值"></a>获取变量值</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;&#123; key &#125;&#125;</span><br></pre></td></tr></table></figure><h6 id="判断是否存在"><a href="#判断是否存在" class="headerlink" title="判断是否存在"></a>判断是否存在</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> <span class="keyword">not</span> key3 %&#125;</span><br><span class="line">&lt;h1&gt;key3 value&lt;/h1&gt;</span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">&lt;h1&gt;else&lt;/h1&gt;</span><br><span class="line">&#123;%endif%&#125;</span><br></pre></td></tr></table></figure><h6 id="判断是否相等"><a href="#判断是否相等" class="headerlink" title="判断是否相等"></a>判断是否相等</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% ifequal key3 <span class="string">'ok'</span> %&#125;</span><br><span class="line">&lt;h1&gt;ok&lt;/h1&gt;</span><br><span class="line">&#123;%<span class="keyword">else</span>%&#125;</span><br><span class="line">&lt;h1&gt;no ok&lt;/h1&gt;</span><br><span class="line">&#123;%endifequal%&#125;</span><br></pre></td></tr></table></figure><h6 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h6><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> item <span class="keyword">in</span> item_list %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; item &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;%<span class="name"><span class="name">endfor</span></span>%&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h6 id="block块"><a href="#block块" class="headerlink" title="block块"></a>block块</h6><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;%  <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;%  <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h6 id="包含标签"><a href="#包含标签" class="headerlink" title="包含标签"></a>包含标签</h6><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'xxx.html'%&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> 'xxx.html' %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h6 id="表单相关"><a href="#表单相关" class="headerlink" title="表单相关"></a>表单相关</h6><h5 id="针对于HTML-FROM表单-POST请求及跨域请求伪造"><a href="#针对于HTML-FROM表单-POST请求及跨域请求伪造" class="headerlink" title="针对于HTML FROM表单 POST请求及跨域请求伪造"></a>针对于HTML FROM表单 POST请求及跨域请求伪造</h5><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;%<span class="name"><span class="name">csrf_token</span></span>%&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h6 id="按照原格式显示网页"><a href="#按照原格式显示网页" class="headerlink" title="按照原格式显示网页"></a>按照原格式显示网页</h6><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% |<span class="name">safe</span>%&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;常规参数配置&quot;&gt;&lt;a href=&quot;#常规参数配置&quot; class=&quot;headerlink&quot; title=&quot;常规参数配置&quot;&gt;&lt;/a&gt;常规参数配置&lt;/h5&gt;&lt;h6 id=&quot;设置时区&quot;&gt;&lt;a href=&quot;#设置时区&quot; class=&quot;headerlink&quot; title=&quot;设置时区&quot;&gt;&lt;/a&gt;设置时区&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TIME_ZONE = &lt;span class=&quot;string&quot;&gt;&#39;Asia/Shanghai&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;设置中文&quot;&gt;&lt;a href=&quot;#设置中文&quot; class=&quot;headerlink&quot; title=&quot;设置中文&quot;&gt;&lt;/a&gt;设置中文&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LANGUAGE_CODE = &lt;span class=&quot;string&quot;&gt;&#39;zh-hans&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;运行并未写入数据库&quot;&gt;&lt;a href=&quot;#运行并未写入数据库&quot; class=&quot;headerlink&quot; title=&quot;运行并未写入数据库&quot;&gt;&lt;/a&gt;运行并未写入数据库&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python manage.py makemigrations&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://blog.laohulab.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>cobbler_ldap配置</title>
    <link href="http://blog.laohulab.com/Linux/3154142427.html"/>
    <id>http://blog.laohulab.com/Linux/3154142427.html</id>
    <published>2019-05-04T07:13:00.000Z</published>
    <updated>2019-05-04T13:27:42.681Z</updated>
    
    <content type="html"><![CDATA[<h5 id="修改认证模式"><a href="#修改认证模式" class="headerlink" title="修改认证模式"></a>修改认证模式</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/cobbler/modules.conf</span><br></pre></td></tr></table></figure><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=images:20181009-115135.png" alt="img"></p><h5 id="配置ldap"><a href="#配置ldap" class="headerlink" title="配置ldap"></a>配置ldap</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/cobbler/settings</span><br></pre></td></tr></table></figure><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=images:20181009-115143.png" alt="img"></p><h5 id="重启cobblerd服务"><a href="#重启cobblerd服务" class="headerlink" title="重启cobblerd服务"></a>重启cobblerd服务</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@cobbler-1-250 ~]<span class="comment"># service cobblerd restart</span></span><br><span class="line">Stopping cobbler daemon:                                   [确定]</span><br><span class="line">Starting cobbler daemon:</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;修改认证模式&quot;&gt;&lt;a href=&quot;#修改认证模式&quot; class=&quot;headerlink&quot; title=&quot;修改认证模式&quot;&gt;&lt;/a&gt;修改认证模式&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code
      
    
    </summary>
    
      <category term="Linux" scheme="http://blog.laohulab.com/categories/Linux/"/>
    
    
      <category term="Cobbler" scheme="http://blog.laohulab.com/tags/Cobbler/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装配置vncserver</title>
    <link href="http://blog.laohulab.com/Linux/2477200583.html"/>
    <id>http://blog.laohulab.com/Linux/2477200583.html</id>
    <published>2019-05-04T07:10:00.000Z</published>
    <updated>2019-05-04T13:27:32.085Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-安装vncserver"><a href="#1-安装vncserver" class="headerlink" title="1.安装vncserver"></a>1.安装vncserver</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install tigervnc-server</span><br></pre></td></tr></table></figure><h5 id="2-配置VNC-Server"><a href="#2-配置VNC-Server" class="headerlink" title="2.配置VNC Server"></a>2.配置VNC Server</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /lib/systemd/system/vncserver@.service /lib/systemd/system/vncserver@:1.service</span><br></pre></td></tr></table></figure><p><strong>备注：vncserver@:1.service代表启动第一个vncserver服务器，端口为5900+1=5901，以此类推</strong></p><a id="more"></a><h5 id="2-1-指定用户"><a href="#2-1-指定用户" class="headerlink" title="2.1 指定用户"></a>2.1 指定用户</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /lib/systemd/system/vncserver@:1.service</span><br></pre></td></tr></table></figure><p><img src="http://wiki.laohulab.com/lib/exe/fetch.php?media=images:20181009-112005.png" alt="img"></p><h5 id="2-2-更新systemctl来确保其生效"><a href="#2-2-更新systemctl来确保其生效" class="headerlink" title="2.2 更新systemctl来确保其生效"></a>2.2 更新systemctl来确保其生效</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h5 id="2-3-设置用户vnc的密码"><a href="#2-3-设置用户vnc的密码" class="headerlink" title="2.3 设置用户vnc的密码"></a>2.3 设置用户vnc的密码</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vncpasswd root/vncpasswd</span><br></pre></td></tr></table></figure><h5 id="2-4-启动该服务"><a href="#2-4-启动该服务" class="headerlink" title="2.4 启动该服务"></a>2.4 启动该服务</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start vncserver@:1.service</span><br></pre></td></tr></table></figure><h5 id="2-5-设置开机自启动"><a href="#2-5-设置开机自启动" class="headerlink" title="2.5 设置开机自启动"></a>2.5 设置开机自启动</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> vncserver@:1.service</span><br></pre></td></tr></table></figure><h5 id="2-6-centos7修改主机名（永久生效）"><a href="#2-6-centos7修改主机名（永久生效）" class="headerlink" title="2.6 centos7修改主机名（永久生效）"></a>2.6 centos7修改主机名（永久生效）</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname xxx 使用这种方式修改，可以永久性的修改主机名称</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-安装vncserver&quot;&gt;&lt;a href=&quot;#1-安装vncserver&quot; class=&quot;headerlink&quot; title=&quot;1.安装vncserver&quot;&gt;&lt;/a&gt;1.安装vncserver&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum -y install tigervnc-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;2-配置VNC-Server&quot;&gt;&lt;a href=&quot;#2-配置VNC-Server&quot; class=&quot;headerlink&quot; title=&quot;2.配置VNC Server&quot;&gt;&lt;/a&gt;2.配置VNC Server&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cp /lib/systemd/system/vncserver@.service /lib/systemd/system/vncserver@:1.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;备注：vncserver@:1.service代表启动第一个vncserver服务器，端口为5900+1=5901，以此类推&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.laohulab.com/categories/Linux/"/>
    
    
      <category term="vncserver" scheme="http://blog.laohulab.com/tags/vncserver/"/>
    
  </entry>
  
  <entry>
    <title>资产管理系统(未完待续)</title>
    <link href="http://blog.laohulab.com/Django/3392313719.html"/>
    <id>http://blog.laohulab.com/Django/3392313719.html</id>
    <published>2019-04-29T08:12:00.000Z</published>
    <updated>2019-05-04T03:31:11.334Z</updated>
    
    <content type="html"><![CDATA[<p>:smile:</p><h5 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h5><p><img src="/images/pasted-268.png" alt="upload successful"><br><img src="/images/pasted-269.png" alt="upload successful"><br><img src="/images/pasted-270.png" alt="upload successful"><br><img src="/images/pasted-271.png" alt="upload successful"><br><img src="/images/pasted-272.png" alt="upload successful"><br><img src="/images/pasted-273.png" alt="upload successful"><br><img src="/images/pasted-274.png" alt="upload successful"><br><img src="/images/pasted-275.png" alt="upload successful"></p><h5 id="数据库表结构"><a href="#数据库表结构" class="headerlink" title="数据库表结构"></a>数据库表结构</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line">HD_INTERFACE = (</span><br><span class="line">    (<span class="string">'SSD'</span>, <span class="string">'SSD'</span>),</span><br><span class="line">    (<span class="string">'SAS'</span>, <span class="string">'SAS'</span>),</span><br><span class="line">    (<span class="string">'SATA'</span>, <span class="string">'SATA'</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">MEM_INTERFACE = (</span><br><span class="line">    (<span class="string">'DDR3'</span>, <span class="string">'DDR3'</span>),</span><br><span class="line">    (<span class="string">'DDR4'</span>, <span class="string">'DDR4'</span>),</span><br><span class="line">    (<span class="string">'Unknown'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">STATUS = (</span><br><span class="line">    (<span class="string">'1'</span>, <span class="string">'使用中'</span>),</span><br><span class="line">    (<span class="string">'2'</span>, <span class="string">'未使用'</span>),</span><br><span class="line">    (<span class="string">'3'</span>, <span class="string">'故障'</span>),</span><br><span class="line">    (<span class="string">'4'</span>, <span class="string">'报废'</span>),</span><br><span class="line">    (<span class="string">'5'</span>, <span class="string">'其他'</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">OS_TYPE = (</span><br><span class="line">    (<span class="string">'Linux'</span>, <span class="string">'Linux'</span>),</span><br><span class="line">    (<span class="string">'Windows'</span>, <span class="string">'Windows'</span>),</span><br><span class="line">    (<span class="string">'Other'</span>, <span class="string">'Other'</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTH_TYPE = (</span><br><span class="line">    (<span class="string">'PWD'</span>, <span class="string">'密码认证'</span>),</span><br><span class="line">    (<span class="string">'KEY'</span>, <span class="string">'密钥认证'</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 定义服务器认证信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    auth_type = models.CharField(max_length=<span class="number">10</span>, choices=AUTH_TYPE, default=<span class="string">'PWD'</span>, verbose_name=<span class="string">'认证类型'</span>)</span><br><span class="line">    user = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'认证用户'</span>)</span><br><span class="line">    pwd = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'认证密码'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'认证信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.user + <span class="string">'-'</span> + self.auth_type</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HardDiskInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    物理磁盘信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    wwn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'序列号'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    model = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘型号'</span>)</span><br><span class="line">    size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘大小'</span>)</span><br><span class="line">    slot = models.CharField(max_length=<span class="number">2</span>, verbose_name=<span class="string">'插槽位置'</span>)</span><br><span class="line">    interface = models.CharField(max_length=<span class="number">10</span>, choices=HD_INTERFACE, verbose_name=<span class="string">'接口类型'</span>)</span><br><span class="line">    manufacturer = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘厂商'</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'硬盘信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.wwn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemoryInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    内存信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    sn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'序列号'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存大小'</span>)</span><br><span class="line">    slot = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'插槽位置'</span>)</span><br><span class="line">    interface = models.CharField(max_length=<span class="number">20</span>, choices=MEM_INTERFACE, verbose_name=<span class="string">'接口类型'</span>)</span><br><span class="line">    speed = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存频率'</span>)</span><br><span class="line">    manufacturer = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存厂商'</span>)</span><br><span class="line">    voltage = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存电压'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'内存信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.sn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NetworkInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    网络信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'网卡名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    mac = models.CharField(max_length=<span class="number">48</span>, verbose_name=<span class="string">'网卡地址'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    ip = models.GenericIPAddressField(verbose_name=<span class="string">'IP地址'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    mask = models.GenericIPAddressField(verbose_name=<span class="string">'子网掩码'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gw = models.GenericIPAddressField(verbose_name=<span class="string">'网关地址'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    primary = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">'默认地址'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'网络信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.host.sn + <span class="string">"-"</span> + self.ip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IdcInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    数据中心或机房信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(<span class="string">"机房名称"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    address = models.CharField(<span class="string">"机房地址"</span>, max_length=<span class="number">100</span>, null=<span class="literal">True</span>)</span><br><span class="line">    tel = models.CharField(<span class="string">"机房电话"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    contact = models.CharField(<span class="string">"客户经理"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    contact_phone = models.CharField(<span class="string">"移动电话"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    jigui = models.CharField(<span class="string">"机柜信息"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    ip_range = models.CharField(<span class="string">"IP范围"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    bandwidth = models.CharField(<span class="string">"接入带宽"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'机房管理'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'机房管理'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CabinetInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    机柜信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'机柜名称'</span>)</span><br><span class="line">    cab_lever = models.CharField(max_length=<span class="number">2</span>, verbose_name=<span class="string">u'机器U数,1-10分别代表1~10层'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'机柜信息表'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HostGroup</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    主机组信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(<span class="string">"组名"</span>, max_length=<span class="number">30</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    desc = models.CharField(<span class="string">"描述"</span>, max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'属组管理'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'属组管理'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhysicalHostInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    物理主机信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    brand = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'品牌'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    model = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'型号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sn = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'序列号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    status = models.CharField(max_length=<span class="number">10</span>, choices=STATUS, verbose_name=<span class="string">'使用状态'</span>)</span><br><span class="line">    use_department = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'使用部门'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    asset_no = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'资产编号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    idc = models.ForeignKey(<span class="string">'IdcInfo'</span>, verbose_name=<span class="string">'机房'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cabinet = models.ForeignKey(<span class="string">'CabinetInfo'</span>, verbose_name=<span class="string">'机柜'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    warranty_time = models.DateField(verbose_name=<span class="string">'质保时间'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    group = models.ForeignKey(<span class="string">'HostGroup'</span>, verbose_name=<span class="string">'主机组'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os_type = models.CharField(max_length=<span class="number">10</span>, choices=OS_TYPE, verbose_name=<span class="string">'操作系统'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'操作系统'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os_kernel = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'内核'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'主机名'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    manage_ip = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'管理IP'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'控制器名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_sn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'控制器序列号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_cache_size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'缓存大小'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_no = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'数量'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_brand = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'品牌'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_model = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'型号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_core = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'核心数'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_threads_per_core = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'线程数/核'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    comment = models.TextField(verbose_name=<span class="string">'备注信息'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    auth_info = models.ForeignKey(AuthInfo, verbose_name=<span class="string">'认证信息'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'物理服务器'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.sn</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_nets</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.networkinfo_set.all()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_default_ip</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.networkinfo_set.get(primary=<span class="literal">True</span>).ip</span><br><span class="line">    get_default_ip.short_description = <span class="string">'默认IP'</span></span><br><span class="line">    <span class="comment"># def get_cpus(self):</span></span><br><span class="line">    <span class="comment">#     return self.cpuinfo_set.all().count()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VirtualHostInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    sn = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'序列号'</span>)</span><br><span class="line">    status = models.CharField(max_length=<span class="number">10</span>, choices=STATUS, verbose_name=<span class="string">'使用状态'</span>)</span><br><span class="line">    use_department = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'使用部门'</span>)</span><br><span class="line">    group = models.ForeignKey(<span class="string">'HostGroup'</span>, verbose_name=<span class="string">'主机组'</span>)</span><br><span class="line">    os_type = models.CharField(max_length=<span class="number">10</span>, choices=OS_TYPE, verbose_name=<span class="string">'操作系统'</span>)</span><br><span class="line">    os = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'操作系统'</span>)</span><br><span class="line">    os_kernel = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'内核'</span>)</span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'主机名'</span>)</span><br><span class="line">    cpu_no = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'数量'</span>)</span><br><span class="line">    phy = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'宿主机信息'</span>)</span><br><span class="line">    mem = models.ForeignKey(<span class="string">'MemoryInfo'</span>, verbose_name=<span class="string">'内存信息'</span>)</span><br><span class="line">    hd = models.ForeignKey(<span class="string">'HardDiskInfo'</span>, verbose_name=<span class="string">'硬盘信息'</span>)</span><br><span class="line">    net = models.ForeignKey(<span class="string">'NetworkInfo'</span>, verbose_name=<span class="string">'网络信息'</span>)</span><br><span class="line">    comment = models.TextField(verbose_name=<span class="string">'备注信息'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'虚拟服务器'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.hostname</span><br></pre></td></tr></table></figure>       <h5 id="获取资产信息"><a href="#获取资产信息" class="headerlink" title="获取资产信息"></a>获取资产信息</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'jianhu.yong'</span></span><br><span class="line">__date__ = <span class="string">'19-4-10 下午4:48'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> ansible <span class="keyword">import</span> constants</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"><span class="keyword">from</span> ansible.parsing.dataloader <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> ansible.playbook.play <span class="keyword">import</span> Play</span><br><span class="line"><span class="keyword">from</span> ansible.executor.task_queue_manager <span class="keyword">import</span> TaskQueueManager</span><br><span class="line"><span class="keyword">from</span> ansible.executor.playbook_executor <span class="keyword">import</span> PlaybookExecutor</span><br><span class="line"><span class="keyword">from</span> ansible.plugins.callback <span class="keyword">import</span> CallbackBase</span><br><span class="line"><span class="keyword">from</span> ansible.inventory.manager <span class="keyword">import</span> InventoryManager</span><br><span class="line"><span class="keyword">from</span> ansible.vars.manager <span class="keyword">import</span> VariableManager</span><br><span class="line"><span class="keyword">from</span> ansible.inventory.host <span class="keyword">import</span> Host, Group</span><br><span class="line"><span class="keyword">from</span> cmdb.settings <span class="keyword">import</span> BASE_DIR</span><br><span class="line"><span class="keyword">from</span> cmdb.settings <span class="keyword">import</span> SSH_PRIVATE_KEY_FILE, SSH_USER</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> asset.models <span class="keyword">import</span> PhysicalHostInfo, NetworkInfo, MemoryInfo, HardDiskInfo</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelResultsCollector</span><span class="params">(CallbackBase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, sn, *args, **kwargs)</span>:</span></span><br><span class="line">        super(ModelResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.host_ok = &#123;&#125;</span><br><span class="line">        self.host_unreachable = &#123;&#125;</span><br><span class="line">        self.host_failed = &#123;&#125;</span><br><span class="line">        self.sn = sn</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_unreachable</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.host_unreachable[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_ok</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.host_ok[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">        task_name = result.task_name</span><br><span class="line">        <span class="keyword">if</span> task_name == <span class="string">'setup'</span>:</span><br><span class="line">            host = result._host.name</span><br><span class="line">            facts = result._result.get(<span class="string">'ansible_facts'</span>)</span><br><span class="line">            <span class="keyword">if</span> facts:</span><br><span class="line">                product_serial = facts.get(<span class="string">'ansible_product_serial'</span>, <span class="string">'NA'</span>)</span><br><span class="line">                <span class="keyword">if</span> product_serial != <span class="string">'NA'</span> <span class="keyword">and</span> <span class="string">'VMware'</span> <span class="keyword">in</span> product_serial:</span><br><span class="line">                    virtual_type = <span class="string">'vmware'</span></span><br><span class="line">                <span class="keyword">elif</span> product_serial != <span class="string">'NA'</span>:</span><br><span class="line">                    virtual_type = <span class="string">'physical'</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    virtual_type = facts.get(<span class="string">'facter_virtual'</span>, <span class="string">'NA'</span>)</span><br><span class="line"></span><br><span class="line">                self.sn_new = product_serial</span><br><span class="line"></span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=product_serial)</span><br><span class="line">                obj.brand = facts.get(<span class="string">'ansible_system_vendor'</span>)</span><br><span class="line">                obj.model = facts.get(<span class="string">'ansible_product_name'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取操作系统信息</span></span><br><span class="line">                obj.os_type = facts.get(<span class="string">'ansible_system'</span>)</span><br><span class="line">                obj.os = facts.get(<span class="string">'ansible_distribution'</span>)</span><br><span class="line">                obj.os_kernel = facts.get(<span class="string">'ansible_kernel'</span>)</span><br><span class="line">                obj.hostname = facts.get(<span class="string">'ansible_nodename'</span>)</span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取CPU信息</span></span><br><span class="line">                cpu_no = facts.get(<span class="string">'ansible_processor_count'</span>)</span><br><span class="line">                cpu_model = facts.get(<span class="string">'ansible_processor'</span>)[<span class="number">-1</span>]</span><br><span class="line">                cpu_brand = facts.get(<span class="string">'ansible_processor'</span>)[<span class="number">-2</span>]</span><br><span class="line">                cpu_core = facts.get(<span class="string">'ansible_processor_cores'</span>)</span><br><span class="line">                cpu_threads_per_core = facts.get(<span class="string">'ansible_processor_threads_per_core'</span>)</span><br><span class="line"></span><br><span class="line">                obj.cpu_no = cpu_no</span><br><span class="line">                obj.cpu_model = cpu_model</span><br><span class="line">                obj.cpu_brand = cpu_brand</span><br><span class="line">                obj.cpu_core = cpu_core</span><br><span class="line">                obj.cpu_threads_per_core = cpu_threads_per_core</span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取网络信息</span></span><br><span class="line">                interfaces_info = &#123;&#125;</span><br><span class="line">                valid_interfaces = []</span><br><span class="line">                interfaces = facts.get(<span class="string">'ansible_interfaces'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'lo'</span> <span class="keyword">in</span> interfaces:</span><br><span class="line">                    interfaces.remove(<span class="string">'lo'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'w1g1'</span> <span class="keyword">in</span> interfaces:</span><br><span class="line">                    interfaces.remove(<span class="string">'w1g1'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> interface <span class="keyword">in</span> interfaces:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> interface.startswith(<span class="string">'vir'</span>):</span><br><span class="line">                        valid_interfaces.append(interface)</span><br><span class="line"></span><br><span class="line">                default_interface = facts.get(<span class="string">'ansible_default_ipv4'</span>).get(<span class="string">'interface'</span>)</span><br><span class="line">                default_gw = facts.get(<span class="string">'ansible_default_ipv4'</span>).get(<span class="string">'gateway'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> interface <span class="keyword">in</span> valid_interfaces:</span><br><span class="line">                    interface_info = facts.get(<span class="string">'ansible_&#123;&#125;'</span>.format(interface))</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> interface_info.get(<span class="string">'active'</span>):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> interface_info.has_key(<span class="string">'ipv4'</span>):</span><br><span class="line">                        address = interface_info.get(<span class="string">'ipv4'</span>).get(<span class="string">'address'</span>)</span><br><span class="line">                        netmask = interface_info.get(<span class="string">'ipv4'</span>).get(<span class="string">'netmask'</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        address = <span class="literal">None</span></span><br><span class="line">                        netmask = <span class="literal">None</span></span><br><span class="line">                    macaddress = interface_info.get(<span class="string">'macaddress'</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> interface == default_interface:</span><br><span class="line">                        primary = <span class="literal">True</span></span><br><span class="line">                        gateway = default_gw</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        primary = <span class="literal">False</span></span><br><span class="line">                        gateway = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">                    interfaces_info[interface] = dict(</span><br><span class="line">                        address=address,</span><br><span class="line">                        netmask=netmask,</span><br><span class="line">                        macaddress= macaddress,</span><br><span class="line">                        primary=primary,</span><br><span class="line">                        gateway=gateway</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                ip_list = []</span><br><span class="line">                <span class="keyword">for</span> k, v <span class="keyword">in</span> interfaces_info.items():</span><br><span class="line">                    <span class="keyword">if</span> v.get(<span class="string">'primary'</span>):</span><br><span class="line">                        net_ins, status = NetworkInfo.objects.get_or_create(primary=<span class="literal">True</span>,ip=v.get(<span class="string">'address'</span>))</span><br><span class="line">                        net_ins.primary = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> v.get(<span class="string">'address'</span>):</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        net_ins, status = NetworkInfo.objects.get_or_create(primary=<span class="literal">False</span>, ip=v.get(<span class="string">'address'</span>))</span><br><span class="line">                        net_ins.primary = <span class="literal">False</span></span><br><span class="line">                    ip_list.append(v.get(<span class="string">'address'</span>))</span><br><span class="line">                    net_ins.name = k</span><br><span class="line">                    net_ins.mac = v.get(<span class="string">'macaddress'</span>)</span><br><span class="line">                    <span class="keyword">if</span> v.get(<span class="string">'address'</span>):</span><br><span class="line">                        net_ins.ip = v.get(<span class="string">'address'</span>)</span><br><span class="line">                    net_ins.mask = v.get(<span class="string">'netmask'</span>)</span><br><span class="line">                    net_ins.gw = v.get(<span class="string">'gateway'</span>, <span class="literal">None</span>)</span><br><span class="line">                    net_ins.host = obj</span><br><span class="line">                    net_ins.save()</span><br><span class="line">                net_ins = NetworkInfo.objects.filter(host_id=obj.id, primary=<span class="literal">False</span>).exclude(ip__in=ip_list)</span><br><span class="line">                <span class="keyword">if</span> net_ins:</span><br><span class="line">                    net_ins.delete()</span><br><span class="line"></span><br><span class="line">                <span class="string">"""</span></span><br><span class="line"><span class="string">                针对虚拟机和无法获取序列号的物理机做特殊处理</span></span><br><span class="line"><span class="string">                1、vmware虚拟机有序列号，但是太长，无意义</span></span><br><span class="line"><span class="string">                2、kvm虚拟机无序列号</span></span><br><span class="line"><span class="string">                3、少数物理机无法正常获取序列号，需要手工维护</span></span><br><span class="line"><span class="string">                """</span></span><br><span class="line">                <span class="keyword">if</span> virtual_type == <span class="string">'physical'</span> <span class="keyword">and</span> product_serial != <span class="string">'NA'</span>:  <span class="comment"># 物理机能正常获取到序列号的情况</span></span><br><span class="line">                    obj.product_serial = product_serial</span><br><span class="line">                <span class="keyword">elif</span> virtual_type != <span class="string">'physical'</span>:  <span class="comment"># 虚拟机</span></span><br><span class="line">                    obj.product_serial = <span class="string">"&#123;0&#125;-&#123;1&#125;"</span>.format(virtual_type, host)</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 物理机无法正常获取产品序列号，需要手动更新</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> task_name == <span class="string">'mem'</span>:</span><br><span class="line">            mem_info = []</span><br><span class="line">            result = result._result.get(<span class="string">'stdout'</span>).split(<span class="string">'\n\n'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> i.startswith(<span class="string">'Handle'</span>):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                tmp = i.split(<span class="string">'\n\t'</span>)</span><br><span class="line">                mem_dict = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> tmp:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">not</span> <span class="keyword">in</span> j:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        k,v = j.split(<span class="string">':'</span>)</span><br><span class="line">                        mem_dict[k.strip()] = v.strip()</span><br><span class="line">                mem_info.append(mem_dict)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> self.sn == self.sn_new:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn_new)</span><br><span class="line">            sn_list = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> mem_info:</span><br><span class="line">                <span class="keyword">if</span> i.has_key(<span class="string">'Size'</span>) <span class="keyword">and</span> i.get(<span class="string">'Size'</span>).endswith(<span class="string">'MB'</span>):</span><br><span class="line">                    size = i.get(<span class="string">'Size'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    slot = i.get(<span class="string">'Locator'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    interface = i.get(<span class="string">'Type'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    speed = i.get(<span class="string">'Speed'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    manufacturer = i.get(<span class="string">'Manufacturer'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    sn = i.get(<span class="string">'Serial Number'</span>, <span class="literal">None</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> sn <span class="keyword">or</span> sn == <span class="string">'None'</span>:</span><br><span class="line">                        h = hashlib.md5()</span><br><span class="line">                        h.update(obj.sn+slot)</span><br><span class="line">                        sn = h.hexdigest()</span><br><span class="line">                    sn_list.append(sn)</span><br><span class="line">                    voltage = i.get(<span class="string">'Configured Voltage'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line"></span><br><span class="line">                    mem_ins, status = MemoryInfo.objects.get_or_create(sn=sn)</span><br><span class="line">                    mem_ins.sn = sn</span><br><span class="line">                    mem_ins.size = size</span><br><span class="line">                    mem_ins.slot = slot</span><br><span class="line">                    mem_ins.interface = interface</span><br><span class="line">                    mem_ins.speed = speed</span><br><span class="line">                    mem_ins.manufacturer = manufacturer</span><br><span class="line">                    mem_ins.voltage = voltage</span><br><span class="line">                    mem_ins.host = obj</span><br><span class="line">                    mem_ins.save()</span><br><span class="line">            mem_ins = MemoryInfo.objects.filter(host_id=obj.id).exclude(sn__in=sn_list)</span><br><span class="line">            <span class="keyword">if</span> mem_ins:</span><br><span class="line">                mem_ins.delete()</span><br><span class="line">        <span class="keyword">elif</span> task_name == <span class="string">'hd'</span>:</span><br><span class="line">            <span class="keyword">if</span> self.sn == self.sn_new:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn_new)</span><br><span class="line">            result = result._result.get(<span class="string">'stdout'</span>)</span><br><span class="line">            <span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">            raid_adp_name = re.search(<span class="string">'Product Name:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">            raid_adp_sn = re.search(<span class="string">'Serial No:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">            raid_adp_cache_size = re.search(<span class="string">'Memory:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line"></span><br><span class="line">            obj.raid_adp_name = raid_adp_name</span><br><span class="line">            obj.raid_adp_sn = raid_adp_sn</span><br><span class="line">            obj.raid_adp_cache_size = raid_adp_cache_size</span><br><span class="line">            obj.save()</span><br><span class="line"></span><br><span class="line">            s = re.search(<span class="string">'Physical Disk:.+alert : No'</span>, result, flags=re.DOTALL).group()</span><br><span class="line"></span><br><span class="line">            hd_info = s.split(<span class="string">'\n\n\n\n'</span>)</span><br><span class="line"></span><br><span class="line">            wwn_list = []</span><br><span class="line">            <span class="keyword">for</span> hd <span class="keyword">in</span> hd_info:</span><br><span class="line">                slot = re.search(<span class="string">'Slot Number:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                wwn = re.search(<span class="string">'WWN:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                interface = re.search(<span class="string">'PD Type:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                size = re.search(<span class="string">'Raw Size:.+B'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                manufacturer = re.search(<span class="string">'Inquiry Data.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].split()[<span class="number">0</span>].strip()</span><br><span class="line">                model = re.search(<span class="string">'Inquiry Data.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].split()[<span class="number">1</span>].strip()</span><br><span class="line"></span><br><span class="line">                wwn_list.append(wwn)</span><br><span class="line"></span><br><span class="line">                hd_ins, status = HardDiskInfo.objects.get_or_create(wwn=wwn)</span><br><span class="line">                hd_ins.slot = slot</span><br><span class="line">                hd_ins.wwn = wwn</span><br><span class="line">                hd_ins.interface = interface</span><br><span class="line">                hd_ins.size = size</span><br><span class="line">                hd_ins.manufacturer = manufacturer</span><br><span class="line">                hd_ins.model = model</span><br><span class="line">                hd_ins.host = obj</span><br><span class="line">                hd_ins.save()</span><br><span class="line"></span><br><span class="line">            hd_ins = HardDiskInfo.objects.filter(host_id=obj.id).exclude(wwn__in=wwn_list)</span><br><span class="line">            <span class="keyword">if</span> hd_ins:</span><br><span class="line">                hd_ins.delete()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_failed</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.host_failed[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlayBookResultsCollector</span><span class="params">(CallbackBase)</span>:</span></span><br><span class="line">    CALLBACK_VERSION = <span class="number">2.0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        super(PlayBookResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.task_ok = &#123;&#125;</span><br><span class="line">        self.task_skipped = &#123;&#125;</span><br><span class="line">        self.task_failed = &#123;&#125;</span><br><span class="line">        self.task_status = &#123;&#125;</span><br><span class="line">        self.task_unreachable = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_ok</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.task_ok[result._host.get_name()]  = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_failed</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.task_failed[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_unreachable</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.task_unreachable[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_skipped</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.task_ok[result._host.get_name()]  = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_playbook_on_stats</span><span class="params">(self, stats)</span>:</span></span><br><span class="line">        hosts = sorted(stats.processed.keys())</span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> hosts:</span><br><span class="line">            t = stats.summarize(h)</span><br><span class="line">            self.task_status[h] = &#123;</span><br><span class="line">                <span class="string">"ok"</span>:t[<span class="string">'ok'</span>],</span><br><span class="line">                <span class="string">"changed"</span> : t[<span class="string">'changed'</span>],</span><br><span class="line">                <span class="string">"unreachable"</span>:t[<span class="string">'unreachable'</span>],</span><br><span class="line">                <span class="string">"skipped"</span>:t[<span class="string">'skipped'</span>],</span><br><span class="line">                <span class="string">"failed"</span>:t[<span class="string">'failures'</span>]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomInventory</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, resource, auth_type)</span>:</span></span><br><span class="line">        self.resource = resource</span><br><span class="line">        self.auth_type = auth_type</span><br><span class="line">        self.loader = DataLoader()</span><br><span class="line">        self.inventory = InventoryManager(loader=self.loader, sources=[os.path.join(BASE_DIR, <span class="string">'conf/inventory.conf'</span>)])</span><br><span class="line">        <span class="comment"># self.variable_manager.set_inventory(self.inventory)</span></span><br><span class="line">        self.variable_manager = VariableManager(loader=self.loader, inventory=self.inventory)</span><br><span class="line">        self.dynamic_inventory()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dynamic_inventory</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        添加主机信息</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(self.resource, list):</span><br><span class="line">            <span class="keyword">if</span> self.auth_type == <span class="string">'pwd_login'</span>:</span><br><span class="line">                self.add_dynamic_group(self.resource, self.auth_type)</span><br><span class="line">            <span class="keyword">elif</span> self.auth_type == <span class="string">'key_login'</span>:</span><br><span class="line">                self.add_dynamic_group(self.resource, self.auth_type)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> isinstance(self.resource, dict):</span><br><span class="line">            <span class="keyword">for</span> groupname, hosts <span class="keyword">in</span> self.resource.iteritems():</span><br><span class="line">                self.add_dynamic_group(hosts, groupname)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_dynamic_group</span><span class="params">(self, hosts, group_name, groupvars=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        添加主机信息</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.inventory.groups.get(group_name, <span class="string">''</span>):</span><br><span class="line">            self.inventory.add_group(group_name)</span><br><span class="line"></span><br><span class="line">        group_ins = Group(name=group_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># if group variables exists, add them to group</span></span><br><span class="line">        <span class="keyword">if</span> groupvars:</span><br><span class="line">            <span class="keyword">for</span> key, value <span class="keyword">in</span> groupvars.iteritems():</span><br><span class="line">                group_ins.set_variable(key, value)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add hosts to group</span></span><br><span class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> hosts:</span><br><span class="line">            self.inventory.add_host(host=host,group=group_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ANSRunner</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    This is a General object for parallel execute modules.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, auth_type, resource, *args, **kwargs)</span>:</span></span><br><span class="line">        self.loader = <span class="literal">None</span></span><br><span class="line">        self.inventory = <span class="literal">None</span></span><br><span class="line">        self.variable_manager = <span class="literal">None</span></span><br><span class="line">        self.resource = resource</span><br><span class="line">        self.options = <span class="literal">None</span></span><br><span class="line">        self.passwords = <span class="literal">None</span></span><br><span class="line">        self.callback = <span class="literal">None</span></span><br><span class="line">        self.results_raw = &#123;&#125;</span><br><span class="line">        self.auth_type = auth_type</span><br><span class="line">        self.__initializeData()</span><br><span class="line">        self.sn = kwargs.get(<span class="string">'sn'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__initializeData</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        初始化ansible</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.loader = DataLoader()</span><br><span class="line">        Options = namedtuple(<span class="string">'Options'</span>, [<span class="string">'connection'</span>, <span class="string">'module_path'</span>, <span class="string">'forks'</span>, <span class="string">'timeout'</span>,  <span class="string">'remote_user'</span>,</span><br><span class="line">                <span class="string">'ask_pass'</span>, <span class="string">'private_key_file'</span>, <span class="string">'ssh_common_args'</span>, <span class="string">'ssh_extra_args'</span>, <span class="string">'sftp_extra_args'</span>,</span><br><span class="line">                <span class="string">'scp_extra_args'</span>, <span class="string">'become'</span>, <span class="string">'become_method'</span>, <span class="string">'become_user'</span>, <span class="string">'ask_value_pass'</span>, <span class="string">'verbosity'</span>,</span><br><span class="line">                <span class="string">'check'</span>, <span class="string">'listhosts'</span>, <span class="string">'listtasks'</span>, <span class="string">'listtags'</span>, <span class="string">'syntax'</span>,<span class="string">'diff'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.auth_type == <span class="string">'pwd_login'</span>:</span><br><span class="line">            ask_pass = <span class="literal">True</span></span><br><span class="line">            ask_value_pass = <span class="literal">True</span></span><br><span class="line">            remote_user = <span class="string">'root'</span></span><br><span class="line">            private_key_file = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> self.auth_type == <span class="string">'key_login'</span>:</span><br><span class="line">            ask_pass = <span class="literal">False</span></span><br><span class="line">            ask_value_pass = <span class="literal">False</span></span><br><span class="line">            remote_user = SSH_USER</span><br><span class="line">            private_key_file = SSH_PRIVATE_KEY_FILE</span><br><span class="line"></span><br><span class="line">        self.options = Options(connection=<span class="string">'smart'</span>, module_path=<span class="literal">None</span>, forks=<span class="number">2</span>, timeout=<span class="number">10</span>,</span><br><span class="line">                remote_user=remote_user, ask_pass=ask_pass, private_key_file=private_key_file, ssh_common_args=<span class="literal">None</span>, ssh_extra_args=<span class="literal">None</span>,</span><br><span class="line">                sftp_extra_args=<span class="literal">None</span>, scp_extra_args=<span class="literal">None</span>, become=<span class="literal">True</span>, become_method=<span class="string">"sudo"</span>,</span><br><span class="line">                become_user=<span class="string">"root"</span>, ask_value_pass=ask_value_pass, verbosity=<span class="literal">None</span>, check=<span class="literal">False</span>, listhosts=<span class="literal">False</span>,</span><br><span class="line">                listtasks=<span class="literal">False</span>, listtags=<span class="literal">False</span>, syntax=<span class="literal">False</span>, diff=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        self.passwords = dict(</span><br><span class="line">            conn_pass=<span class="string">'xxxx'</span>,</span><br><span class="line">            becomepass=<span class="string">'xxxx'</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        ci = CustomInventory(self.resource, self.auth_type)</span><br><span class="line">        self.inventory = ci.inventory</span><br><span class="line">        self.variable_manager = ci.variable_manager</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_model</span><span class="params">(self, host_list, module_name, module_args=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        run module from andible ad-hoc.</span></span><br><span class="line"><span class="string">        module_name: ansible module_name</span></span><br><span class="line"><span class="string">        module_args: ansible module args</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> module_args:</span><br><span class="line">            play_source = dict(</span><br><span class="line">                    name=<span class="string">"Ansible Play"</span>,</span><br><span class="line">                    hosts=host_list,</span><br><span class="line">                    gather_facts=<span class="string">'no'</span>,</span><br><span class="line">                    tasks=[</span><br><span class="line">                        dict(action=dict(module=<span class="string">'setup'</span>)),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/usr/sbin/dmidecode -t memory'</span>)),</span><br><span class="line">                    ]</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            play_source = dict(</span><br><span class="line">                    name=<span class="string">"Ansible Play"</span>,</span><br><span class="line">                    hosts=host_list,</span><br><span class="line">                    gather_facts=<span class="string">'no'</span>,</span><br><span class="line">                    tasks=[</span><br><span class="line">                        dict(action=dict(module=<span class="string">'setup'</span>), name=<span class="string">"setup"</span>),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/usr/sbin/dmidecode -t memory'</span>), name=<span class="string">'mem'</span>),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/opt/MegaRAID/MegaCli/MegaCli64 -cfgdsply -aALL -NoLog'</span>), name=<span class="string">'hd'</span>)</span><br><span class="line">                    ]</span><br><span class="line">            )</span><br><span class="line">        play = Play().load(play_source, variable_manager=self.variable_manager, loader=self.loader)</span><br><span class="line">        tqm = <span class="literal">None</span></span><br><span class="line">        self.callback = ModelResultsCollector(sn=self.sn)</span><br><span class="line">        <span class="keyword">import</span> traceback</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            tqm = TaskQueueManager(</span><br><span class="line">                inventory=self.inventory,</span><br><span class="line">                variable_manager=self.variable_manager,</span><br><span class="line">                loader=self.loader,</span><br><span class="line">                options=self.options,</span><br><span class="line">                passwords=self.passwords,</span><br><span class="line">                stdout_callback = <span class="string">"minimal"</span>,</span><br><span class="line">            )</span><br><span class="line">            tqm._stdout_callback = self.callback</span><br><span class="line">            constants.HOST_KEY_CHECKING = <span class="literal">False</span> <span class="comment">#关闭第一次使用ansible连接客户端是输入命令</span></span><br><span class="line">            tqm.run(play)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            <span class="keyword">print</span> traceback.print_exc()</span><br><span class="line">            <span class="comment"># DsRedis.OpsAnsibleModel.lpush(self.redisKey,data=err)</span></span><br><span class="line">            <span class="comment"># if self.logId:AnsibleSaveResult.Model.insert(self.logId, err)</span></span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="keyword">if</span> tqm <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                tqm.cleanup()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_playbook</span><span class="params">(self, playbook_path,extra_vars=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        run ansible palybook</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># if self.redisKey:self.callback = PlayBookResultsCollectorToSave(self.redisKey,self.logId)</span></span><br><span class="line">            self.callback = PlayBookResultsCollector()</span><br><span class="line">            <span class="keyword">if</span> extra_vars:self.variable_manager.extra_vars = extra_vars</span><br><span class="line">            executor = PlaybookExecutor(</span><br><span class="line">                playbooks=[playbook_path], inventory=self.inventory, variable_manager=self.variable_manager, loader=self.loader,</span><br><span class="line">                options=self.options, passwords=self.passwords,</span><br><span class="line">            )</span><br><span class="line">            executor._tqm._stdout_callback = self.callback</span><br><span class="line">            constants.HOST_KEY_CHECKING = <span class="literal">False</span> <span class="comment">#关闭第一次使用ansible连接客户端是输入命令</span></span><br><span class="line">            executor.run()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_model_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.results_raw = &#123;<span class="string">'success'</span>:&#123;&#125;, <span class="string">'failed'</span>:&#123;&#125;, <span class="string">'unreachable'</span>:&#123;&#125;&#125;</span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_ok.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'success'</span>][hostvisiable] = result._result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_failed.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'failed'</span>][hostvisiable] = result._result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_unreachable.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'unreachable'</span>][hostvisiable]= result._result</span><br><span class="line"></span><br><span class="line">        <span class="comment"># return json.dumps(self.results_raw)</span></span><br><span class="line">        <span class="keyword">return</span> self.results_raw</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_playbook_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.results_raw = &#123;<span class="string">'skipped'</span>:&#123;&#125;, <span class="string">'failed'</span>:&#123;&#125;, <span class="string">'ok'</span>:&#123;&#125;,<span class="string">"status"</span>:&#123;&#125;,<span class="string">'unreachable'</span>:&#123;&#125;,<span class="string">"changed"</span>:&#123;&#125;&#125;</span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_ok.items():</span><br><span class="line">            self.results_raw[<span class="string">'ok'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_failed.items():</span><br><span class="line">            self.results_raw[<span class="string">'failed'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_status.items():</span><br><span class="line">            self.results_raw[<span class="string">'status'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="comment"># for host, result in self.callback.task_changed.items():</span></span><br><span class="line">        <span class="comment">#     self.results_raw['changed'][host] = result</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_skipped.items():</span><br><span class="line">            self.results_raw[<span class="string">'skipped'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_unreachable.items():</span><br><span class="line">            self.results_raw[<span class="string">'unreachable'</span>][host] = result</span><br><span class="line">        <span class="keyword">return</span> self.results_raw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># resource = [</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.8.119"&#125;,</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.6.43"&#125;,</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.1.233"&#125;,</span></span><br><span class="line">    <span class="comment">#  ]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># resource = &#123;</span></span><br><span class="line">    <span class="comment">#     "dynamic_host": &#123;</span></span><br><span class="line">    <span class="comment">#         "hosts": [</span></span><br><span class="line">    <span class="comment">#                     &#123;'username': u'root', 'password': '123456', 'ip': '192.168.1.108','hostname':'nginx01','port':'22'&#125;,</span></span><br><span class="line">    <span class="comment">#                     &#123;"hostname":"778da6afsdwf","ip": "192.168.1.109", "port": "22", "username": "root", "password":"123456"&#125;,</span></span><br><span class="line">    <span class="comment">#                   ],</span></span><br><span class="line">    <span class="comment">#         "vars": &#123;</span></span><br><span class="line">    <span class="comment">#                  "var1":"ansible",</span></span><br><span class="line">    <span class="comment">#                  "var2":"saltstack"</span></span><br><span class="line">    <span class="comment">#                  &#125;</span></span><br><span class="line">    <span class="comment">#     &#125;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">    resource = &#123;</span><br><span class="line">        <span class="string">'key_login'</span>: [<span class="string">'10.105.42.16'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    rbt = ANSRunner(resource)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ansible Adhoc</span></span><br><span class="line">    rbt.run_model(host_list=resource[<span class="string">'key_login'</span>], module_name=<span class="string">'setup'</span>)</span><br><span class="line">    data = rbt.get_model_result()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    <span class="comment"># Ansible playbook</span></span><br><span class="line">    <span class="comment"># rbt.run_playbook(playbook_path='/etc/ansible/playbook/OPUSE.yml')</span></span><br><span class="line">    <span class="comment"># print rbt.get_playbook_result()</span></span><br><span class="line">    <span class="comment"># rbt.run_model(host_list=[],module_name='yum',module_args="name=htop state=present")</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      资产管理系统
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>域账号后台管理</title>
    <link href="http://blog.laohulab.com/Django/3844096452.html"/>
    <id>http://blog.laohulab.com/Django/3844096452.html</id>
    <published>2019-04-29T06:45:00.000Z</published>
    <updated>2019-05-03T00:52:40.210Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1">开始之前</a></li><li class="tab"><a href="#-2">部署方式</a></li><li class="tab"><a href="#-3">注意事项</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><ul><li>主要用于用户、共享目录，邮箱组权限等日常管理</li><li>基于pyad模块(<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pha2lyZC9weWFk" title="https://github.com/zakird/pyad">https://github.com/zakird/pyad<i class="fa fa-external-link"></i></span>)</li><li>支持邮件通知及批量操作</li><li>LDAP登录(仅限CN Infrastructure Team &amp;&amp; CN Development Team登录后台,域账号登录)</li><li>后台地址：<span class="exturl" data-url="aHR0cDovL3h4Lnh4LmdlbmV3aXouY29tL2FkbWlu" title="http://xx.xx.genewiz.com/admin">http://xx.xx.genewiz.com/admin<i class="fa fa-external-link"></i></span></li></ul></div><div class="tab-pane" id="-2"><ul><li>部署于10.105.xx.xx,应用对AD Server进行操作！</li><li>Windows下的Apache无法通过daemon模式运行多个wsgi应用，故通过Django dev模式运行，通过Apache转发！(或者单独在另外一台Windows服务器单独部署)</li><li>\\GWNGFS\xx\Dev\AdminSet</li></ul></div><div class="tab-pane" id="-3"><ul><li>用户的全局管理未收敛至统一管理，为确保用户信息的准确性，对用户进行任何变更，请先更新用户信息！</li></ul></div></div></div><a id="more"></a><h5 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h5><div class="tabs" id="users"><ul class="nav-tabs"><li class="tab active"><a href="#users-1">更新账号信息</a></li><li class="tab"><a href="#users-2">更新组信息</a></li><li class="tab"><a href="#users-3">账号启用</a></li><li class="tab"><a href="#users-4">账号禁用</a></li><li class="tab"><a href="#users-5">账号禁用-离职</a></li><li class="tab"><a href="#users-6">账号解锁</a></li><li class="tab"><a href="#users-7">账号VPN启用</a></li><li class="tab"><a href="#users-8">账号VPN禁用</a></li><li class="tab"><a href="#users-9">账号密码重置</a></li><li class="tab"><a href="#users-10">账号密码重置【登录需要修改密码】</a></li></ul><div class="tab-content"><div class="tab-pane active" id="users-1"><p><strong>初次添加 </strong><br><img src="/images/pasted-277.png" alt="upload successful"><br><img src="/images/pasted-251.png" alt="upload successful"></p><div class="note success"><p>点击保存按钮后，将会自动更新用户及用户属组信息！</p></div><p><strong>已存在</strong><br><img src="/images/pasted-278.png" alt="upload successful"></p><div class="note success"><p>如果账号已添加过，可以勾选用户，更新用户最新的用户信息，支持批量！</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_user</span><span class="params">(self, user)</span>:</span></span><br><span class="line">    <span class="string">“””更新用户信息”””</span></span><br><span class="line">    dn = adsearch.by_san(user)</span><br><span class="line">    user_from_ad = aduser.ADUser.from_dn(dn)</span><br><span class="line">    guid = user_from_ad.guid_str</span><br><span class="line">    sid = str(user_from_ad.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">    san = user_from_ad.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">    <span class="string">“””if user has not email,will take AttributeError”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        email = user_from_ad.get_attribute(<span class="string">‘mail’</span>, <span class="literal">False</span>).lower()</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        email = <span class="literal">None</span></span><br><span class="line">    create_time = parse(user_from_ad.get_attribute(<span class="string">‘whenCreated’</span>,<span class="literal">False</span>).Format())</span><br><span class="line">    <span class="string">“”” if user never modify password,will take ValueError!”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pwd_last_set_time = user_from_ad.get_password_last_set()</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        pwd_last_set_time = <span class="literal">None</span></span><br><span class="line">    <span class="string">“”” if user never login,will take AttributeError”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        last_login_time = user_from_ad.get_last_login()</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        last_login_time = <span class="literal">None</span></span><br><span class="line">    uac = user_from_ad.get_user_account_control_settings()</span><br><span class="line">    is_enabled = <span class="keyword">not</span> uac[<span class="string">‘ACCOUNTDISABLE’</span>]</span><br><span class="line">    is_locked_out = uac[<span class="string">‘LOCKOUT’</span>]</span><br><span class="line">    is_dial_in = user_from_ad.get_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> is_dial_in <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        is_dial_in = <span class="literal">False</span></span><br><span class="line">    userobj, status = UserProfile.objects.get_or_create(username=user)</span><br><span class="line">    userobj.dn = dn</span><br><span class="line">    userobj.guid = guid</span><br><span class="line">    userobj.sid = sid</span><br><span class="line">    userobj.san = san</span><br><span class="line">    userobj.email = email</span><br><span class="line">    userobj.pwd_last_set_time = pwd_last_set_time</span><br><span class="line">    userobj.create_time = create_time</span><br><span class="line">    userobj.last_login_time = last_login_time</span><br><span class="line">    userobj.is_enabled = is_enabled</span><br><span class="line">    userobj.is_locked_out = is_locked_out</span><br><span class="line">    userobj.is_dial_in = is_dial_in</span><br><span class="line">    userobj.save()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        groups = user_from_ad.get_memberOfs()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    groups_from_ad = []</span><br><span class="line">    groups_from_db = []</span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> groups:</span><br><span class="line">        san = group.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">        guid = group.guid_str</span><br><span class="line">        sid = str(group.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">        gc = group.get_group_type()</span><br><span class="line">        gs = group.get_group_scope()</span><br><span class="line">        dn = group.dn</span><br><span class="line">        create_time = parse(group.get_attribute(<span class="string">‘whenCreated’</span>, <span class="literal">False</span>).Format())</span><br><span class="line">        groupobj, status = GroupProfile.objects.get_or_create(san=san)</span><br><span class="line">        groupobj.san = san</span><br><span class="line">        groupobj.guid = guid</span><br><span class="line">        groupobj.sid = sid</span><br><span class="line">        groupobj.gc = gc</span><br><span class="line">        groupobj.gs = gs</span><br><span class="line">        groupobj.dn = dn</span><br><span class="line">        groupobj.create_time = create_time</span><br><span class="line">        groupobj.save()</span><br><span class="line">        groups_from_ad.append(san)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> userobj.groups_of.all():</span><br><span class="line">        san = group.san</span><br><span class="line">        groups_from_db.append(san)</span><br><span class="line"> </span><br><span class="line">    intersection = set(groups_from_ad) &amp; set(groups_from_db)</span><br><span class="line">    <span class="keyword">if</span> intersection:</span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> list(set(groups_from_db) - intersection):</span><br><span class="line">            userobj.groups_of.remove(GroupProfile.objects.get(san=group))</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> list(set(groups_from_ad) - intersection):</span><br><span class="line">            userobj.groups_of.add(GroupProfile.objects.get(san=group))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        userobj.groups_of.clear()</span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> groups_from_ad:</span><br><span class="line">            userobj.groups_of.add(GroupProfile.objects.get(san=group))</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-2"><p><strong>初次添加</strong><br><!--![upload successful](/images/pasted-253.png) --><br><img src="/images/pasted-279.png" alt="upload successful"></p><p><img src="/images/pasted-254.png" alt="upload successful"></p><div class="note success"><p>点击保存按钮后，将会自动更新用户及用户属组信息！</p></div><p><strong>已存在</strong><br><!-- ![upload successful](/images/pasted-255.png) --><br><img src="/images/pasted-280.png" alt="upload successful"></p><div class="note success"><p>如果账号已添加过，可以勾选用户，更新用户最新的用户信息，支持批量！</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_group</span><span class="params">(self, group)</span>:</span></span><br><span class="line">    <span class="string">“””更新组信息”””</span></span><br><span class="line">    dn = adsearch.by_san(group)</span><br><span class="line">    group_from_ad = adgroup.ADGroup.from_dn(dn)</span><br><span class="line">    san = group_from_ad.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">    guid = group_from_ad.guid_str</span><br><span class="line">    sid = str(group_from_ad.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">    gc = group_from_ad.get_group_type()</span><br><span class="line">    gs = group_from_ad.get_group_scope()</span><br><span class="line">    dn = group_from_ad.dn</span><br><span class="line">    create_time = parse(group_from_ad.get_attribute(<span class="string">‘whenCreated’</span>, <span class="literal">False</span>).Format())</span><br><span class="line">    groupobj, status = GroupProfile.objects.get_or_create(san=group)</span><br><span class="line">    groupobj.san = san</span><br><span class="line">    groupobj.guid = guid</span><br><span class="line">    groupobj.sid = sid</span><br><span class="line">    groupobj.gc = gc</span><br><span class="line">    groupobj.gs = gs</span><br><span class="line">    groupobj.dn = dn</span><br><span class="line">    groupobj.create_time = create_time</span><br><span class="line">    groupobj.save()</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-3"><!-- ![upload successful](/images/pasted-256.png) --><p><img src="/images/pasted-283.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enabled_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””启用用户”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘enabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘enabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.enable()</span><br><span class="line">            res[<span class="string">‘enabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘enabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-4"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””禁用用户”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.disable()</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-5"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_user_lizhi</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””禁用用户-离职”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        ou = adcontainer.ADContainer.from_dn(<span class="string">“OU=China,OU=DisabledAccounts,DC=local,DC=genewiz,DC=com”</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.disable()</span><br><span class="line">            <span class="string">“””</span></span><br><span class="line"><span class="string">            move操作，需要全局AD控制器，需要使用苏州域控制器</span></span><br><span class="line"><span class="string">            pyad.set_defaults(ldap_server=”10.105.21.20”, username=”jianhu.yong”, password=”xxx”)                </span></span><br><span class="line"><span class="string">            “””</span></span><br><span class="line">            user_from_ad.move(ou)</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-6"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unlock_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 解锁用户</span></span><br><span class="line"><span class="string">        lockoutTime: 0</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘unlock_success’</span>: [],</span><br><span class="line">        <span class="string">‘unlock_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘lockoutTime’</span>, <span class="number">0</span>)</span><br><span class="line">            res[<span class="string">‘unlock_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘unlock_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-7"><p><img src="/images/pasted-284.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-257.png) --></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enabled_vpn</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 启用VPN</span></span><br><span class="line"><span class="string">    Enabled: True</span></span><br><span class="line"><span class="string">    Disabled: False</span></span><br><span class="line"><span class="string">    Not Set: None</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘enabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘enabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">True</span>)</span><br><span class="line">            res[<span class="string">‘enabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘enabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-8"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_vpn</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 禁用VPN</span></span><br><span class="line"><span class="string">    Enabled: True</span></span><br><span class="line"><span class="string">    Disabled: False</span></span><br><span class="line"><span class="string">    Not Set: None</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">False</span>)</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-9"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_password</span><span class="params">(self, obj_list, init_pwd)</span>:</span></span><br><span class="line">    <span class="string">“”” </span></span><br><span class="line"><span class="string">    重置用户密码</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘reset_success’</span>: [],</span><br><span class="line">        <span class="string">‘reset_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.set_password(init_pwd)</span><br><span class="line">            res[<span class="string">‘reset_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘reset_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-10"><p><img src="/images/pasted-285.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-258.png) --></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_password_login_modify</span><span class="params">(self, obj_list, init_pwd)</span>:</span></span><br><span class="line">    <span class="string">“”” </span></span><br><span class="line"><span class="string">    重置用户密码,如果用户密码设置了永不过期，登录修改密码将不会生效!</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘reset_success’</span>: [],</span><br><span class="line">        <span class="string">‘reset_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.set_password(init_pwd)</span><br><span class="line">            user_from_ad.force_pwd_change_on_login()</span><br><span class="line">            res[<span class="string">‘reset_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘reset_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></div></div><h5 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h5><div class="tabs" id="auth"><ul class="nav-tabs"><li class="tab active"><a href="#auth-1">共享目录权限</a></li><li class="tab"><a href="#auth-2">邮箱组权限</a></li></ul><div class="tab-content"><div class="tab-pane active" id="auth-1"><div class="note success"><p>分别新增共享目录（二级目录）只读及读写的信息！</p></div><p><img src="/images/pasted-286.png" alt="upload successful"><br><img src="/images/pasted-287.png" alt="upload successful"><br><img src="/images/pasted-288.png" alt="upload successful"><br><img src="/images/pasted-289.png" alt="upload successful"><br><img src="/images/pasted-290.png" alt="upload successful"></p><!--![upload successful](/images/pasted-259.png)![upload successful](/images/pasted-260.png)![upload successful](/images/pasted-263.png)![upload successful](/images/pasted-261.png)![upload successful](/images/pasted-262.png)--><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_members_to_smb</span><span class="params">(self, dn, smb_folders)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_added’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> smb_folder <span class="keyword">in</span> smb_folders:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(smb_folder.group.dn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.add_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(smb_folder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_added’</span>].append(smb_folder)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_members_from_smb</span><span class="params">(self, dn, smb_folders)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_deleted’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> smb_folder <span class="keyword">in</span> smb_folders:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(smb_folder.group.dn)</span><br><span class="line">        <span class="keyword">if</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.remove_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(smb_folder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_deleted’</span>].append(smb_folder)</span><br><span class="line">    <span class="keyword">return</span> res  </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="auth-2"><p><img src="/images/pasted-291.png" alt="upload successful"><br><img src="/images/pasted-292.png" alt="upload successful"></p><!--![upload successful](/images/pasted-264.png)![upload successful](/images/pasted-265.png)--><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_members_to_eg</span><span class="params">(self, dn, enabled_egs)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_added’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> enabled_eg <span class="keyword">in</span> enabled_egs:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(enabled_eg.dn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.add_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(enabled_eg)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_added’</span>].append(enabled_eg)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_members_from_eg</span><span class="params">(self, dn, disabled_egs)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_deleted’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> disabled_eg <span class="keyword">in</span> disabled_egs:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(disabled_eg.dn)</span><br><span class="line">        <span class="keyword">if</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.remove_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(disabled_eg)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_deleted’</span>].append(disabled_eg)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></div></div><h5 id="通讯录管理"><a href="#通讯录管理" class="headerlink" title="通讯录管理"></a>通讯录管理</h5><div class="tabs" id="contact"><ul class="nav-tabs"><li class="tab active"><a href="#contact-1">通讯录</a></li></ul><div class="tab-content"><div class="tab-pane active" id="contact-1"><p><img src="/images/pasted-293.png" alt="upload successful"><br><img src="/images/pasted-267.png" alt="upload successful"><br><!--![upload successful](/images/pasted-266.png)--></p></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;tabs&quot; id&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;a href=&quot;#-1&quot;&gt;开始之前&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#-2&quot;&gt;部署方式&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#-3&quot;&gt;注意事项&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-content&quot;&gt;&lt;div class=&quot;tab-pane active&quot; id=&quot;-1&quot;&gt;&lt;ul&gt;
&lt;li&gt;主要用于用户、共享目录，邮箱组权限等日常管理&lt;/li&gt;
&lt;li&gt;基于pyad模块(&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL3pha2lyZC9weWFk&quot; title=&quot;https://github.com/zakird/pyad&quot;&gt;https://github.com/zakird/pyad&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;支持邮件通知及批量操作&lt;/li&gt;
&lt;li&gt;LDAP登录(仅限CN Infrastructure Team &amp;amp;&amp;amp; CN Development Team登录后台,域账号登录)&lt;/li&gt;
&lt;li&gt;后台地址：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3h4Lnh4LmdlbmV3aXouY29tL2FkbWlu&quot; title=&quot;http://xx.xx.genewiz.com/admin&quot;&gt;http://xx.xx.genewiz.com/admin&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;-2&quot;&gt;&lt;ul&gt;
&lt;li&gt;部署于10.105.xx.xx,应用对AD Server进行操作！&lt;/li&gt;
&lt;li&gt;Windows下的Apache无法通过daemon模式运行多个wsgi应用，故通过Django dev模式运行，通过Apache转发！(或者单独在另外一台Windows服务器单独部署)&lt;/li&gt;
&lt;li&gt;\\GWNGFS\xx\Dev\AdminSet&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;-3&quot;&gt;&lt;ul&gt;
&lt;li&gt;用户的全局管理未收敛至统一管理，为确保用户信息的准确性，对用户进行任何变更，请先更新用户信息！&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://blog.laohulab.com/tags/Django/"/>
    
      <category term="Python" scheme="http://blog.laohulab.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>实验室上机CODE自动化</title>
    <link href="http://blog.laohulab.com/uncategorized/4043802563.html"/>
    <id>http://blog.laohulab.com/uncategorized/4043802563.html</id>
    <published>2019-04-29T04:51:00.000Z</published>
    <updated>2019-05-03T00:56:34.936Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>官方仅提供code脚本，需要ssh至集群登陆节点，执行该code脚本，来生成上机code,对于实验室人员操作，不是很方便！</p><p><img src="/images/pasted-247.png" alt="upload successful"></p><a id="more"></a><h5 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h5><p><img src="/images/pasted-248.png" alt="upload successful"><br><img src="/images/pasted-295.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-249.png) --></p><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.views.generic.base <span class="keyword">import</span> View</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Company, Level, DataPath, DistributePath, Owner, Group, Device, ProjectInfo</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> RegisterForm</span><br><span class="line"><span class="keyword">from</span> utils.GenerateNumber <span class="keyword">import</span> gene_random_number</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> utils.ansible_api_adhoc <span class="keyword">import</span> ANSRunner</span><br><span class="line"><span class="keyword">from</span> utils.email_send <span class="keyword">import</span> SendMail</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LabIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        all_companys = Company.objects.exclude(name=<span class="string">'root'</span>)</span><br><span class="line">        all_levels = Level.objects.all()</span><br><span class="line">        all_data_paths = DataPath.objects.all()</span><br><span class="line">        all_distribute_paths = DistributePath.objects.all()</span><br><span class="line">        all_owners = Owner.objects.all()</span><br><span class="line">        all_groups = Group.objects.all()</span><br><span class="line">        all_devices = Device.objects.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"lab-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            <span class="string">'all_companys'</span>: all_companys,</span><br><span class="line">            <span class="string">'all_levels'</span>: all_levels,</span><br><span class="line">            <span class="string">'all_data_paths'</span>: all_data_paths,</span><br><span class="line">            <span class="string">'all_distribute_paths'</span>: all_distribute_paths,</span><br><span class="line">            <span class="string">'all_owners'</span>: all_owners,</span><br><span class="line">            <span class="string">'all_groups'</span>: all_groups,</span><br><span class="line">            <span class="string">'all_devices'</span>: all_devices</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        register_form = RegisterForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">            <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">                ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">            company = request.POST.get(<span class="string">'company'</span>, <span class="string">''</span>)</span><br><span class="line">            level = request.POST.get(<span class="string">'level'</span>, <span class="string">''</span>)</span><br><span class="line">            data_path = request.POST.get(<span class="string">'data_path'</span>, <span class="string">''</span>)</span><br><span class="line">            distribute_path = request.POST.get(<span class="string">'distribute_path'</span>, <span class="string">''</span>)</span><br><span class="line">            owner = request.POST.get(<span class="string">'owner'</span>, <span class="string">''</span>)</span><br><span class="line">            group = request.POST.get(<span class="string">'group'</span>, <span class="string">''</span>)</span><br><span class="line">            device = request.POST.get(<span class="string">'device'</span>, <span class="string">''</span>)</span><br><span class="line">            code = gene_random_number()</span><br><span class="line"></span><br><span class="line">            info_join = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> code, company, level, distribute_path, owner, group, device, data_path:</span><br><span class="line">                info_join.append(i)</span><br><span class="line">            info_join = <span class="string">','</span>.join(info_join)</span><br><span class="line">            <span class="comment"># /YZGROUP/read/read.txt</span></span><br><span class="line">            job = ANSRunner()</span><br><span class="line">            job.run_model(host_list=<span class="string">'20.0.0.10'</span>, module_name=<span class="string">'shell'</span>,</span><br><span class="line">                          module_args=<span class="string">'echo &#123;0&#125; &gt;&gt; /YZGROUP/read/.&#123;1&#125;.sortlog'</span>.format(info_join, code))</span><br><span class="line">            res = job.get_model_result()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'company'</span>: company,</span><br><span class="line">                    <span class="string">'level'</span>: level,</span><br><span class="line">                    <span class="string">'data_path'</span>: data_path,</span><br><span class="line">                    <span class="string">'distribute_path'</span>: distribute_path,</span><br><span class="line">                    <span class="string">'owner'</span>: owner,</span><br><span class="line">                    <span class="string">'group'</span>: group,</span><br><span class="line">                    <span class="string">'device'</span>: device,</span><br><span class="line">                    <span class="string">'code'</span>: code,</span><br><span class="line">                    <span class="string">'email'</span>: [<span class="string">'sen.guo@genewiz.com.cn'</span>,<span class="string">'fang.xiao@genewiz.com.cn'</span>,<span class="string">'ruikai.jia@genewiz.com.cn'</span>,<span class="string">'jianhu.yong@genewiz.com.cn'</span>],</span><br><span class="line">                    <span class="comment">#'email': ['zongliang.guo@geneseeq.com', '453576956@qq.com'],</span></span><br><span class="line">                    <span class="string">'ip'</span>: ip,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'lab_code'</span>):</span><br><span class="line">                    ProjectInfo.objects.create(</span><br><span class="line">                        number=code,</span><br><span class="line">                        company=Company.objects.get(name=company),</span><br><span class="line">                        level=Level.objects.get(name=level),</span><br><span class="line">                        distribute_path=DistributePath.objects.get(path=distribute_path),</span><br><span class="line">                        owner=Owner.objects.get(name=owner),</span><br><span class="line">                        group=Group.objects.get(name=group),</span><br><span class="line">                        device=Device.objects.get(type=device),</span><br><span class="line">                        data_path=DataPath.objects.get(path=data_path)</span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'lab-success.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                        <span class="string">'company'</span>: company,</span><br><span class="line">                        <span class="string">'level'</span>: level,</span><br><span class="line">                        <span class="string">'data_path'</span>: data_path,</span><br><span class="line">                        <span class="string">'distribute_path'</span>: distribute_path,</span><br><span class="line">                        <span class="string">'owner'</span>: owner,</span><br><span class="line">                        <span class="string">'group'</span>: group,</span><br><span class="line">                        <span class="string">'device'</span>: device,</span><br><span class="line">                        <span class="string">'code'</span>: code,</span><br><span class="line">                        <span class="string">'ip'</span>: ip,</span><br><span class="line">                        <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(register_form.errors, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h5&gt;&lt;p&gt;官方仅提供code脚本，需要ssh至集群登陆节点，执行该code脚本，来生成上机code,对于实验室人员操作，不是很方便！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-247.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>集群HTTP代理</title>
    <link href="http://blog.laohulab.com/Django/776286004.html"/>
    <id>http://blog.laohulab.com/Django/776286004.html</id>
    <published>2019-04-29T04:07:00.000Z</published>
    <updated>2019-05-03T00:57:35.387Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>目前扬子科创集群均无法访问互联网，在未联网的情况下，软件安装，维护效率低下，为了解决该问题，将部署二级代理!</p><p>登录节点明细</p><table><thead><tr><th>HOSTNAME</th><th>IP</th></tr></thead><tbody><tr><td>njlogin01.yzgroup.local</td><td>20.0.0.10/192.168.89.214</td></tr><tr><td>njgate01.yzgroup.local</td><td>192.168.89.212</td></tr></tbody></table><a id="more"></a><h5 id="扬子科创集群网段"><a href="#扬子科创集群网段" class="headerlink" title="扬子科创集群网段"></a>扬子科创集群网段</h5><p>经检查，集群计算机点网段分布如下：</p><p>192.168.88.0/23<br>10.2.150.0/23</p><h5 id="gost软件介绍"><a href="#gost软件介绍" class="headerlink" title="gost软件介绍"></a>gost软件介绍</h5><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpbnVlcnpoLnh5ei9nb3N0L2dldHRpbmctc3RhcnRlZC8=" title="https://docs.ginuerzh.xyz/gost/getting-started/">https://docs.ginuerzh.xyz/gost/getting-started/<i class="fa fa-external-link"></i></span></p><h5 id="代理部署架构"><a href="#代理部署架构" class="headerlink" title="代理部署架构"></a>代理部署架构</h5><p><img src="/images/pasted-239.png" alt="upload successful"><br><img src="/images/pasted-240.png" alt="upload successful"><br><img src="/images/pasted-244.png" alt="upload successful"><br><img src="/images/pasted-243.png" alt="upload successful"></p><p>查看详情<br><img src="/images/pasted-245.png" alt="upload successful"></p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 终端下临时配置代理</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=http://192.168.89.214:8090</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.89.214:8090</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消设置</span></span><br><span class="line"><span class="built_in">unset</span> http_proxy</span><br><span class="line"><span class="built_in">unset</span> https_proxy</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 写入配置文件，永久生效</span></span><br><span class="line">cat &lt;&lt; EOF &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://192.168.89.214:8090</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.89.214:8090</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="Ansible-Hosts"><a href="#Ansible-Hosts" class="headerlink" title="Ansible Hosts"></a>Ansible Hosts</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[proxy-jumpbox]</span><br><span class="line">10.105.42.23 ansible_ssh_user=jianhu.yong ansible_ssh_private_key_file=<span class="string">'/opt/keys/id_rsa_2048_jianhu.yong'</span> ansible_become=<span class="literal">true</span> ansible_become_user=root ansible_become_method=sudo</span><br><span class="line"></span><br><span class="line">[proxy-yzkc]</span><br><span class="line">20.0.0.10 ansible_ssh_user=genewiznj ansible_ssh_private_key_file=<span class="string">'/opt/keys/id_rsa_genewiznj'</span>  ansible_remote_tmp=<span class="string">'/tmp/.ansible/tmp'</span></span><br></pre></td></tr></table></figure><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        proxy_ip = [<span class="string">'10.105.42.23'</span>,<span class="string">'20.0.0.10'</span>]</span><br><span class="line">        proxy_status = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> ip <span class="keyword">in</span> proxy_ip:</span><br><span class="line">            job = ANSRunner()</span><br><span class="line">            job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                          module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">            res = job.get_model_result()</span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                proxy_status[ip] = <span class="string">'Running'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                proxy_status[ip] = <span class="string">'Stopped'</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"proxy-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            <span class="string">'level1'</span>: proxy_status[<span class="string">'10.105.42.23'</span>],</span><br><span class="line">            <span class="string">'level2'</span>: proxy_status[<span class="string">'20.0.0.10'</span>]</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        proxy_ip = request.POST.get(<span class="string">'proxy_ip'</span>,<span class="string">''</span>)</span><br><span class="line">        action = request.POST.get(<span class="string">'action'</span>,<span class="string">''</span>)</span><br><span class="line">        level = int(request.POST.get(<span class="string">'level'</span>, <span class="string">''</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> level == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> action == <span class="string">'start'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务器已运行，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务启动成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'stop'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务停止成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务已停止，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'restart'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9 &amp;&amp; cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'curl -I -x &#123;0&#125;:8090 http://www.baidu.com'</span>.format(proxy_ip))</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-success'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试成功！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-failer'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试失败！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">elif</span> level == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> action == <span class="string">'start'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务器已运行，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务启动成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'stop'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务停止成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务已停止，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'restart'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9 &amp;&amp; cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'curl -I -x &#123;0&#125;:8090 http://www.baidu.com'</span>.format(proxy_ip))</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-success'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试成功！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-failer'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试失败！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyStatusView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        proxy_ip = request.GET.get(<span class="string">'proxy_ip'</span>,<span class="string">''</span>)</span><br><span class="line">        job = ANSRunner()</span><br><span class="line">        job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">        res = job.get_model_result()</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// initHighlightingOnLoad</span></span><br><span class="line">        $(<span class="string">'pre code'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i, block</span>) </span>&#123;</span><br><span class="line">            $(<span class="keyword">this</span>).parent().addClass(<span class="string">'hljs'</span>)</span><br><span class="line">            hljs.highlightBlock(block);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">proxy</span>(<span class="params">current_elem, proxy_ip, action,level</span>)</span>&#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                type: <span class="string">"POST"</span>,</span><br><span class="line">                url:<span class="string">"&#123;% url 'proxy:proxy_index' %&#125;"</span>,</span><br><span class="line">                data:&#123;<span class="string">'proxy_ip'</span>:proxy_ip,<span class="string">'action'</span>:action,<span class="string">'level'</span>:level&#125;,</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                beforeSend:<span class="function"><span class="keyword">function</span>(<span class="params">xhr, settings</span>)</span>&#123;</span><br><span class="line">                    xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, <span class="string">"&#123;&#123; csrf_token &#125;&#125;"</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(data.status === <span class="string">'Has Running'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Running'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">console</span>.log(current_elem.parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(5)'</span>).children(<span class="string">'span'</span>).text(<span class="string">'Running'</span>).removeClass().addClass(<span class="string">'label label-success'</span>))</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Has Stopped'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Stopped'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">console</span>.log(current_elem.parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(5)'</span>).children(<span class="string">'span'</span>).text(<span class="string">'Stopped'</span>).removeClass().addClass(<span class="string">'label label-danger'</span>))</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Restarted'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">window</span>.location.reload()</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'curl-success'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status ===<span class="string">'curl-failer'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动一级代理服务</span></span><br><span class="line">        $(<span class="string">'.start-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'start'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止一级代理服务</span></span><br><span class="line">        $(<span class="string">'.stop-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">'正在停止代理服务,请稍候!'</span>, &#123;<span class="attr">icon</span>: <span class="number">6</span>&#125;);</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'stop'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重启一级代理服务</span></span><br><span class="line">        $(<span class="string">'.restart-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'restart'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试一级代理服务</span></span><br><span class="line">        $(<span class="string">'.test-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'test'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动二级代理服务</span></span><br><span class="line">        $(<span class="string">'.start-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'start'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止二级代理服务</span></span><br><span class="line">        $(<span class="string">'.stop-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">'正在停止代理服务,请稍候!'</span>, &#123;<span class="attr">icon</span>: <span class="number">6</span>&#125;);</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'stop'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重启二级代理服务</span></span><br><span class="line">        $(<span class="string">'.restart-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'restart'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试二级代理服务</span></span><br><span class="line">        $(<span class="string">'.test-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'test'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h5&gt;&lt;p&gt;目前扬子科创集群均无法访问互联网，在未联网的情况下，软件安装，维护效率低下，为了解决该问题，将部署二级代理!&lt;/p&gt;
&lt;p&gt;登录节点明细&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;HOSTNAME&lt;/th&gt;
&lt;th&gt;IP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;njlogin01.yzgroup.local&lt;/td&gt;
&lt;td&gt;20.0.0.10/192.168.89.214&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;njgate01.yzgroup.local&lt;/td&gt;
&lt;td&gt;192.168.89.212&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://blog.laohulab.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>内网邮件API服务部署</title>
    <link href="http://blog.laohulab.com/uncategorized/3811181486.html"/>
    <id>http://blog.laohulab.com/uncategorized/3811181486.html</id>
    <published>2019-04-29T03:05:27.000Z</published>
    <updated>2019-05-03T01:11:48.646Z</updated>
    
    <content type="html"><![CDATA[<h5 id="开源MailServer"><a href="#开源MailServer" class="headerlink" title="开源MailServer"></a>开源MailServer</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rvd25sb2Fk" title="https://www.hmailserver.com/download">https://www.hmailserver.com/download<i class="fa fa-external-link"></i></span> (for windows)<br><span class="exturl" data-url="aHR0cHM6Ly9tb2RvYm9hLm9yZy9lbi8=" title="https://modoboa.org/en/">https://modoboa.org/en/<i class="fa fa-external-link"></i></span> (基于Django Bootstrap Jquery for Linux)</p><p>本次部署hmailserver服务！</p><h5 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h5><ul><li>Windows Server 2012 R2 X64</li><li>Mysql 5.7 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv" title="https://dev.mysql.com/downloads/installer/">https://dev.mysql.com/downloads/installer/<i class="fa fa-external-link"></i></span></li><li>Apache2.4 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=" title="https://www.apachehaus.com/cgi-bin/download.plx">https://www.apachehaus.com/cgi-bin/download.plx<i class="fa fa-external-link"></i></span></li><li>hMailServer-5.6.7-B2425 <span class="exturl" data-url="aHR0cHM6Ly9jZG4ubXlzcWwuY29tLy9Eb3dubG9hZHMvTXlTUUxJbnN0YWxsZXIvbXlzcWwtaW5zdGFsbGVyLXdlYi1jb21tdW5pdHktOC4wLjEyLjAubXNp" title="https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi">https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi<i class="fa fa-external-link"></i></span></li><li>PHP 7.1 <span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWRzL3JlbGVhc2VzL3BocC03LjEuMjItV2luMzItVkMxNC14NjQuemlw" title="https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip">https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip<i class="fa fa-external-link"></i></span></li><li>MS VC14</li><li>libmysql</li></ul><a id="more"></a><h5 id="安装包准备"><a href="#安装包准备" class="headerlink" title="安装包准备"></a>安装包准备</h5><ul><li>Apache httpd-2.4.34-o102o-x64-vc14.zip</li><li>MS VC14 vc_redist.x64.rar</li><li>hmailserver hmailserver-5.6.7-b2425.rar</li><li>php php-7.1.22-win32-vc14-x64.zip</li><li>Webmail webmail-lite-php-8.zip</li><li>libmysql libmysql.zip</li><li>\\xx\xx\SoftWare\开发工具\Windows平台\mysql-installer-community-5.7.17.0.msi</li></ul><h5 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h5><p><img src="/images/pasted-205.png" alt="upload successful"></p><h5 id="安装Net3"><a href="#安装Net3" class="headerlink" title="安装Net3"></a>安装Net3</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;dism.exe /online /<span class="built_in">enable</span>-feature /all  /featurename:netfx3 /Source:D:\sources\sxs</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-206.png" alt="upload successful"></p><h5 id="安装Hmailserver"><a href="#安装Hmailserver" class="headerlink" title="安装Hmailserver"></a>安装Hmailserver</h5><p><img src="/images/pasted-207.png" alt="upload successful"><br><img src="/images/pasted-208.png" alt="upload successful"><br><img src="/images/pasted-209.png" alt="upload successful"><br><img src="/images/pasted-210.png" alt="upload successful"><br><img src="/images/pasted-211.png" alt="upload successful"><br><img src="/images/pasted-212.png" alt="upload successful"><br><img src="/images/pasted-213.png" alt="upload successful"><br><img src="/images/pasted-214.png" alt="upload successful"><br><img src="/images/pasted-215.png" alt="upload successful"><br><img src="/images/pasted-216.png" alt="upload successful"><br><img src="/images/pasted-217.png" alt="upload successful"><br><img src="/images/pasted-296.png" alt="upload successful"><br><img src="/images/pasted-219.png" alt="upload successful"><br><img src="/images/pasted-220.png" alt="upload successful"><br><img src="/images/pasted-221.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-218.png) --></p><p>上传 libmysql.dll 32bit至如下目录C:\Program Files (x86)\hMailServer\Bin</p><p><img src="/images/pasted-222.png" alt="upload successful"></p><p><img src="/images/pasted-223.png" alt="upload successful"></p><p><img src="/images/pasted-224.png" alt="upload successful"></p><h5 id="安装中文包"><a href="#安装中文包" class="headerlink" title="安装中文包"></a>安装中文包</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rldm5ldC90cmFuc2xhdGlvbl9nZXRsYW5ndWFnZS5waHA/bGFuZ3VhZ2U9Y2hpbmVzZQ==" title="https://www.hmailserver.com/devnet/translation_getlanguage.php?language=chinese">https://www.hmailserver.com/devnet/translation_getlanguage.php?language=chinese<i class="fa fa-external-link"></i></span> zh-hans.rar</p><p>C:\Program Files (x86)\hMailServer\Bin\hMailServer.INI</p><p>重启hmail服务，生效</p><p><img src="/images/pasted-225.png" alt="upload successful"></p><p><img src="/images/pasted-226.png" alt="upload successful"></p><p><img src="/images/pasted-227.png" alt="upload successful"></p><h5 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h5><p>将下载的zip文件解压到指定目录(D:\soft\apache24)</p><p><img src="/images/pasted-228.png" alt="upload successful"></p><p>修改ServerRoot<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Define SRVROOT <span class="string">"D:/Apache24"</span></span><br><span class="line">ServerRoot <span class="string">"<span class="variable">$&#123;SRVROOT&#125;</span>"</span></span><br></pre></td></tr></table></figure></p><p>修改DocumentRoot<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DocumentRoot <span class="string">"D:/Apache24/htdocs"</span></span><br></pre></td></tr></table></figure></p><p>安装Apache<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\soft\apache24\bin</span><br><span class="line">httpd.exe -k install</span><br><span class="line">The <span class="string">"Apache2.4"</span> is successfuly installed .</span><br><span class="line">Testing httpd.conf</span><br><span class="line">Error: reported here must be corrected before the service can be started.</span><br></pre></td></tr></table></figure></p><p>启动Apache服务<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\soft\apache24\bin</span><br><span class="line">net start Apache2.4</span><br><span class="line">Apache2.4 服务正在启动...</span><br><span class="line">Apache2.4 服务启动成功。</span><br></pre></td></tr></table></figure></p><h5 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h5><p>将下载的zip文件解压到指定目录(D:\soft\php-7.1.22)</p><p><img src="/images/pasted-229.png" alt="upload successful"></p><p>配置httpd.conf,添加PHP模块</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LoadModule php7_module <span class="string">"D:/soft/php-7.1.22/php7apache2_4.dll"</span></span><br></pre></td></tr></table></figure><p>添加扩展名<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .php</span><br><span class="line">AddType application/x-httpd-php-source .phps</span><br></pre></td></tr></table></figure></p><p>指定php.ini配置文件路径<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PHPIniDir <span class="string">"D:/soft/php-7.1.22"</span></span><br></pre></td></tr></table></figure></p><p>配置php.ini.将php安装目录下的php.ini-production改名为php.ini</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定EXT目录，相对目录会出错！</span></span><br><span class="line">extension_dir = <span class="string">"D:/soft/php-7.1.22/ext"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 开启常用的php扩展</span></span><br><span class="line">extension=php_mbstring.dll（php多字节字符串扩展）</span><br><span class="line">extension=php_curl.dll(webmail依赖)</span><br><span class="line">extension=php_mbstring.dll</span><br><span class="line">extension=php_mysqli.dll（mysqli库扩展）</span><br><span class="line">extension=php_openssl.dll</span><br><span class="line">extension=php_pdo_mysql.dll(webmail依赖)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 开启COM组件</span></span><br><span class="line">com.allow_dcom = <span class="literal">true</span></span><br><span class="line">extension=php_com_dotnet.dll</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置默认时区</span></span><br><span class="line">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure><p>测试PHP,将如下代码放置网站/目录测试<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-230.png" alt="upload successful"></p><p><img src="/images/pasted-231.png" alt="upload successful"></p><div class="note danger">            <font color="red"><br>Call to undefined function curl_init()错误<br>将php.ini中的;extension=php_curl.dll的注释去掉后，重启apache后仍然报Call to undefined function curl_init()的错误，只php安装目录下的libssh2.dll复制到apache的bin目录，并重新启动apache。<br></font><ul><li><span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWQjcGhwLTcuMg==" title="https://windows.php.net/download#php-7.2">https://windows.php.net/download#php-7.2<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC85ZDVjM2E4MWM3ZWY=" title="https://www.jianshu.com/p/9d5c3a81c7ef">https://www.jianshu.com/p/9d5c3a81c7ef<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82MzE5NWZmOTIwNjI=" title="https://www.jianshu.com/p/63195ff92062">https://www.jianshu.com/p/63195ff92062<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9kYW5pZWxhcmFuY2liaWEud29yZHByZXNzLmNvbS8yMDE1LzA5LzI3L2luc3RhbGxpbmctYXBhY2hlLTItNC1hbmQtcGhwLTctZm9yLWRldmVsb3BtZW50LW9uLXdpbmRvd3Mv" title="https://danielarancibia.wordpress.com/2015/09/27/installing-apache-2-4-and-php-7-for-development-on-windows/">https://danielarancibia.wordpress.com/2015/09/27/installing-apache-2-4-and-php-7-for-development-on-windows/<i class="fa fa-external-link"></i></span></li></ul>          </div><h5 id="安装PHPWebAdmin"><a href="#安装PHPWebAdmin" class="headerlink" title="安装PHPWebAdmin"></a>安装PHPWebAdmin</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2RvY3VtZW50YXRpb24vbGF0ZXN0Lz9wYWdlPWhvd3RvX2luc3RhbGxfcGhwd2ViYWRtaW4=" title="https://www.hmailserver.com/documentation/latest/?page=howto_install_phpwebadmin">https://www.hmailserver.com/documentation/latest/?page=howto_install_phpwebadmin<i class="fa fa-external-link"></i></span></p><ul><li>Apache or IIS (or any other PHP compatible web server)</li><li>PHP &gt;= 4.3.11 or PHP &gt;= 5.0.3. Due to bugs in PHP 4.3.10, hMailServer does not work with that version.For php version 5.3.15 / 5.4.5 and higher the COM API has been disabled as a module. The error probably will be PHP Fatal error: Class ‘COM’ not found in \phpwebadmin\initialize.php on line xx. Make sure you edit the php.ini file has been edited with the value extension=php_com_dotnet.dll in the extentions.</li><li>For IIS , install PHP from the Web Platform Installer, and then enable php_com_dotnet.dll from there.</li><li>In the PHP configuration, the following settings must be configured for PHPWebAdmin to work properly:<ul><li>register_globals must be set to off (register_globals was deprecated and doesn’t exist from PHP 7.x)</li><li>display_errors must be set to off</li></ul></li><li>For IIS 8.5 and higher, IIS App pool runs under Network Service. Network Service needs full rights to PHPWebAdmin folder which is an alternative to granting ‘read and execute’ permissions to IIS_IUSRS.</li></ul><h5 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerAdmin jianhu.yong@genewiz.com.cn</span><br><span class="line">  ServerName njmail.local.genewiz.com</span><br><span class="line">  DocumentRoot <span class="string">"C:/Program Files (x86)/hMailServer/PHPWebAdmin"</span></span><br><span class="line">  ErrorLog <span class="string">"logs/njmail.local.genewniz.com-error.log"</span></span><br><span class="line">  CustomLog <span class="string">"logs/njmail.local.genewniz.com-access.log"</span> common</span><br><span class="line"> </span><br><span class="line">&lt;Directory <span class="string">"C:/Program Files (x86)/hMailServer/PHPWebAdmin"</span>&gt;</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Possible values for the Options directive are "None", "All",</span></span><br><span class="line">    <span class="comment"># or any combination of:</span></span><br><span class="line">    <span class="comment">#   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Note that "MultiViews" must be named *explicitly* --- "Options All"</span></span><br><span class="line">    <span class="comment"># doesn't give it to you.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># The Options directive is both complicated and important.  Please see</span></span><br><span class="line">    <span class="comment"># http://httpd.apache.org/docs/2.4/mod/core.html#options</span></span><br><span class="line">    <span class="comment"># for more information.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># AllowOverride controls what directives may be placed in .htaccess files.</span></span><br><span class="line">    <span class="comment"># It can be "All", "None", or any combination of the keywords:</span></span><br><span class="line">    <span class="comment">#   Options FileInfo AuthConfig Limit</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    AllowOverride None</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Controls who can get stuff from this server.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;  </span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h5 id="配置config-php"><a href="#配置config-php" class="headerlink" title="配置config.php"></a>配置config.php</h5><p>Please rename config-dist.php to config.php. The file is found in the PHPWebAdmin root folder.</p><p><img src="/images/pasted-237.png" alt="upload successful"></p><p>访问登录页 <span class="exturl" data-url="aHR0cDovL25qbWFpbC5sb2NhbC5nZW5ld2l6LmNvbS9waHB3ZWJhZG1pbi8=" title="http://njmail.local.genewiz.com/phpwebadmin/">http://njmail.local.genewiz.com/phpwebadmin/<i class="fa fa-external-link"></i></span></p><h5 id="安装WebMail"><a href="#安装WebMail" class="headerlink" title="安装WebMail"></a>安装WebMail</h5><ul><li><span class="exturl" data-url="aHR0cHM6Ly9hZnRlcmxvZ2ljLmNvbS9kb2NzL3dlYm1haWwtbGl0ZS04" title="https://afterlogic.com/docs/webmail-lite-8">https://afterlogic.com/docs/webmail-lite-8<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9hZnRlcmxvZ2ljLmNvbS9kb2NzL3dlYm1haWwtbGl0ZS04L2NvbmZpZ3VyaW5nLXdlYm1haWw=" title="https://afterlogic.com/docs/webmail-lite-8/configuring-webmail">https://afterlogic.com/docs/webmail-lite-8/configuring-webmail<i class="fa fa-external-link"></i></span></li></ul><p>将下载的webmail-lite-php-8压缩包解压后，重命名为webmail</p><p>配置虚拟主机<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Alias <span class="string">"/webmail/"</span> <span class="string">"D:/soft/webmail/"</span></span><br><span class="line">&lt;Directory <span class="string">"D:/soft/webmail/"</span>&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride None</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><p>配置Webmail</p><div class="note ">            <p>默认账号密码<br>user:superadmin<br>password:空</p>          </div><p>检测依赖项目 <span class="exturl" data-url="aHR0cDovL25qbWFpbC5sb2NhbC5nZW5ld2l6LmNvbS93ZWJtYWlsLz9pbnN0YWxs" title="http://njmail.local.genewiz.com/webmail/?install">http://njmail.local.genewiz.com/webmail/?install<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-232.png" alt="upload successful"></p><p>修改默认用户密码</p><p><img src="/images/pasted-233.png" alt="upload successful"></p><p>数据库设置</p><p><img src="/images/pasted-297.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-234.png) --></p><p>开启日志监控</p><p><img src="/images/pasted-235.png" alt="upload successful"></p><p>添加HmailServer</p><p><img src="/images/pasted-298.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-236.png) --></p><hr><h5 id="邮件API部署"><a href="#邮件API部署" class="headerlink" title="邮件API部署"></a>邮件API部署</h5><p><img src="/images/pasted-299.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-238.png) --></p><h5 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 内网邮件API</span></span><br><span class="line">url(<span class="string">r'^email/'</span>, include(<span class="string">'njemail.urls'</span>, namespace=<span class="string">'email'</span>)),</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> EmailApiIndexView, EmailApiView</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># 首页</span></span><br><span class="line">    url(<span class="string">r'^index/$'</span>, EmailApiIndexView.as_view(), name=<span class="string">"email_index"</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 邮件接口</span></span><br><span class="line">    url(<span class="string">r'^api/$'</span>, EmailApiView.as_view(), name=<span class="string">"email_api"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailApiIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"email-api-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        email_api_test_form = EmailApiTestForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> email_api_test_form.is_valid():</span><br><span class="line">            <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">                ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>,<span class="string">''</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'ip'</span>: ip,</span><br><span class="line">                <span class="string">'email'</span>: [email],</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> SendMail(data=data, send_type=<span class="string">'api_test'</span>):</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'测试邮件已发送!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                <span class="string">'msg'</span>: <span class="string">'邮件地址格式有误!'</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailApiView</span><span class="params">(CSRFExemptMixin, LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">"email:email_index"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        info = json.loads(request.body)</span><br><span class="line">        email_api_form = EmailApiForm(info)</span><br><span class="line">        <span class="keyword">if</span> email_api_form.is_valid():</span><br><span class="line">            receivers = info[<span class="string">'receivers'</span>]</span><br><span class="line">            subject = info[<span class="string">'subject'</span>]</span><br><span class="line">            content = info[<span class="string">'content'</span>]</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'receivers'</span>: receivers,</span><br><span class="line">                <span class="string">'subject'</span>: subject,</span><br><span class="line">                <span class="string">'content'</span>: content</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> SendMail(data,send_type=<span class="string">"email_api"</span>):</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'邮件发送成功!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'邮件发送失败,请联系管理员!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                <span class="string">'msg'</span>: <span class="string">'邮件发送失败!'</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> i, j <span class="keyword">in</span> email_api_form.errors.items():</span><br><span class="line">                res[i] = j[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="客户端调用"><a href="#客户端调用" class="headerlink" title="客户端调用"></a>客户端调用</h5><div class="tabs" id="email_api"><ul class="nav-tabs"><li class="tab active"><a href="#email_api-1">cookies</a></li><li class="tab"><a href="#email_api-2">headers</a></li><li class="tab"><a href="#email_api-3">session</a></li><li class="tab"><a href="#email_api-4">php</a></li><li class="tab"><a href="#email_api-5">curl</a></li></ul><div class="tab-content"><div class="tab-pane active" id="email_api-1"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}<span class="comment"># 获取token</span>res = requests.get(<span class="string">'http://xx.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 获取sessionid</span>cookies = {}cookies[<span class="string">'csrftoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]res = requests.post(<span class="string">'http://njops.local.genewiz.com/login/'</span>, data=login_data, cookies=cookies)cookies[<span class="string">'sessionid'</span>] = res.history[<span class="number">0</span>].cookies[<span class="string">'sessionid'</span>]<span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 构造请求头</span>headers = {<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>}<span class="comment"># 发送邮件</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>, data=json.dumps(email_data), cookies=cookies, headers=headers)</code></pre></div><div class="tab-pane" id="email_api-2"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}<span class="comment"># 获取token</span>res = requests.get(<span class="string">'http://njops.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 构造请求头</span>headers = {}headers[<span class="string">'Cookie'</span>] = <span class="string">'csrftoken='</span>+res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 获取sessionid</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/login/'</span>,data=login_data,headers=headers)headers[<span class="string">'Cookie'</span>] = headers[<span class="string">'Cookie'</span>] + <span class="string">';'</span> + (<span class="string">'sessionid='</span>+res.history[<span class="number">0</span>].cookies[<span class="string">'sessionid'</span>])headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/json'</span><span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 发送邮件</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/email/api'</span>, data=json.dumps(email_data), headers=headers)</code></pre></div><div class="tab-pane" id="email_api-3"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}s = requests.Session()res = s.get(<span class="string">'http://xx.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 登录获取登录后的session</span>res = s.post(<span class="string">'http://njops.local.genewiz.com/login/'</span>, data=login_data)<span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 发送邮件</span>headers = {}headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/json'</span>res = s.post(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>, data=json.dumps(email_data), headers=headers)</code></pre></div><div class="tab-pane" id="email_api-4"><pre><code class="php">$request = <span class="keyword">new</span> HttpRequest();$request-&gt;setUrl(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>);$request-&gt;setMethod(HTTP_METH_POST);<span class="comment"># 需要先登陆获取csrftoken sessionid(此处省略)</span>$request-&gt;setHeaders(<span class="keyword">array</span>(  <span class="string">'cache-control'</span> =&gt; <span class="string">'no-cache'</span>,  <span class="string">'cookie'</span> =&gt; <span class="string">'csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65'</span>,  <span class="string">'content-type'</span> =&gt; <span class="string">'application/json'</span>));$request-&gt;setBody(<span class="string">'{</span><span class="string">  "receivers": ["test1@example.com", "test2@example.com"],</span><span class="string">  "content": "test",</span><span class="string">  "subject": "test"</span><span class="string">}'</span>);<span class="keyword">try</span> {  $response = $request-&gt;send();  <span class="keyword">echo</span> $response-&gt;getBody();} <span class="keyword">catch</span> (HttpException $ex) {  <span class="keyword">echo</span> $ex;}</code></pre></div><div class="tab-pane" id="email_api-5"><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要先登陆获取csrftoken sessionid(此处省略)</span></span><br><span class="line">curl -X POST \</span><br><span class="line">    http:<span class="regexp">//</span>xx.local.genewiz.com<span class="regexp">/email/</span>api<span class="regexp">/ \</span></span><br><span class="line"><span class="regexp">  -H ‘cache-control: no-cache’ \</span></span><br><span class="line"><span class="regexp">  -H ‘content-type: application/</span>json<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -H ‘</span>cookie: csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -b ‘</span>csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -d ‘</span>&#123;</span><br><span class="line">  <span class="string">“receivers”</span>: [<span class="string">“<span class="exturl" data-url="bWFpbHRvOnRlc3QxQGV4YW1wbGUuY29t" title="mailto:test1@example.com">test1@example.com<i class="fa fa-external-link"></i></span>“</span>, <span class="string">“<span class="exturl" data-url="bWFpbHRvOnRlc3QyQGV4YW1wbGUuY29t" title="mailto:test2@example.com">test2@example.com<i class="fa fa-external-link"></i></span>“</span>],</span><br><span class="line">  <span class="string">“content”</span>: <span class="string">“test”</span>,</span><br><span class="line">  <span class="string">“subject”</span>: <span class="string">“test”</span></span><br><span class="line">&#125;<span class="string">‘</span></span><br></pre></td></tr></table></figure></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;开源MailServer&quot;&gt;&lt;a href=&quot;#开源MailServer&quot; class=&quot;headerlink&quot; title=&quot;开源MailServer&quot;&gt;&lt;/a&gt;开源MailServer&lt;/h5&gt;&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rvd25sb2Fk&quot; title=&quot;https://www.hmailserver.com/download&quot;&gt;https://www.hmailserver.com/download&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; (for windows)&lt;br&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9tb2RvYm9hLm9yZy9lbi8=&quot; title=&quot;https://modoboa.org/en/&quot;&gt;https://modoboa.org/en/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; (基于Django Bootstrap Jquery for Linux)&lt;/p&gt;
&lt;p&gt;本次部署hmailserver服务！&lt;/p&gt;
&lt;h5 id=&quot;部署环境&quot;&gt;&lt;a href=&quot;#部署环境&quot; class=&quot;headerlink&quot; title=&quot;部署环境&quot;&gt;&lt;/a&gt;部署环境&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;Windows Server 2012 R2 X64&lt;/li&gt;
&lt;li&gt;Mysql 5.7 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv&quot; title=&quot;https://dev.mysql.com/downloads/installer/&quot;&gt;https://dev.mysql.com/downloads/installer/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Apache2.4 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=&quot; title=&quot;https://www.apachehaus.com/cgi-bin/download.plx&quot;&gt;https://www.apachehaus.com/cgi-bin/download.plx&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;hMailServer-5.6.7-B2425 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9jZG4ubXlzcWwuY29tLy9Eb3dubG9hZHMvTXlTUUxJbnN0YWxsZXIvbXlzcWwtaW5zdGFsbGVyLXdlYi1jb21tdW5pdHktOC4wLjEyLjAubXNp&quot; title=&quot;https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi&quot;&gt;https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;PHP 7.1 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWRzL3JlbGVhc2VzL3BocC03LjEuMjItV2luMzItVkMxNC14NjQuemlw&quot; title=&quot;https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip&quot;&gt;https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;MS VC14&lt;/li&gt;
&lt;li&gt;libmysql&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>下机数据自动处理By peaktrace with Docker</title>
    <link href="http://blog.laohulab.com/uncategorized/1962248623.html"/>
    <id>http://blog.laohulab.com/uncategorized/1962248623.html</id>
    <published>2019-04-28T07:45:25.000Z</published>
    <updated>2019-05-03T02:42:36.058Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger">            <font color="red">Centos7.2版本较低，通过docker-compose构建时候会出现如下错误：Error response from daemon: OCI runtime create failed<br>建议Centos7.4以上，或者通过yum update升级</font>          </div><h5 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h5><h6 id="旧的版本"><a href="#旧的版本" class="headerlink" title="旧的版本"></a>旧的版本</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h6 id="添加安装源"><a href="#添加安装源" class="headerlink" title="添加安装源"></a>添加安装源</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h6 id="安装Docker-1"><a href="#安装Docker-1" class="headerlink" title="安装Docker"></a>安装Docker</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure><h6 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h6 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h6 id="Docker-compose构建"><a href="#Docker-compose构建" class="headerlink" title="Docker-compose构建"></a>Docker-compose构建</h6><div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1"><i class="fa fa-cogs" style="font-size:16px" title></i> Docker-compose Build</a></li><li class="tab"><a href="#-2"><i class="fa fa-cogs" style="font-size:16px" title></i>  Docker-compose Image</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><div class="note danger"><p><strong>注意事项</strong><br>  执行docker-compose命令时，务必进入docker-compose.yml所在的目录，否则无法正常执行。</p></div><p></p><h6 id="上传项目至服务器"><a href="#上传项目至服务器" class="headerlink" title="上传项目至服务器"></a>上传项目至服务器</h6><p>路径：/opt/clims</p><p></p><p></p><h6 id="配置docker-compose-yml"><a href="#配置docker-compose-yml" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h6><div class="note danger"><p><strong>注意事项</strong><br>宿主机下机数据路径务必与容器内部路径一致,请根据实际情况修改!</p></div><p></p><p></p><p><img src="/images/pasted-199.png" alt="upload successful"></p><p></p><p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">‘3’</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    db:</span></span><br><span class="line"><span class="attr">      container_name:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">      image:</span> <span class="attr">mysql:5.6</span></span><br><span class="line"><span class="attr">      environment:</span></span><br><span class="line"><span class="attr">        MYSQL_ROOT_PASSWORD:</span> <span class="string">xxxxxxxx</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">“3306:3306”</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./mysql/data:/var/lib/mysql</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    web:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./nginx</span></span><br><span class="line">        <span class="comment">#image: nginx:test</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">“80:80”</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./nginx/conf:/opt/nginx/conf</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./django/clims:/opt/clims-status</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">status</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    status:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">django</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./django</span></span><br><span class="line">        <span class="comment">#image: django:test</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="comment"># command: uwsgi  –emperor uwsgi.ini</span></span><br><span class="line"><span class="attr">        command:</span> <span class="string">uwsgi</span> <span class="bullet">–ini</span> <span class="string">/opt/clims/uwsgi/uwsgi.ini</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">“8001:8001”</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./django/clims:/opt/clims</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">db</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    pipeline:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">pipeline</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./pipeline</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/internal:/opt/pipeline/internal</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/external:/opt/pipeline/external</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/cron:/var/spool/cron</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/sanger-pipeline/clims-in-uat:/sanger-pipeline/clims-in-uat</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/sanger-pipeline/clims-out-uat:/sanger-pipeline/clims-out-uat</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">db</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">status</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">web</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">    data:</span></span><br><span class="line"><span class="attr">    clims:</span></span><br><span class="line">    <span class="attr">conf:</span></span><br></pre></td></tr></table></figure></p><p></p><h6 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p></p><div class="note info"><p><strong>备注</strong><br>执行此命令会自动构建镜像，并以此镜像自动创建容器，至此已完成自动化部署，可以访问http://宿主机IP/即可！</p></div><p></p><h6 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h6><p><img src="/images/pasted-200.png" alt="upload successful"></p><p></p><p></p><h6 id="上传镜像至本地仓库"><a href="#上传镜像至本地仓库" class="headerlink" title="上传镜像至本地仓库"></a>上传镜像至本地仓库</h6><ul><p></p><p><li>苏州Harbor仓库地址：<span class="exturl" data-url="aHR0cHM6Ly94eC5sb2NhbC5nZW5ld2l6LmNvbQ==" title="https://xx.local.genewiz.com">https://xx.local.genewiz.com<i class="fa fa-external-link"></i></span><!-- * 苏州Harbor仓库地址：https://gwharbor03.local.genewiz.com --><br></li><br></p></ul><p></p><p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 登录本地仓库</span><br><span class="line">docker login <span class="exturl" data-url="aHR0cHM6Ly94eC5sb2NhbC5nZW5ld2l6LmNvbQ==" title="https://xx.local.genewiz.com">https://xx.local.genewiz.com<i class="fa fa-external-link"></i></span></span><br></pre></td></tr></table></figure></p><p></p><p><img src="/images/pasted-301.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-201.png) --></p><p></p><p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 本地镜像标记TAG</span><br><span class="line">docker tag clims_pipeline:latest xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">docker tag clims_web:latest xx.local.genewiz.com/clims/web:latest</span><br><span class="line">docker tag clims_status:latest xx.local.genewiz.com/clims/status:latest</span><br><span class="line">docker tag mysql:5.6 xx.local.genewiz.com/clims/mysql:5.6</span><br><span class="line">// 上传</span><br><span class="line">docker push xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/web:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/status:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/mysql:5.6</span><br></pre></td></tr></table></figure></p><p></p><h6 id="登录仓库查看上传镜像"><a href="#登录仓库查看上传镜像" class="headerlink" title="登录仓库查看上传镜像"></a>登录仓库查看上传镜像</h6><p><img src="/images/pasted-202.png" alt="upload successful"><br></p></div><div class="tab-pane" id="-2"><div class="note danger"><strong>注意事项</strong><br><p>执行docker-compose命令时，务必进入docker-compose.yml所在的目录，否则无法正常执行。</p></div>  <p></p><h6 id="上传项目至服务器-1"><a href="#上传项目至服务器-1" class="headerlink" title="上传项目至服务器"></a>上传项目至服务器</h6><p>路径：/opt/clims</p><p></p><p></p><h6 id="配置docker-compose-yml-1"><a href="#配置docker-compose-yml-1" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h6><div class="note danger"><strong>注意事项</strong><br><p>宿主机下机数据路径务必与容器内部路径一致,请根据实际情况修改!</p></div>  <p></p><p></p><p><img src="/images/pasted-204.png" alt="upload successful"></p><p></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">‘3’</span></span><br><span class="line">services:</span><br><span class="line">    db:</span><br><span class="line">      container_name: mysql</span><br><span class="line">      <span class="comment">#image: mysql:5.6</span></span><br><span class="line">      image: xx.local.genewiz.com/clims/mysql:5.6</span><br><span class="line">      environment:</span><br><span class="line">        MYSQL_ROOT_PASSWORD: xxxxxxxx</span><br><span class="line">      ports:</span><br><span class="line">        - <span class="string">“3306:3306”</span></span><br><span class="line">      volumes:</span><br><span class="line">        - ./mysql/data:/var/lib/mysql</span><br><span class="line"> </span><br><span class="line">    web:</span><br><span class="line">        container_name: nginx</span><br><span class="line">        <span class="comment">#build: ./nginx</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/web:latest</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">        - <span class="string">“80:80”</span></span><br><span class="line">        volumes:</span><br><span class="line">        - ./nginx/conf:/opt/nginx/conf</span><br><span class="line">        - ./django/clims:/opt/clims-status</span><br><span class="line">        depends_on:</span><br><span class="line">        - status</span><br><span class="line"> </span><br><span class="line">    status:</span><br><span class="line">        container_name: django</span><br><span class="line">        <span class="comment">#build: ./django</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/status:latest</span><br><span class="line">        restart: always</span><br><span class="line">        <span class="comment"># command: uwsgi  –emperor uwsgi.ini</span></span><br><span class="line">        <span class="built_in">command</span>: uwsgi –ini /opt/clims/uwsgi/uwsgi.ini</span><br><span class="line">        ports:</span><br><span class="line">         - <span class="string">“8001:8001”</span></span><br><span class="line">        volumes:</span><br><span class="line">        - ./django/clims:/opt/clims</span><br><span class="line">        depends_on:</span><br><span class="line">         - db</span><br><span class="line"> </span><br><span class="line">    pipeline:</span><br><span class="line">        container_name: pipeline</span><br><span class="line">        <span class="comment">#build: ./pipeline</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">        restart: always</span><br><span class="line">        volumes:</span><br><span class="line">        - ./pipeline/internal:/opt/pipeline/internal</span><br><span class="line">        - ./pipeline/external:/opt/pipeline/external</span><br><span class="line">        - ./pipeline/cron:/var/spool/cron</span><br><span class="line">        - /sanger-pipeline/clims-in-uat:/sanger-pipeline/clims-in-uat</span><br><span class="line">        - /sanger-pipeline/clims-out-uat:/sanger-pipeline/clims-out-uat</span><br><span class="line">        depends_on:</span><br><span class="line">         - db</span><br><span class="line">         - status</span><br><span class="line">         - web</span><br><span class="line"> </span><br><span class="line">volumes:</span><br><span class="line">    data:</span><br><span class="line">    clims:</span><br><span class="line">    conf:</span><br></pre></td></tr></table></figure><br><div class="note danger"><strong>注意事项</strong><p>此时构建镜像直接从本地仓库获取，而不是本地编译Dockerfile!</p></div><br><br><h6 id="开始构建-1"><a href="#开始构建-1" class="headerlink" title="开始构建"></a>开始构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div></div></div><h5 id="容器启停"><a href="#容器启停" class="headerlink" title="容器启停"></a>容器启停</h5><h6 id="容器停止"><a href="#容器停止" class="headerlink" title="容器停止"></a>容器停止</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure><h6 id="容器启动"><a href="#容器启动" class="headerlink" title="容器启动"></a>容器启动</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose start</span><br></pre></td></tr></table></figure><h6 id="容器重启"><a href="#容器重启" class="headerlink" title="容器重启"></a>容器重启</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><h6 id="容器重新构建"><a href="#容器重新构建" class="headerlink" title="容器重新构建"></a>容器重新构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h5 id="Pipeline使用注意事项"><a href="#Pipeline使用注意事项" class="headerlink" title="Pipeline使用注意事项"></a>Pipeline使用注意事项</h5><h6 id="Json配置文件说明"><a href="#Json配置文件说明" class="headerlink" title="Json配置文件说明"></a>Json配置文件说明</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"INPUT_ROOT_DIRECTORY"</span>: <span class="string">"/sanger-pipeline/clims-in-uat"</span>, //本地下机路径</span><br><span class="line">  <span class="string">"OUTPUT_ROOT_DIRECTORY"</span>: <span class="string">"/sanger-pipeline/clims-out-uat"</span>, //本地下机路径</span><br><span class="line">  <span class="string">"INPUT_SMB_DIRECTORY"</span>: <span class="string">"\\\\10.105.23.227\\seqdata-in"</span>, //相对应Samba路径</span><br><span class="line">  <span class="string">"OUTPUT_SMB_DIRECTORY"</span>: <span class="string">"\\\\10.105.23.227\\seqdata"</span>, //相对应Samba路径</span><br><span class="line">  <span class="string">"PEAKTRACE_SERVER"</span>:<span class="string">"10.105.21.181"</span>, //Peaktrace所在服务器IP</span><br><span class="line">  <span class="string">"PEAKTRACE_USER"</span>:<span class="string">"root"</span>, //Peaktrace服务器账号</span><br><span class="line">  <span class="string">"PEAKTRACE_PASSWORD"</span>:<span class="string">"xxxxxxxx"</span>, //Peaktrace服务器账号密码</span><br><span class="line">  <span class="string">"PEAKTRACE_EXEC_ARGS"</span>: <span class="string">"-al no -c -10 -n 0 -xn yes"</span>, //Peaktrace参数</span><br><span class="line">  <span class="string">"PEAKTRACE_UNITS"</span>:<span class="string">"140000"</span>, //告警阈值</span><br><span class="line">  <span class="string">"PEAKTRACE_DAYS"</span>:<span class="string">"700"</span>, //告警阈值</span><br><span class="line">  <span class="string">"MYSQL_HOST"</span>:<span class="string">"db"</span>, //容器DB主机</span><br><span class="line">  <span class="string">"MYSQL_USER"</span>:<span class="string">"root"</span>, //容器DB账号</span><br><span class="line">  <span class="string">"MYSQL_PASSWORD"</span>:<span class="string">"xxxxxxxx"</span>, //容器DB密码</span><br><span class="line">  <span class="string">"MYSQL_DB"</span>:<span class="string">"pipelinedb"</span>, //数据库</span><br><span class="line">  <span class="string">"STATUS_URL"</span>:<span class="string">"http://10.105.21.181/"</span> // 详情页面地址</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h6><p>默认均关闭，需要手动打开,请合理设置时间间隔！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Internal Pipeline</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/internal/climspipe.py &amp;&gt;&gt; /tmp/pipeline-internal.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># External Pipeline</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/external/climspipe.py &amp;&gt;&gt; /tmp/pipeline-external.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># PeakTrace License Monitor</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/internal/pt_license_monitor.py</span></span><br></pre></td></tr></table></figure><div class="note info">            <p>生产环境，已通过Peaktrace处理过的目录，请提前加入数据库中，否则会被重新处理，请慎重操作！</p>          </div><h5 id="Nginx-域名配置（可选）"><a href="#Nginx-域名配置（可选）" class="headerlink" title="Nginx 域名配置（可选）"></a>Nginx 域名配置（可选）</h5><div class="note info">            <p>Nginx默认监听所有IP地址，容器部署完成后，直接访问宿主机IP地址即可！</p><p>如需配置域名，请替换如下域名，配置相应DNS记录,重启容器即可生效</p>          </div><p><img src="/images/pasted-203.png" alt="upload successful"></p><h5 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h5><div class="note danger">            <font color="red">docker WARNING: IPv4 forwarding is disabled?</font>          </div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf or vim /usr/lib/sysctl.d/00-system.conf</span><br><span class="line"> </span><br><span class="line">添加如下代码：</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"> </span><br><span class="line">查看</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h5 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h5><p><img src="/images/pasted-312.png" alt="upload successful"><br><img src="/images/pasted-321.png" alt="upload successful"><br><img src="/images/pasted-319.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-310.png) --></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note danger&quot;&gt;
            &lt;font color=&quot;red&quot;&gt;Centos7.2版本较低，通过docker-compose构建时候会出现如下错误：Error response from daemon: OCI runtime create failed&lt;br&gt;建议Centos7.4以上，或者通过yum update升级&lt;/font&gt;
          &lt;/div&gt;
&lt;h5 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; class=&quot;headerlink&quot; title=&quot;安装Docker&quot;&gt;&lt;/a&gt;安装Docker&lt;/h5&gt;&lt;h6 id=&quot;旧的版本&quot;&gt;&lt;a href=&quot;#旧的版本&quot; class=&quot;headerlink&quot; title=&quot;旧的版本&quot;&gt;&lt;/a&gt;旧的版本&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>下机数据自动处理By peaktrace</title>
    <link href="http://blog.laohulab.com/uncategorized/4039255390.html"/>
    <id>http://blog.laohulab.com/uncategorized/4039255390.html</id>
    <published>2019-04-28T06:55:26.000Z</published>
    <updated>2019-05-01T06:26:15.819Z</updated>
    
    <content type="html"><![CDATA[<h5 id="处理流程"><a href="#处理流程" class="headerlink" title="处理流程"></a>处理流程</h5><p><img src="/images/pasted-198.png" alt="upload successful"></p><a id="more"></a><h5 id="安装PeakTrace"><a href="#安装PeakTrace" class="headerlink" title="安装PeakTrace"></a>安装PeakTrace</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">tar -zxv peaktrace_6911_linux_el7_x86_64 </span><br><span class="line">cd peaktrace_6911_linux_el7_x86_64</span><br><span class="line"> </span><br><span class="line"><span class="comment"># installs peaktrace and codemeter on CentOS 7</span></span><br><span class="line">yum --nogpgcheck localinstall CodeMeter<span class="number">-6.60</span><span class="number">.2878</span><span class="number">-501.</span>x86_64.rpm AxProtector<span class="number">-10.10</span><span class="number">.2878</span><span class="number">-501.</span>x86_64.rpm</span><br><span class="line">chmod <span class="number">755</span> peaktrace &amp;&amp; cp peaktrace /usr/bin/peaktrace</span><br><span class="line">cp peaktrace<span class="number">.1</span>.gz /usr/local/share/man/man1/peaktrace<span class="number">.1</span>.gz</span><br><span class="line">cmu -h</span><br></pre></td></tr></table></figure><h5 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">mysqladmin -hlocalhost -uroot password <span class="string">"xxx"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"create database pipelinedb character set utf8;"</span> | mysql -hlocalhost -uroot -p<span class="string">'xxx'</span></span><br></pre></td></tr></table></figure><h5 id="安装Django环境"><a href="#安装Django环境" class="headerlink" title="安装Django环境"></a>安装Django环境</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -r requirement.txt </span><br><span class="line"></span><br><span class="line">asn1crypto==0.24.0</span><br><span class="line">bcrypt==3.1.4</span><br><span class="line">biopython==1.72</span><br><span class="line">cffi==1.11.5</span><br><span class="line">cryptography==2.4.1</span><br><span class="line">diff-match-patch==20181111</span><br><span class="line">Django==1.10.4</span><br><span class="line">django-auth-ldap==1.3.0</span><br><span class="line">django-crispy-forms==1.7.2</span><br><span class="line">django-formtools==2.1</span><br><span class="line">django-import-export==1.0.1</span><br><span class="line">django-pure-pagination==0.3.0</span><br><span class="line">django-ranged-response==0.2.0</span><br><span class="line">django-simple-captcha==0.4.6</span><br><span class="line">enum34==1.1.6</span><br><span class="line">et-xmlfile==1.0.1</span><br><span class="line">idna==2.7</span><br><span class="line">image==1.5.24</span><br><span class="line">ipaddress==1.0.22</span><br><span class="line">jdcal==1.4</span><br><span class="line">MySQL-python==1.2.5</span><br><span class="line">numpy==1.15.1</span><br><span class="line">odfpy==1.3.6</span><br><span class="line">openpyxl==2.5.11</span><br><span class="line">paramiko==2.4.1</span><br><span class="line">Pillow==5.3.0</span><br><span class="line">psycopg2-binary==2.7.5</span><br><span class="line">pyasn1==0.4.4</span><br><span class="line">pycparser==2.19</span><br><span class="line">PyNaCl==1.3.0</span><br><span class="line">python-ldap==2.5.2</span><br><span class="line">PyYAML==3.13</span><br><span class="line">six==1.11.0</span><br><span class="line">SQLAlchemy==1.2.11</span><br><span class="line">tablib==0.12.1</span><br><span class="line">unicodecsv==0.14.1</span><br><span class="line">uWSGI==2.0.17.1</span><br><span class="line">xlrd==1.1.0</span><br><span class="line">xlwt==1.3.0</span><br></pre></td></tr></table></figure><h5 id="修改Django-DB配置"><a href="#修改Django-DB配置" class="headerlink" title="修改Django DB配置"></a>修改Django DB配置</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'pipelinedb'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'xxxxxxxx'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'127.0.0.1'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><h5 id="同步静态文件"><a href="#同步静态文件" class="headerlink" title="同步静态文件"></a>同步静态文件</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><h5 id="配置uwsgi"><a href="#配置uwsgi" class="headerlink" title="配置uwsgi"></a>配置uwsgi</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line"><span class="comment"># 项目目录</span></span><br><span class="line"><span class="built_in">chdir</span>=/opt/clims</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定项目的application</span></span><br><span class="line">module=clims.wsgi</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定sock的文件路径</span></span><br><span class="line">socket=/opt/clims/uwsgi/uwsgi.sock</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启用主进程</span></span><br><span class="line">master=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 进程个数</span></span><br><span class="line">workers=2</span><br><span class="line"> </span><br><span class="line">pidfile=/opt/clims/uwsgi/uwsgi.pid</span><br><span class="line"><span class="comment"># 自动移除unix Socket和pid文件当服务停止的时候</span></span><br><span class="line">vacuum=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定IP端口</span></span><br><span class="line">http=10.105.21.181:8001</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定静态文件</span></span><br><span class="line">static-map=/static=/opt/clims/statics</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启动uwsgi的用户名和用户组</span></span><br><span class="line">uid=root</span><br><span class="line">gid=root</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 序列化接受的内容，如果可能的话</span></span><br><span class="line">thunder-lock=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启用线程</span></span><br><span class="line"><span class="built_in">enable</span>-threads=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置自中断时间</span></span><br><span class="line">harakiri=30</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置缓冲</span></span><br><span class="line">post-buffering=4096</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置日志目录</span></span><br><span class="line">daemonize=/opt/clims/uwsgi/uwsgi.log</span><br></pre></td></tr></table></figure><h5 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --ini /opt/clims/uwsgi/uwsgi8001.ini</span><br></pre></td></tr></table></figure><h5 id="停止项目"><a href="#停止项目" class="headerlink" title="停止项目"></a>停止项目</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkill -9 uwsgi</span><br><span class="line"> </span><br><span class="line">or</span><br><span class="line"> </span><br><span class="line">ps -ef|grep uwsgi |grep -v grep|xargs <span class="built_in">kill</span> -9</span><br></pre></td></tr></table></figure><h5 id="启动pipeline"><a href="#启动pipeline" class="headerlink" title="启动pipeline"></a>启动pipeline</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">通过设置定时任务即可！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;处理流程&quot;&gt;&lt;a href=&quot;#处理流程&quot; class=&quot;headerlink&quot; title=&quot;处理流程&quot;&gt;&lt;/a&gt;处理流程&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-198.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>目录同步-线上部署</title>
    <link href="http://blog.laohulab.com/uncategorized/150957718.html"/>
    <id>http://blog.laohulab.com/uncategorized/150957718.html</id>
    <published>2019-04-28T06:49:51.000Z</published>
    <updated>2019-05-01T06:27:00.553Z</updated>
    
    <content type="html"><![CDATA[<h5 id="线上环境部署"><a href="#线上环境部署" class="headerlink" title="线上环境部署"></a>线上环境部署</h5><h6 id="安装python2-7"><a href="#安装python2-7" class="headerlink" title="安装python2.7"></a>安装python2.7</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/2.7.13/Python-2.7.13rc1.tgz</span><br><span class="line">tar zxvf Python-2.7.13rc1.tgz </span><br><span class="line"><span class="built_in">cd</span> Python-2.7.13rc1</span><br><span class="line">yum -y install sqlite-devel openssl-devel tk-devel readline-devel bzip2-devel gdbm-devel</span><br><span class="line">./configure --prefix=/opt/app/python2.7/</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">/opt/app/python2.7/bin/python get-pip.py</span><br><span class="line">/opt/app/python2.7/bin/pip install virtualenvwrapper</span><br></pre></td></tr></table></figure><h6 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> PATH=/opt/app/python2.7/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> WORKON_HOME=/opt/virtualenvs</span><br><span class="line"><span class="built_in">export</span> VIRTUALENVWRAPPER_PYTHON=/opt/app/python2.7/bin/python</span><br><span class="line"><span class="built_in">source</span> /opt/app/python2.7/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure><h6 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkvirtualenv -p /opt/app/python2.7/bin/python DeviceOnline</span><br><span class="line">pip install -r /opt/DeviceOnline/venv/requirment.txt -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure><h5 id="目录创建"><a href="#目录创建" class="headerlink" title="目录创建"></a>目录创建</h5><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title="进入虚拟环境"></a>进入虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">workon DeviceOnline</span><br></pre></td></tr></table></figure><h6 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(DeviceOnline) [root@gwszsmb01 DeviceOnline]<span class="comment"># ./run.py </span></span><br><span class="line">usage: run.py [-h] [--force] [--configfile CONFIGFILE] folder_name</span><br><span class="line">run.py: error: too few arguments</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Example</span></span><br><span class="line">(DeviceOnline) [root@gwszsmb01 DeviceOnline]<span class="comment"># ./run.py Linne</span></span><br></pre></td></tr></table></figure><h6 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title="退出虚拟环境"></a>退出虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;线上环境部署&quot;&gt;&lt;a href=&quot;#线上环境部署&quot; class=&quot;headerlink&quot; title=&quot;线上环境部署&quot;&gt;&lt;/a&gt;线上环境部署&lt;/h5&gt;&lt;h6 id=&quot;安装python2-7&quot;&gt;&lt;a href=&quot;#安装python2-7&quot; class=&quot;headerlink&quot; title=&quot;安装python2.7&quot;&gt;&lt;/a&gt;安装python2.7&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://www.python.org/ftp/python/2.7.13/Python-2.7.13rc1.tgz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf Python-2.7.13rc1.tgz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; Python-2.7.13rc1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install sqlite-devel openssl-devel tk-devel readline-devel bzip2-devel gdbm-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure --prefix=/opt/app/python2.7/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>目录同步</title>
    <link href="http://blog.laohulab.com/uncategorized/2863113024.html"/>
    <id>http://blog.laohulab.com/uncategorized/2863113024.html</id>
    <published>2019-04-28T06:23:41.000Z</published>
    <updated>2019-05-03T02:55:06.578Z</updated>
    
    <content type="html"><![CDATA[<h5 id="同步示例"><a href="#同步示例" class="headerlink" title="同步示例"></a>同步示例</h5><p><img src="/images/pasted-188.png" alt="upload successful"></p><a id="more"></a><h5 id="目录流程"><a href="#目录流程" class="headerlink" title="目录流程"></a>目录流程</h5><p><img src="/images/pasted-189.png" alt="upload successful"></p><h5 id="初次安装"><a href="#初次安装" class="headerlink" title="初次安装"></a>初次安装</h5><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title="进入虚拟环境"></a>进入虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">source ../../DeviceOnline/bin/activate</span><br></pre></td></tr></table></figure><h6 id="进入run-py所在目录"><a href="#进入run-py所在目录" class="headerlink" title="进入run.py所在目录"></a>进入run.py所在目录</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd ../DeviceOnline</span><br></pre></td></tr></table></figure><h6 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(venv) [root@localhost DeviceOnline]<span class="comment"># ./run.py -h</span></span><br><span class="line">usage: run.py [-h] [--force] [--configfile CONFIGFILE] folder_name</span><br><span class="line"> </span><br><span class="line">positional arguments:</span><br><span class="line">  folder_name           The Name of Device</span><br><span class="line"> </span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message <span class="keyword">and</span> exit</span><br><span class="line">  --force               Force installation</span><br><span class="line">  --configfile CONFIGFILE</span><br><span class="line">                        Configuration file to use</span><br></pre></td></tr></table></figure><h6 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">./run.py folder_name</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-190.png" alt="upload successful"></p><blockquote class="pullquote note info"><p>使用场景：<br>本地Samba未安装lsyncd同步软件<br>本地Samba &amp; Azrue Samba服务器均未创建SyncUser用户<br>本地Samba SyncUser公钥尚未同步至Azrue Samba</p></blockquote><h5 id="非初次安装"><a href="#非初次安装" class="headerlink" title="非初次安装"></a>非初次安装</h5><p><img src="/images/pasted-191.png" alt="upload successful"></p><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p><code>../DeviceOnline/install.cfg</code></p><p><img src="/images/pasted-192.png" alt="upload successful"></p><h5 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h5><h6 id="Lsyncd未安装"><a href="#Lsyncd未安装" class="headerlink" title="Lsyncd未安装"></a>Lsyncd未安装</h6><p><img src="/images/pasted-193.png" alt="upload successful"></p><h6 id="SyncUser未创建"><a href="#SyncUser未创建" class="headerlink" title="SyncUser未创建"></a>SyncUser未创建</h6><p><img src="/images/pasted-194.png" alt="upload successful"></p><h6 id="公钥未同步"><a href="#公钥未同步" class="headerlink" title="公钥未同步"></a>公钥未同步</h6><p><img src="/images/pasted-195.png" alt="upload successful"></p><h6 id="目录重名"><a href="#目录重名" class="headerlink" title="目录重名"></a>目录重名</h6><p><img src="/images/pasted-196.png" alt="upload successful"></p><h5 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h5><p><img src="/images/pasted-327.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-197.png) --></p><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">An installer for GENEWIZ Device Online.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Create Device Folder Name IN Local &amp; Azrue Samba Servers.</span></span><br><span class="line"><span class="string">Config Lsyncd Service IN Local Samba Server.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> configparser</span><br><span class="line"><span class="keyword">except</span> ImportError:</span><br><span class="line">    <span class="keyword">import</span> ConfigParser <span class="keyword">as</span> configparser</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> system</span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> utils</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deploy_key</span><span class="params">(key, host, username, password, sync_user)</span>:</span></span><br><span class="line">    <span class="string">"""Deploy Public key to target machines"""</span></span><br><span class="line">    client = paramiko.SSHClient()</span><br><span class="line">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    client.connect(host, username=username, password=password)</span><br><span class="line">    client.exec_command(<span class="string">'mkdir -p /home/&#123;&#125;/.ssh/'</span>.format(sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chown &#123;&#125;.&#123;&#125; /home/&#123;&#125;/.ssh/'</span>.format(sync_user, sync_user, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'echo "&#123;&#125;" &gt; /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(key, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chmod 600 /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chown &#123;&#125;.&#123;&#125; /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(sync_user, sync_user, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chmod 700 /home/&#123;&#125;/.ssh/'</span>.format(sync_user))</span><br><span class="line">    client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdirs</span><span class="params">(host, username, password, folder_path, sync_user)</span>:</span></span><br><span class="line">    <span class="string">"""Make dirs"""</span></span><br><span class="line">    client = paramiko.SSHClient()</span><br><span class="line">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    client.connect(host, username=username, password=password)</span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> folder_path:</span><br><span class="line">        client.exec_command(<span class="string">'mkdir -p &#123;&#125;'</span>.format(path))</span><br><span class="line">        client.exec_command(<span class="string">'chmod -R 2776 &#123;&#125;'</span>.format(path))</span><br><span class="line">        client.exec_command(<span class="string">'chown &#123;&#125;."&#123;&#125;" &#123;&#125;'</span>.format(sync_user, <span class="string">'domain users'</span>, path))</span><br><span class="line">    client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SentMail</span><span class="params">(msg_data, mail_to, mail_cc)</span>:</span></span><br><span class="line">    <span class="string">"""Send Email"""</span></span><br><span class="line">    mail_host = <span class="string">'10.xx.xx.xx'</span></span><br><span class="line">    mail_user = <span class="string">'xx@genewiz.com.cn'</span></span><br><span class="line">    <span class="comment"># mail_pass = '********'</span></span><br><span class="line">    mail_sender = <span class="string">'xx@genewiz.com.cn'</span></span><br><span class="line">    mail_to = mail_to</span><br><span class="line">    mail_cc = mail_cc</span><br><span class="line">    subject = <span class="string">'【GENEWIZ-IT】设备目录上线通知'</span></span><br><span class="line">    <span class="comment"># message = MIMEMultipart()</span></span><br><span class="line">    tr_messages_list = []</span><br><span class="line">    li_messages_list = []</span><br><span class="line">    <span class="keyword">for</span> smb_tag, smb_info <span class="keyword">in</span> msg_data.items():</span><br><span class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> smb_info[<span class="string">'hosts'</span>]:</span><br><span class="line">            hostname = host[<span class="string">'hostname'</span>]</span><br><span class="line">            folder_auth = host[<span class="string">'folder_auth'</span>]</span><br><span class="line">            create_time = host[<span class="string">'create_time'</span>]</span><br><span class="line">            folder_group = host[<span class="string">'folder_group'</span>]</span><br><span class="line">            folder_name = host[<span class="string">'folder_name'</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'local'</span> <span class="keyword">in</span> smb_tag:</span><br><span class="line">                smb_path_internal_in = os.path.join(host[<span class="string">'smb_path_internal_in'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line">                smb_path_external_in = os.path.join(host[<span class="string">'smb_path_external_in'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line">                smb_path_out = os.path.join(host[<span class="string">'smb_path_out'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> service <span class="keyword">in</span> smb_info[<span class="string">'services'</span>]:</span><br><span class="line">                    li_messages = <span class="string">'''</span></span><br><span class="line"><span class="string">                        &lt;li&gt;&lt;strong&gt;服务: &#123;&#125;&lt;/strong&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;日志目录: &#123;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;配置文件: &#123;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li style="margin-bottom:15px"&gt;系统服务: &#123;&#125;【自启动】&lt;/li&gt;                                            </span></span><br><span class="line"><span class="string">                    '''</span>.format(service[<span class="string">'name'</span>], service[<span class="string">'log_file_path'</span>], service[<span class="string">'config_path'</span>], service[<span class="string">'init_path'</span>])</span><br><span class="line">                    li_messages_list.append(li_messages)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> path <span class="keyword">in</span> host[<span class="string">'path'</span>]:</span><br><span class="line">                tr_messages = <span class="string">'''</span></span><br><span class="line"><span class="string">                    &lt;tr&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;height: 27px;line-height: 27px;background: #fff;padding:0 10px;color:#4285F4" &gt;&#123;0&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td  style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;height: 27px;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;1&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 20px"&gt;&#123;2&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;3&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;4&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;5&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 20px;color: red"&gt;&#123;6&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                '''</span>.format(smb_tag, hostname, folder_name, path, folder_auth, folder_group, create_time)</span><br><span class="line">                tr_messages_list.append(tr_messages)</span><br><span class="line"></span><br><span class="line">    mail_msg = <span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';color:#333;font-weight: bold;"&gt;您的设备目录已创建,详情如下：&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;table cellspacing="0" cellpadding="0" style="border: 1px solid #c4cacd;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">            &lt;tbody&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-left: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;类型&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;IP&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录路径&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;权限&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录属组&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;创建时间&lt;/th&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                %s</span></span><br><span class="line"><span class="string">            &lt;/tbody&gt;</span></span><br><span class="line"><span class="string">        &lt;/table&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';font-weight:bold;color:#333;border-bottom: 1px solid #eee"&gt;本地下机路径&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul style="list-style: none;margin: 0;padding: 0;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径-内单【IN】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径-外单【IN】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径【OUT】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';font-weight:bold;color:#333;border-bottom: 1px solid #eee"&gt;目录同步服务&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul style="list-style: none;margin: 0;padding: 0;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">        %s</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:12px;font-family:'Microsoft YaHei';color:red;"&gt;本邮件是由系统自动发出的，请不要回复本邮件！&lt;/p&gt;</span></span><br><span class="line"><span class="string">        '''</span> % (<span class="string">""</span>.join(tr_messages_list), smb_path_internal_in, smb_path_external_in, smb_path_out, <span class="string">""</span>.join(li_messages_list))</span><br><span class="line"></span><br><span class="line">    message = MIMEText(mail_msg, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">    message[<span class="string">'From'</span>] = Header(mail_sender)</span><br><span class="line">    message[<span class="string">'To'</span>] = Header(<span class="string">','</span>.join(mail_to))</span><br><span class="line">    message[<span class="string">'Cc'</span>] = Header(<span class="string">','</span>.join(mail_cc))</span><br><span class="line">    message[<span class="string">'Subject'</span>] = Header(subject, <span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        smtpObj = smtplib.SMTP()</span><br><span class="line">        smtpObj.connect(mail_host, <span class="number">25</span>)</span><br><span class="line">        <span class="comment"># SZ SMTP Server do not require login</span></span><br><span class="line">        <span class="comment"># smtpObj.login(mail_user,mail_pass)</span></span><br><span class="line">        smtpObj.sendmail(mail_sender, mail_to + mail_cc, message.as_string())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(input_args)</span>:</span></span><br><span class="line">    <span class="string">"""Install process."""</span></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">"--force"</span>, action=<span class="string">"store_true"</span>, default=<span class="literal">False</span>,help=<span class="string">"Force installation"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"--configfile"</span>, default=<span class="string">"installer.cfg"</span>,help=<span class="string">"Configuration file to use"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"folder_name"</span>, type=str,help=<span class="string">"The Name of Device"</span>)</span><br><span class="line">    args = parser.parse_args(input_args)</span><br><span class="line"></span><br><span class="line">    folder_name = args.folder_name</span><br><span class="line">    basedir = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line"></span><br><span class="line">    utils.printcolor(<span class="string">"Welcome to Genewiz installer for Device Online!\n"</span>, utils.GREEN)</span><br><span class="line">    config = configparser.SafeConfigParser()</span><br><span class="line">    <span class="keyword">with</span> open(args.configfile) <span class="keyword">as</span> fp:</span><br><span class="line">        config.readfp(fp)</span><br><span class="line"></span><br><span class="line">    mail_to = config.get(<span class="string">'notify'</span>, <span class="string">'mail_to'</span>).split(<span class="string">','</span>)</span><br><span class="line">    mail_cc= config.get(<span class="string">'notify'</span>, <span class="string">'mail_cc'</span>).split(<span class="string">','</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if Lsyncd is installed?</span></span><br><span class="line">    utils.printcolor(<span class="string">"1.Check if Lsyncd is installed?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line">    code,res = utils.exec_cmd(<span class="string">'which lsyncd'</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">        utils.printcolor(<span class="string">"[Error]: lsyncd is not installed."</span>, utils.RED)</span><br><span class="line">        name, version, _id = platform.linux_distribution()</span><br><span class="line">        <span class="keyword">if</span> version.startswith(<span class="string">'6'</span>):</span><br><span class="line">            lsyncd_rpm = os.path.join(basedir, <span class="string">'scripts/files/lsyncd-2.1.5-0.el6.x86_64.rpm'</span>)</span><br><span class="line">        <span class="keyword">elif</span> version.startswith(<span class="string">'7'</span>):</span><br><span class="line">            lsyncd_rpm = os.path.join(basedir, <span class="string">'scripts/files/lsyncd-2.1.5-6.el7.x86_64.rpm'</span>)</span><br><span class="line">        utils.printcolor(<span class="string">"[Info]: Installing lsyncd for you, please wait..."</span>, utils.BLUE)</span><br><span class="line">        package.backend.install_many(config.get(<span class="string">'requirement'</span>, <span class="string">'package'</span>).split(<span class="string">','</span>))</span><br><span class="line">        utils.exec_cmd(<span class="string">'rpm -ivh &#123;&#125;'</span>.format(lsyncd_rpm))</span><br><span class="line">        code, res = utils.exec_cmd(<span class="string">'which lsyncd'</span>)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: Lsyncd installation is complete. &#123;&#125;"</span>.format([res.strip()]), utils.GREEN)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: Lsyncd is installed &#123;&#125;"</span>.format([res.strip()]), utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if SyncUser is Created?</span></span><br><span class="line">    utils.printcolor(<span class="string">''</span>, utils.BLACK)</span><br><span class="line">    utils.printcolor(<span class="string">"2.Check if SyncUser is Created?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get all samba servers</span></span><br><span class="line">    hosts = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> section <span class="keyword">in</span> config.sections():</span><br><span class="line">        <span class="keyword">if</span> section.startswith(<span class="string">'smb-local'</span>):</span><br><span class="line">            hosts[section] = &#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> config.items(section)&#125;</span><br><span class="line">        <span class="keyword">elif</span> section.startswith(<span class="string">'smb-azure'</span>):</span><br><span class="line">            hosts[section] = &#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> config.items(section)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get local and azure servers</span></span><br><span class="line">    azure_hosts = []</span><br><span class="line">    local_hosts = []</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> hosts.keys():</span><br><span class="line">        <span class="keyword">if</span> key.startswith(<span class="string">'smb-local'</span>):</span><br><span class="line">            local_hosts.append(hosts[key])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            azure_hosts.append(hosts[key])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> hosts.values():</span><br><span class="line">        client = paramiko.SSHClient()</span><br><span class="line">        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        client.connect(host[<span class="string">'hostname'</span>], <span class="number">22</span>, username=host[<span class="string">'username'</span>], password=host[<span class="string">'password'</span>])</span><br><span class="line">        cmd = <span class="string">'id SyncUser'</span></span><br><span class="line">        stdin, stdout, stderr = client.exec_command(cmd)</span><br><span class="line">        stdout = stdout.read()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> stdout:</span><br><span class="line">            utils.printcolor(<span class="string">"[Error]: the SyncUser was not detected for &#123;&#125;"</span>.format(host[<span class="string">'hostname'</span>]), utils.RED)</span><br><span class="line">            utils.printcolor(<span class="string">"[Info]: Creating SyncUser for &#123;&#125;, please wait..."</span>.format(host[<span class="string">'hostname'</span>]), utils.BLUE)</span><br><span class="line">            cmd = <span class="string">'useradd SyncUser'</span></span><br><span class="line">            client.exec_command(cmd)</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: SyncUser is created"</span>, utils.GREEN)</span><br><span class="line">            utils.printcolor(<span class="string">''</span>, utils.BLACK)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: detected SyncUser in &#123;&#125;\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if can ssh pass the key?</span></span><br><span class="line">    utils.printcolor(<span class="string">"3.Check if can ssh pass the key?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">        key = os.path.join(basedir, <span class="string">'scripts/files/SyncUser_id_rsa'</span>)</span><br><span class="line">        private_key = paramiko.RSAKey.from_private_key_file(key)</span><br><span class="line">        client = paramiko.SSHClient()</span><br><span class="line">        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            client.connect(host[<span class="string">'hostname'</span>], <span class="number">22</span>, username=<span class="string">'SyncUser'</span>, pkey=private_key)</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: login &#123;&#125; with private key\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            utils.printcolor(<span class="string">"[Error]: &#123;&#125; for &#123;&#125;"</span>.format(str(e), host[<span class="string">'hostname'</span>]), utils.RED)</span><br><span class="line">            utils.printcolor(<span class="string">"[Info]: Initializing user permissions for &#123;&#125;, please wait..."</span>.format(host[<span class="string">'hostname'</span>]), utils.BLUE)</span><br><span class="line">            key = open(os.path.expanduser(os.path.join(basedir,<span class="string">'scripts/files/SyncUser_id_rsa.pub'</span>))).read()</span><br><span class="line">            deploy_key(key, host[<span class="string">'hostname'</span>], host[<span class="string">'username'</span>], host[<span class="string">'password'</span>], host[<span class="string">'sync_user'</span>])</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: Permission initialization succeeded in &#123;&#125;\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if the directory name conflicts?</span></span><br><span class="line">    utils.printcolor(<span class="string">"4.Check if the directory name conflicts?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line"></span><br><span class="line">    has_created_folders = []</span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        path_internal_in = host[<span class="string">'path_internal_in'</span>]</span><br><span class="line">        path_external_in = host[<span class="string">'path_external_in'</span>]</span><br><span class="line">        path_out = host[<span class="string">'path_out'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_internal_in):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_internal_in, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_external_in):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_external_in, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_out):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_out, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Directory deduplication</span></span><br><span class="line">    has_created_folders_unique = list(set(has_created_folders))</span><br><span class="line">    <span class="keyword">if</span> folder_name <span class="keyword">in</span> has_created_folders_unique:</span><br><span class="line">        utils.printcolor(<span class="string">"Error: Directory name conflict - &#123;&#125;, please change the directory name."</span>.format(folder_name),utils.RED)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: No directory conflict."</span>.format(folder_name),utils.GREEN)</span><br><span class="line">        utils.printcolor(<span class="string">""</span>, utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ask for confirm</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> args.force:</span><br><span class="line">        answer = utils.user_input(<span class="string">"Will create a directory and synchronization service,do you confirm? (Y/n) "</span>)</span><br><span class="line">        <span class="keyword">if</span> answer.lower().startswith(<span class="string">"n"</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># mail dict</span></span><br><span class="line">    msg_data = &#123;</span><br><span class="line">        <span class="string">'local_smb'</span>: &#123;<span class="string">'hosts'</span>: [], <span class="string">'services'</span>: []&#125;,</span><br><span class="line">        <span class="string">'azrue_smb'</span>: &#123;<span class="string">'hosts'</span>: []&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create device folder in Local Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        folder_path_internal_in = os.path.join(host[<span class="string">'path_internal_in'</span>], folder_name)</span><br><span class="line">        folder_path_external_in = os.path.join(host[<span class="string">'path_external_in'</span>], folder_name)</span><br><span class="line">        folder_path_out = os.path.join(host[<span class="string">'path_out'</span>], folder_name)</span><br><span class="line">        folder_path = [folder_path_internal_in, folder_path_external_in, folder_path_out]</span><br><span class="line">        mkdirs(host[<span class="string">'hostname'</span>],host[<span class="string">'username'</span>],host[<span class="string">'password'</span>],folder_path,host[<span class="string">'sync_user'</span>])</span><br><span class="line">        tmp_data = &#123;&#125;</span><br><span class="line">        tmp_data[<span class="string">'hostname'</span>] = host[<span class="string">'hostname'</span>]</span><br><span class="line">        tmp_data[<span class="string">'path'</span>] = folder_path</span><br><span class="line">        tmp_data[<span class="string">'folder_name'</span>] = folder_name</span><br><span class="line">        tmp_data[<span class="string">'folder_auth'</span>] = <span class="string">'2766'</span></span><br><span class="line">        tmp_data[<span class="string">'folder_group'</span>] = <span class="string">'SyncUser:Domain User'</span></span><br><span class="line">        tmp_data[<span class="string">'smb_path_internal_in'</span>] = host[<span class="string">'smb_path_internal_in'</span>]</span><br><span class="line">        tmp_data[<span class="string">'smb_path_external_in'</span>] = host[<span class="string">'smb_path_external_in'</span>]</span><br><span class="line">        tmp_data[<span class="string">'smb_path_out'</span>] = host[<span class="string">'smb_path_out'</span>]</span><br><span class="line">        tmp_data[<span class="string">'create_time'</span>] = datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        msg_data[<span class="string">'local_smb'</span>][<span class="string">'hosts'</span>].append(tmp_data)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success-LocalSamba]: &#123;&#125; is created in &#123;&#125;"</span>.format(folder_path, host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create device folder in Azrue Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">        folder_path_out = os.path.join(host[<span class="string">'path_out'</span>], folder_name)</span><br><span class="line">        folder_path = [folder_path_out]</span><br><span class="line">        mkdirs(host[<span class="string">'hostname'</span>], host[<span class="string">'username'</span>], host[<span class="string">'password'</span>], folder_path, host[<span class="string">'sync_user'</span>])</span><br><span class="line">        tmp_data = &#123;&#125;</span><br><span class="line">        tmp_data[<span class="string">'hostname'</span>] = host[<span class="string">'hostname'</span>]</span><br><span class="line">        tmp_data[<span class="string">'path'</span>] = folder_path</span><br><span class="line">        tmp_data[<span class="string">'folder_name'</span>] = folder_name</span><br><span class="line">        tmp_data[<span class="string">'folder_auth'</span>] = <span class="string">'2766'</span></span><br><span class="line">        tmp_data[<span class="string">'folder_group'</span>] = <span class="string">'SyncUser:Domain User'</span></span><br><span class="line">        tmp_data[<span class="string">'create_time'</span>] = datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        msg_data[<span class="string">'azrue_smb'</span>][<span class="string">'hosts'</span>].append(tmp_data)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success-AzureSamba]: &#123;&#125; is created in &#123;&#125;"</span>.format(folder_path, host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create Lsyncd services in Local Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> local_host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        key = os.path.join(basedir, <span class="string">'scripts/files/SyncUser_id_rsa'</span>)</span><br><span class="line">        <span class="keyword">for</span> azure_host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">            <span class="keyword">if</span> azure_host.has_key(<span class="string">'tag'</span>):</span><br><span class="line">                logfile = <span class="string">'Sync_'</span> + folder_name + <span class="string">'_DR'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logfile = <span class="string">'Sync_'</span> + folder_name</span><br><span class="line">            statusfile = logfile</span><br><span class="line">            source = os.path.join(local_host[<span class="string">'path_out'</span>],folder_name)</span><br><span class="line">            target = azure_host[<span class="string">'hostname'</span>] + <span class="string">':'</span> + os.path.join(azure_host[<span class="string">'path_out'</span>],folder_name)</span><br><span class="line">            rsh = azure_host[<span class="string">'sync_user'</span>]</span><br><span class="line">            sync_cfg_tpl = open(os.path.join(basedir, <span class="string">'scripts/files/sync-cfg.tpl'</span>)).read() % (logfile,logfile,statusfile,statusfile,source,target,key,rsh)</span><br><span class="line">            sync_init_tpl = open(os.path.join(basedir, <span class="string">'scripts/files/sync-init.tpl'</span>)).read() % (logfile,res.strip(),logfile,logfile,logfile)</span><br><span class="line">            f = open(os.path.join(<span class="string">'/etc'</span>,logfile + <span class="string">'.lua'</span>), <span class="string">'wb'</span>)</span><br><span class="line">            f.write(sync_cfg_tpl)</span><br><span class="line">            f.flush()</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">            f = open(os.path.join(<span class="string">'/etc/init.d'</span>,logfile), <span class="string">'wb'</span>)</span><br><span class="line">            f.write(sync_init_tpl)</span><br><span class="line">            f.flush()</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">            os.chmod(os.path.join(<span class="string">'/etc/init.d'</span>,logfile), <span class="number">0755</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                os.makedirs(os.path.join(<span class="string">'/var/log'</span>, logfile))</span><br><span class="line">            <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            system.enable_and_start_service(logfile)</span><br><span class="line"></span><br><span class="line">            tmp_data = &#123;&#125;</span><br><span class="line">            tmp_data[<span class="string">'name'</span>] = logfile</span><br><span class="line">            tmp_data[<span class="string">'log_file_path'</span>] = os.path.join(<span class="string">'/var/log'</span>, logfile)</span><br><span class="line">            tmp_data[<span class="string">'config_path'</span>] = os.path.join(<span class="string">'/etc'</span>, logfile + <span class="string">'.lua'</span>)</span><br><span class="line">            tmp_data[<span class="string">'init_path'</span>] = os.path.join(<span class="string">'/etc/init.d'</span>, logfile)</span><br><span class="line">            msg_data[<span class="string">'local_smb'</span>][<span class="string">'services'</span>].append(tmp_data)</span><br><span class="line"></span><br><span class="line">    utils.printcolor(<span class="string">"Congratulations!"</span>,utils.GREEN)</span><br><span class="line">    SentMail(msg_data, mail_to, mail_cc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;同步示例&quot;&gt;&lt;a href=&quot;#同步示例&quot; class=&quot;headerlink&quot; title=&quot;同步示例&quot;&gt;&lt;/a&gt;同步示例&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-188.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域账号密码自助-项目部署</title>
    <link href="http://blog.laohulab.com/uncategorized/4173984491.html"/>
    <id>http://blog.laohulab.com/uncategorized/4173984491.html</id>
    <published>2019-04-28T04:41:18.000Z</published>
    <updated>2019-05-01T06:29:37.759Z</updated>
    
    <content type="html"><![CDATA[<h5 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h5><p><code>Windows + Apache + Mod_Wsgi + Django + Mysql</code></p><blockquote class="pullquote note warning"><p>注意事项：Windows需要为英文版本，中文版本报错会有乱码！</p></blockquote><h5 id="安装Python2-7"><a href="#安装Python2-7" class="headerlink" title="安装Python2.7"></a>安装Python2.7</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv" title="https://www.python.org/downloads/">https://www.python.org/downloads/<i class="fa fa-external-link"></i></span></p><a id="more"></a><h5 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h5><h6 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h6><p><img src="/images/pasted-168.png" alt="upload successful"></p><p><img src="/images/pasted-169.png" alt="upload successful"></p><p><img src="/images/pasted-170.png" alt="upload successful"></p><p><img src="/images/pasted-171.png" alt="upload successful"></p><p><img src="/images/pasted-172.png" alt="upload successful"></p><p><img src="/images/pasted-173.png" alt="upload successful"></p><p><img src="/images/pasted-174.png" alt="upload successful"></p><p><img src="/images/pasted-175.png" alt="upload successful"></p><p><img src="/images/pasted-176.png" alt="upload successful"></p><h6 id="3-2-创建数据库"><a href="#3-2-创建数据库" class="headerlink" title="3.2 创建数据库"></a>3.2 创建数据库</h6><p><img src="/images/pasted-177.png" alt="upload successful"></p><p><img src="/images/pasted-178.png" alt="upload successful"></p><h5 id="4-创建虚拟环境"><a href="#4-创建虚拟环境" class="headerlink" title="4.创建虚拟环境"></a>4.创建虚拟环境</h5><blockquote class="pullquote note info"><ul><li>使不同应用开发环境独立</li><li>环境升级不影响其他应用，也不会影响全局的python环境</li><li>防止系统中出现包管理混乱和版本冲突</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装virtualenvwrapper</span></span><br><span class="line">pip install virtualenvwrapper-win</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建</span></span><br><span class="line">mkvirtualenv ADManager</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 进入虚拟机环境</span></span><br><span class="line">workon ADManager</span><br></pre></td></tr></table></figure><h5 id="5-离线安装-ldap-amp-mysql-python"><a href="#5-离线安装-ldap-amp-mysql-python" class="headerlink" title="5.离线安装 ldap &amp; mysql-python"></a>5.离线安装 ldap &amp; mysql-python</h5><blockquote class="pullquote note warning"><p>MySQL_python &amp; python_ldap 在windows上无法直接通过pip install 完成安装<br><span class="exturl" data-url="aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLw==" title="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/<i class="fa fa-external-link"></i></span> (解决方案)</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(ADManager) D:\&gt;<span class="built_in">cd</span> D:\ShareFloders\NG-IT\AD_Manager\package</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;dir</span><br><span class="line"> </span><br><span class="line"> Directory of D:\ShareFloders\NG-IT\AD_Manager\package</span><br><span class="line">03/19/2018  11:47 AM           821,050 MySQL_python-1.2.5-cp27-none-win_amd64.whl</span><br><span class="line">01/23/2018  10:55 PM         1,086,402 python_ldap-2.5.2-cp27-cp27m-win_amd64.whl</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;pip install MySQL_python-1.2.5-cp27-none-win_amd64.whl</span><br><span class="line">Successfully installed MySQL-python-1.2.5</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;pip install python_ldap-2.5.2-cp27-cp27m-win_amd64.whl</span><br><span class="line">Successfully installed python-ldap-2.5.2</span><br></pre></td></tr></table></figure><h5 id="6-部署Django环境"><a href="#6-部署Django环境" class="headerlink" title="6.部署Django环境"></a>6.部署Django环境</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><h5 id="7-上传CODE至服务器"><a href="#7-上传CODE至服务器" class="headerlink" title="7.上传CODE至服务器"></a>7.上传CODE至服务器</h5><p>省略</p><h5 id="8-配置数据库信息"><a href="#8-配置数据库信息" class="headerlink" title="8.配置数据库信息"></a>8.配置数据库信息</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">settings.py</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'DATABASE NAME'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'USER'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'PASSWORD'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'DATABASE IP'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-配置邮件服务器"><a href="#9-配置邮件服务器" class="headerlink" title="9.配置邮件服务器"></a>9.配置邮件服务器</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">settings.py</span><br><span class="line"><span class="comment"># Email Config</span></span><br><span class="line">EMAIL_HOST = <span class="string">'MAIL Server'</span></span><br><span class="line">EMAIL_PORT = <span class="string">'MAIL PORT'</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'USER'</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'PASSWORS'</span></span><br><span class="line">EMAIL_USE_TLS = <span class="literal">True</span></span><br><span class="line">EMAIL_FROM = <span class="string">'MAIL FROM'</span></span><br></pre></td></tr></table></figure><h5 id="10-配置Apache"><a href="#10-配置Apache" class="headerlink" title="10.配置Apache"></a>10.配置Apache</h5><h6 id="10-1-MS-VC14安装"><a href="#10-1-MS-VC14安装" class="headerlink" title="10.1 MS VC14安装"></a>10.1 MS VC14安装</h6><p><img src="/images/pasted-179.png" alt="upload successful"></p><p>Apache依赖于 MicroSoft VC14，需要安装！</p><h6 id="10-2-官网下载"><a href="#10-2-官网下载" class="headerlink" title="10.2 官网下载"></a>10.2 官网下载</h6><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=" title="https://www.apachehaus.com/cgi-bin/download.plx">https://www.apachehaus.com/cgi-bin/download.plx<i class="fa fa-external-link"></i></span></p><p>httpd-2.4.34-o102o-x64-vc14.zip</p><p><img src="/images/pasted-181.png" alt="upload successful"></p><h6 id="10-3-Mod-Wsgi"><a href="#10-3-Mod-Wsgi" class="headerlink" title="10.3 Mod_Wsgi"></a>10.3 Mod_Wsgi</h6><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dyYWhhbUR1bXBsZXRvbi9tb2Rfd3NnaQ==" title="https://github.com/GrahamDumpleton/mod_wsgi">https://github.com/GrahamDumpleton/mod_wsgi<i class="fa fa-external-link"></i></span></p><p>mod_wsgi-windows-4.4.12.rar</p><h6 id="10-4-配置Apache"><a href="#10-4-配置Apache" class="headerlink" title="10.4 配置Apache"></a>10.4 配置Apache</h6><p>解压httpd-2.4.34-o102o-x64-vc14.zip,将apache24目录放至 D:\apache24</p><p>解压mod_wsgi-windows-4.4.12.rar，将‪mod_wsgi-windows-4.4.12\Apache24-win64-VC10\modules\mod_wsgi-py27-VC9.so文件放至D:\apache24\modules目录</p><p><img src="/images/pasted-182.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf，添加mod_wsgi.so 模块</p><p><img src="/images/pasted-183.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf,修改SRVROOT目录</p><p><img src="/images/pasted-184.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf,打开虚拟主机</p><p><img src="/images/pasted-185.png" alt="upload successful"></p><p>修改D:\Apache24\conf\extra\httpd-vhosts.conf</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin jianhu.yong@genewiz.com.cn</span><br><span class="line">    DocumentRoot <span class="string">"D:/app01/ADManager"</span></span><br><span class="line">    ServerName pwd.local.genewiz.com</span><br><span class="line">    ErrorLog <span class="string">"logs/pwd.local.genewiz.com-error.log"</span></span><br><span class="line">    CustomLog <span class="string">"logs/pwd.local.genewiz.com-access.log"</span> common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">WSGIScriptAlias / D:/app01/ADManager/ADManager/wsgi.py</span><br><span class="line">&lt;Directory D:/app01/ADManager/ADManager/&gt;</span><br><span class="line">&lt;Files wsgi.py&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line">Alias /static/ D:/app01/ADManager/statics/</span><br><span class="line">&lt;Directory D:/app01/ADManager/statics/&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># virtual env</span></span><br><span class="line">WSGIPythonPath D:/app01/ADManager;D:/python-envs/ADManager/Lib/site-packages</span><br></pre></td></tr></table></figure><h6 id="10-5-安装Apache服务"><a href="#10-5-安装Apache服务" class="headerlink" title="10.5 安装Apache服务"></a>10.5 安装Apache服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Apache24\bin</span><br><span class="line">httpd.exe -k install</span><br><span class="line">The <span class="string">"Apache2.4"</span> is successfuly installed .</span><br><span class="line">Testing httpd.conf</span><br><span class="line">Error: reported here must be corrected before the service can be started.</span><br></pre></td></tr></table></figure><h6 id="10-6-启动Apache服务"><a href="#10-6-启动Apache服务" class="headerlink" title="10.6 启动Apache服务"></a>10.6 启动Apache服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Apache24\bin</span><br><span class="line">net start Apache2.4</span><br><span class="line">Apache2.4 服务正在启动...</span><br><span class="line">Apache2.4 服务启动成功。</span><br></pre></td></tr></table></figure><h6 id="10-7-Apache服务管理工具"><a href="#10-7-Apache服务管理工具" class="headerlink" title="10.7 Apache服务管理工具"></a>10.7 Apache服务管理工具</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">启动D:\Apache24\bin\ApacheMonitor.exe</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-186.png" alt="upload successful"></p><h6 id="10-8-Apache运行账号权限设置"><a href="#10-8-Apache运行账号权限设置" class="headerlink" title="10.8 Apache运行账号权限设置"></a>10.8 Apache运行账号权限设置</h6><p>默认服务 没有权限执行powershell 需要在服务器上面设置登录</p><p><img src="/images/pasted-187.png" alt="upload successful"></p><h5 id="11-其他"><a href="#11-其他" class="headerlink" title="11.其他"></a>11.其他</h5><blockquote><p>ImportError: No system module ‘pywintypes’ (pywintypes27.dll) 错误</p><p>拷贝 Lib\site-packages\pywin32_system32目录下的pywintypes27.dll pythoncom27.dll 至Lib\site-packages\win32\lib目录下即可！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;部署方式&quot;&gt;&lt;a href=&quot;#部署方式&quot; class=&quot;headerlink&quot; title=&quot;部署方式&quot;&gt;&lt;/a&gt;部署方式&lt;/h5&gt;&lt;p&gt;&lt;code&gt;Windows + Apache + Mod_Wsgi + Django + Mysql&lt;/code&gt;&lt;/p&gt;
&lt;blockquote class=&quot;pullquote note warning&quot;&gt;&lt;p&gt;注意事项：Windows需要为英文版本，中文版本报错会有乱码！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;安装Python2-7&quot;&gt;&lt;a href=&quot;#安装Python2-7&quot; class=&quot;headerlink&quot; title=&quot;安装Python2.7&quot;&gt;&lt;/a&gt;安装Python2.7&lt;/h5&gt;&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv&quot; title=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域账号密码自助-前端DEMO</title>
    <link href="http://blog.laohulab.com/uncategorized/586407947.html"/>
    <id>http://blog.laohulab.com/uncategorized/586407947.html</id>
    <published>2019-04-28T04:23:55.000Z</published>
    <updated>2019-05-01T06:32:43.405Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/pasted-167.png" alt="upload successful"><br><a id="more"></a><br><img src="/images/pasted-163.png" alt="upload successful"><br><img src="/images/pasted-164.png" alt="upload successful"><br><img src="/images/pasted-165.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/pasted-167.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
