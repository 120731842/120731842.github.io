<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Happy Every Day</title>
  
  <subtitle>No Pain No Gain</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.laohulab.com/"/>
  <updated>2019-05-01T13:44:31.369Z</updated>
  <id>http://blog.laohulab.com/</id>
  
  <author>
    <name>Jianhu Yong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>资产管理系统(未完待续)</title>
    <link href="http://blog.laohulab.com/Django/3392313719.html"/>
    <id>http://blog.laohulab.com/Django/3392313719.html</id>
    <published>2019-04-29T08:12:00.000Z</published>
    <updated>2019-05-01T13:44:31.369Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h5><p><img src="/images/pasted-268.png" alt="upload successful"><br><img src="/images/pasted-269.png" alt="upload successful"><br><img src="/images/pasted-270.png" alt="upload successful"><br><img src="/images/pasted-271.png" alt="upload successful"><br><img src="/images/pasted-272.png" alt="upload successful"><br><img src="/images/pasted-273.png" alt="upload successful"><br><img src="/images/pasted-274.png" alt="upload successful"><br><img src="/images/pasted-275.png" alt="upload successful"></p><h5 id="数据库表结构"><a href="#数据库表结构" class="headerlink" title="数据库表结构"></a>数据库表结构</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line">HD_INTERFACE = (</span><br><span class="line">    (<span class="string">'SSD'</span>, <span class="string">'SSD'</span>),</span><br><span class="line">    (<span class="string">'SAS'</span>, <span class="string">'SAS'</span>),</span><br><span class="line">    (<span class="string">'SATA'</span>, <span class="string">'SATA'</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">MEM_INTERFACE = (</span><br><span class="line">    (<span class="string">'DDR3'</span>, <span class="string">'DDR3'</span>),</span><br><span class="line">    (<span class="string">'DDR4'</span>, <span class="string">'DDR4'</span>),</span><br><span class="line">    (<span class="string">'Unknown'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">STATUS = (</span><br><span class="line">    (<span class="string">'1'</span>, <span class="string">'使用中'</span>),</span><br><span class="line">    (<span class="string">'2'</span>, <span class="string">'未使用'</span>),</span><br><span class="line">    (<span class="string">'3'</span>, <span class="string">'故障'</span>),</span><br><span class="line">    (<span class="string">'4'</span>, <span class="string">'报废'</span>),</span><br><span class="line">    (<span class="string">'5'</span>, <span class="string">'其他'</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">OS_TYPE = (</span><br><span class="line">    (<span class="string">'Linux'</span>, <span class="string">'Linux'</span>),</span><br><span class="line">    (<span class="string">'Windows'</span>, <span class="string">'Windows'</span>),</span><br><span class="line">    (<span class="string">'Other'</span>, <span class="string">'Other'</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTH_TYPE = (</span><br><span class="line">    (<span class="string">'PWD'</span>, <span class="string">'密码认证'</span>),</span><br><span class="line">    (<span class="string">'KEY'</span>, <span class="string">'密钥认证'</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 定义服务器认证信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    auth_type = models.CharField(max_length=<span class="number">10</span>, choices=AUTH_TYPE, default=<span class="string">'PWD'</span>, verbose_name=<span class="string">'认证类型'</span>)</span><br><span class="line">    user = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'认证用户'</span>)</span><br><span class="line">    pwd = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'认证密码'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'认证信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.user + <span class="string">'-'</span> + self.auth_type</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HardDiskInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    物理磁盘信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    wwn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'序列号'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    model = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘型号'</span>)</span><br><span class="line">    size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘大小'</span>)</span><br><span class="line">    slot = models.CharField(max_length=<span class="number">2</span>, verbose_name=<span class="string">'插槽位置'</span>)</span><br><span class="line">    interface = models.CharField(max_length=<span class="number">10</span>, choices=HD_INTERFACE, verbose_name=<span class="string">'接口类型'</span>)</span><br><span class="line">    manufacturer = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'硬盘厂商'</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'硬盘信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.wwn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemoryInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    内存信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    sn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'序列号'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存大小'</span>)</span><br><span class="line">    slot = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'插槽位置'</span>)</span><br><span class="line">    interface = models.CharField(max_length=<span class="number">20</span>, choices=MEM_INTERFACE, verbose_name=<span class="string">'接口类型'</span>)</span><br><span class="line">    speed = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存频率'</span>)</span><br><span class="line">    manufacturer = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存厂商'</span>)</span><br><span class="line">    voltage = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'内存电压'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'内存信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.sn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NetworkInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    网络信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'网卡名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    mac = models.CharField(max_length=<span class="number">48</span>, verbose_name=<span class="string">'网卡地址'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    ip = models.GenericIPAddressField(verbose_name=<span class="string">'IP地址'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    mask = models.GenericIPAddressField(verbose_name=<span class="string">'子网掩码'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gw = models.GenericIPAddressField(verbose_name=<span class="string">'网关地址'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    host = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'关联主机'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    primary = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">'默认地址'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'网络信息'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.host.sn + <span class="string">"-"</span> + self.ip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IdcInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    数据中心或机房信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(<span class="string">"机房名称"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    address = models.CharField(<span class="string">"机房地址"</span>, max_length=<span class="number">100</span>, null=<span class="literal">True</span>)</span><br><span class="line">    tel = models.CharField(<span class="string">"机房电话"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    contact = models.CharField(<span class="string">"客户经理"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    contact_phone = models.CharField(<span class="string">"移动电话"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    jigui = models.CharField(<span class="string">"机柜信息"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    ip_range = models.CharField(<span class="string">"IP范围"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    bandwidth = models.CharField(<span class="string">"接入带宽"</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'机房管理'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'机房管理'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CabinetInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    机柜信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'机柜名称'</span>)</span><br><span class="line">    cab_lever = models.CharField(max_length=<span class="number">2</span>, verbose_name=<span class="string">u'机器U数,1-10分别代表1~10层'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'机柜信息表'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HostGroup</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    主机组信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    name = models.CharField(<span class="string">"组名"</span>, max_length=<span class="number">30</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    desc = models.CharField(<span class="string">"描述"</span>, max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">'属组管理'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'属组管理'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhysicalHostInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    物理主机信息</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    brand = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'品牌'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    model = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'型号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sn = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'序列号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    status = models.CharField(max_length=<span class="number">10</span>, choices=STATUS, verbose_name=<span class="string">'使用状态'</span>)</span><br><span class="line">    use_department = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'使用部门'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    asset_no = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'资产编号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    idc = models.ForeignKey(<span class="string">'IdcInfo'</span>, verbose_name=<span class="string">'机房'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cabinet = models.ForeignKey(<span class="string">'CabinetInfo'</span>, verbose_name=<span class="string">'机柜'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    warranty_time = models.DateField(verbose_name=<span class="string">'质保时间'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    group = models.ForeignKey(<span class="string">'HostGroup'</span>, verbose_name=<span class="string">'主机组'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os_type = models.CharField(max_length=<span class="number">10</span>, choices=OS_TYPE, verbose_name=<span class="string">'操作系统'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'操作系统'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    os_kernel = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'内核'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'主机名'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    manage_ip = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'管理IP'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'控制器名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_sn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'控制器序列号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    raid_adp_cache_size = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'缓存大小'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_no = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'数量'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_brand = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'品牌'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_model = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'型号'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_core = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'核心数'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    cpu_threads_per_core = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'线程数/核'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    comment = models.TextField(verbose_name=<span class="string">'备注信息'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    auth_info = models.ForeignKey(AuthInfo, verbose_name=<span class="string">'认证信息'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'物理服务器'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.sn</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_nets</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.networkinfo_set.all()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_default_ip</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.networkinfo_set.get(primary=<span class="literal">True</span>).ip</span><br><span class="line">    get_default_ip.short_description = <span class="string">'默认IP'</span></span><br><span class="line">    <span class="comment"># def get_cpus(self):</span></span><br><span class="line">    <span class="comment">#     return self.cpuinfo_set.all().count()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VirtualHostInfo</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    sn = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'序列号'</span>)</span><br><span class="line">    status = models.CharField(max_length=<span class="number">10</span>, choices=STATUS, verbose_name=<span class="string">'使用状态'</span>)</span><br><span class="line">    use_department = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'使用部门'</span>)</span><br><span class="line">    group = models.ForeignKey(<span class="string">'HostGroup'</span>, verbose_name=<span class="string">'主机组'</span>)</span><br><span class="line">    os_type = models.CharField(max_length=<span class="number">10</span>, choices=OS_TYPE, verbose_name=<span class="string">'操作系统'</span>)</span><br><span class="line">    os = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'操作系统'</span>)</span><br><span class="line">    os_kernel = models.CharField(max_length=<span class="number">60</span>, verbose_name=<span class="string">'内核'</span>)</span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">'主机名'</span>)</span><br><span class="line">    cpu_no = models.CharField(max_length=<span class="number">10</span>, verbose_name=<span class="string">'数量'</span>)</span><br><span class="line">    phy = models.ForeignKey(<span class="string">'PhysicalHostInfo'</span>, verbose_name=<span class="string">'宿主机信息'</span>)</span><br><span class="line">    mem = models.ForeignKey(<span class="string">'MemoryInfo'</span>, verbose_name=<span class="string">'内存信息'</span>)</span><br><span class="line">    hd = models.ForeignKey(<span class="string">'HardDiskInfo'</span>, verbose_name=<span class="string">'硬盘信息'</span>)</span><br><span class="line">    net = models.ForeignKey(<span class="string">'NetworkInfo'</span>, verbose_name=<span class="string">'网络信息'</span>)</span><br><span class="line">    comment = models.TextField(verbose_name=<span class="string">'备注信息'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u'虚拟服务器'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.hostname</span><br></pre></td></tr></table></figure>       <h5 id="获取资产信息"><a href="#获取资产信息" class="headerlink" title="获取资产信息"></a>获取资产信息</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'jianhu.yong'</span></span><br><span class="line">__date__ = <span class="string">'19-4-10 下午4:48'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> ansible <span class="keyword">import</span> constants</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</span><br><span class="line"><span class="keyword">from</span> ansible.parsing.dataloader <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> ansible.playbook.play <span class="keyword">import</span> Play</span><br><span class="line"><span class="keyword">from</span> ansible.executor.task_queue_manager <span class="keyword">import</span> TaskQueueManager</span><br><span class="line"><span class="keyword">from</span> ansible.executor.playbook_executor <span class="keyword">import</span> PlaybookExecutor</span><br><span class="line"><span class="keyword">from</span> ansible.plugins.callback <span class="keyword">import</span> CallbackBase</span><br><span class="line"><span class="keyword">from</span> ansible.inventory.manager <span class="keyword">import</span> InventoryManager</span><br><span class="line"><span class="keyword">from</span> ansible.vars.manager <span class="keyword">import</span> VariableManager</span><br><span class="line"><span class="keyword">from</span> ansible.inventory.host <span class="keyword">import</span> Host, Group</span><br><span class="line"><span class="keyword">from</span> cmdb.settings <span class="keyword">import</span> BASE_DIR</span><br><span class="line"><span class="keyword">from</span> cmdb.settings <span class="keyword">import</span> SSH_PRIVATE_KEY_FILE, SSH_USER</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> asset.models <span class="keyword">import</span> PhysicalHostInfo, NetworkInfo, MemoryInfo, HardDiskInfo</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelResultsCollector</span><span class="params">(CallbackBase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, sn, *args, **kwargs)</span>:</span></span><br><span class="line">        super(ModelResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.host_ok = &#123;&#125;</span><br><span class="line">        self.host_unreachable = &#123;&#125;</span><br><span class="line">        self.host_failed = &#123;&#125;</span><br><span class="line">        self.sn = sn</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_unreachable</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.host_unreachable[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_ok</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.host_ok[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">        task_name = result.task_name</span><br><span class="line">        <span class="keyword">if</span> task_name == <span class="string">'setup'</span>:</span><br><span class="line">            host = result._host.name</span><br><span class="line">            facts = result._result.get(<span class="string">'ansible_facts'</span>)</span><br><span class="line">            <span class="keyword">if</span> facts:</span><br><span class="line">                product_serial = facts.get(<span class="string">'ansible_product_serial'</span>, <span class="string">'NA'</span>)</span><br><span class="line">                <span class="keyword">if</span> product_serial != <span class="string">'NA'</span> <span class="keyword">and</span> <span class="string">'VMware'</span> <span class="keyword">in</span> product_serial:</span><br><span class="line">                    virtual_type = <span class="string">'vmware'</span></span><br><span class="line">                <span class="keyword">elif</span> product_serial != <span class="string">'NA'</span>:</span><br><span class="line">                    virtual_type = <span class="string">'physical'</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    virtual_type = facts.get(<span class="string">'facter_virtual'</span>, <span class="string">'NA'</span>)</span><br><span class="line"></span><br><span class="line">                self.sn_new = product_serial</span><br><span class="line"></span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=product_serial)</span><br><span class="line">                obj.brand = facts.get(<span class="string">'ansible_system_vendor'</span>)</span><br><span class="line">                obj.model = facts.get(<span class="string">'ansible_product_name'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取操作系统信息</span></span><br><span class="line">                obj.os_type = facts.get(<span class="string">'ansible_system'</span>)</span><br><span class="line">                obj.os = facts.get(<span class="string">'ansible_distribution'</span>)</span><br><span class="line">                obj.os_kernel = facts.get(<span class="string">'ansible_kernel'</span>)</span><br><span class="line">                obj.hostname = facts.get(<span class="string">'ansible_nodename'</span>)</span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取CPU信息</span></span><br><span class="line">                cpu_no = facts.get(<span class="string">'ansible_processor_count'</span>)</span><br><span class="line">                cpu_model = facts.get(<span class="string">'ansible_processor'</span>)[<span class="number">-1</span>]</span><br><span class="line">                cpu_brand = facts.get(<span class="string">'ansible_processor'</span>)[<span class="number">-2</span>]</span><br><span class="line">                cpu_core = facts.get(<span class="string">'ansible_processor_cores'</span>)</span><br><span class="line">                cpu_threads_per_core = facts.get(<span class="string">'ansible_processor_threads_per_core'</span>)</span><br><span class="line"></span><br><span class="line">                obj.cpu_no = cpu_no</span><br><span class="line">                obj.cpu_model = cpu_model</span><br><span class="line">                obj.cpu_brand = cpu_brand</span><br><span class="line">                obj.cpu_core = cpu_core</span><br><span class="line">                obj.cpu_threads_per_core = cpu_threads_per_core</span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取网络信息</span></span><br><span class="line">                interfaces_info = &#123;&#125;</span><br><span class="line">                valid_interfaces = []</span><br><span class="line">                interfaces = facts.get(<span class="string">'ansible_interfaces'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'lo'</span> <span class="keyword">in</span> interfaces:</span><br><span class="line">                    interfaces.remove(<span class="string">'lo'</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'w1g1'</span> <span class="keyword">in</span> interfaces:</span><br><span class="line">                    interfaces.remove(<span class="string">'w1g1'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> interface <span class="keyword">in</span> interfaces:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> interface.startswith(<span class="string">'vir'</span>):</span><br><span class="line">                        valid_interfaces.append(interface)</span><br><span class="line"></span><br><span class="line">                default_interface = facts.get(<span class="string">'ansible_default_ipv4'</span>).get(<span class="string">'interface'</span>)</span><br><span class="line">                default_gw = facts.get(<span class="string">'ansible_default_ipv4'</span>).get(<span class="string">'gateway'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> interface <span class="keyword">in</span> valid_interfaces:</span><br><span class="line">                    interface_info = facts.get(<span class="string">'ansible_&#123;&#125;'</span>.format(interface))</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> interface_info.get(<span class="string">'active'</span>):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> interface_info.has_key(<span class="string">'ipv4'</span>):</span><br><span class="line">                        address = interface_info.get(<span class="string">'ipv4'</span>).get(<span class="string">'address'</span>)</span><br><span class="line">                        netmask = interface_info.get(<span class="string">'ipv4'</span>).get(<span class="string">'netmask'</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        address = <span class="literal">None</span></span><br><span class="line">                        netmask = <span class="literal">None</span></span><br><span class="line">                    macaddress = interface_info.get(<span class="string">'macaddress'</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> interface == default_interface:</span><br><span class="line">                        primary = <span class="literal">True</span></span><br><span class="line">                        gateway = default_gw</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        primary = <span class="literal">False</span></span><br><span class="line">                        gateway = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">                    interfaces_info[interface] = dict(</span><br><span class="line">                        address=address,</span><br><span class="line">                        netmask=netmask,</span><br><span class="line">                        macaddress= macaddress,</span><br><span class="line">                        primary=primary,</span><br><span class="line">                        gateway=gateway</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                ip_list = []</span><br><span class="line">                <span class="keyword">for</span> k, v <span class="keyword">in</span> interfaces_info.items():</span><br><span class="line">                    <span class="keyword">if</span> v.get(<span class="string">'primary'</span>):</span><br><span class="line">                        net_ins, status = NetworkInfo.objects.get_or_create(primary=<span class="literal">True</span>,ip=v.get(<span class="string">'address'</span>))</span><br><span class="line">                        net_ins.primary = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> v.get(<span class="string">'address'</span>):</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        net_ins, status = NetworkInfo.objects.get_or_create(primary=<span class="literal">False</span>, ip=v.get(<span class="string">'address'</span>))</span><br><span class="line">                        net_ins.primary = <span class="literal">False</span></span><br><span class="line">                    ip_list.append(v.get(<span class="string">'address'</span>))</span><br><span class="line">                    net_ins.name = k</span><br><span class="line">                    net_ins.mac = v.get(<span class="string">'macaddress'</span>)</span><br><span class="line">                    <span class="keyword">if</span> v.get(<span class="string">'address'</span>):</span><br><span class="line">                        net_ins.ip = v.get(<span class="string">'address'</span>)</span><br><span class="line">                    net_ins.mask = v.get(<span class="string">'netmask'</span>)</span><br><span class="line">                    net_ins.gw = v.get(<span class="string">'gateway'</span>, <span class="literal">None</span>)</span><br><span class="line">                    net_ins.host = obj</span><br><span class="line">                    net_ins.save()</span><br><span class="line">                net_ins = NetworkInfo.objects.filter(host_id=obj.id, primary=<span class="literal">False</span>).exclude(ip__in=ip_list)</span><br><span class="line">                <span class="keyword">if</span> net_ins:</span><br><span class="line">                    net_ins.delete()</span><br><span class="line"></span><br><span class="line">                <span class="string">"""</span></span><br><span class="line"><span class="string">                针对虚拟机和无法获取序列号的物理机做特殊处理</span></span><br><span class="line"><span class="string">                1、vmware虚拟机有序列号，但是太长，无意义</span></span><br><span class="line"><span class="string">                2、kvm虚拟机无序列号</span></span><br><span class="line"><span class="string">                3、少数物理机无法正常获取序列号，需要手工维护</span></span><br><span class="line"><span class="string">                """</span></span><br><span class="line">                <span class="keyword">if</span> virtual_type == <span class="string">'physical'</span> <span class="keyword">and</span> product_serial != <span class="string">'NA'</span>:  <span class="comment"># 物理机能正常获取到序列号的情况</span></span><br><span class="line">                    obj.product_serial = product_serial</span><br><span class="line">                <span class="keyword">elif</span> virtual_type != <span class="string">'physical'</span>:  <span class="comment"># 虚拟机</span></span><br><span class="line">                    obj.product_serial = <span class="string">"&#123;0&#125;-&#123;1&#125;"</span>.format(virtual_type, host)</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 物理机无法正常获取产品序列号，需要手动更新</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">                obj.save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> task_name == <span class="string">'mem'</span>:</span><br><span class="line">            mem_info = []</span><br><span class="line">            result = result._result.get(<span class="string">'stdout'</span>).split(<span class="string">'\n\n'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> i.startswith(<span class="string">'Handle'</span>):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                tmp = i.split(<span class="string">'\n\t'</span>)</span><br><span class="line">                mem_dict = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> tmp:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">not</span> <span class="keyword">in</span> j:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        k,v = j.split(<span class="string">':'</span>)</span><br><span class="line">                        mem_dict[k.strip()] = v.strip()</span><br><span class="line">                mem_info.append(mem_dict)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> self.sn == self.sn_new:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn_new)</span><br><span class="line">            sn_list = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> mem_info:</span><br><span class="line">                <span class="keyword">if</span> i.has_key(<span class="string">'Size'</span>) <span class="keyword">and</span> i.get(<span class="string">'Size'</span>).endswith(<span class="string">'MB'</span>):</span><br><span class="line">                    size = i.get(<span class="string">'Size'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    slot = i.get(<span class="string">'Locator'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    interface = i.get(<span class="string">'Type'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    speed = i.get(<span class="string">'Speed'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    manufacturer = i.get(<span class="string">'Manufacturer'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line">                    sn = i.get(<span class="string">'Serial Number'</span>, <span class="literal">None</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> sn <span class="keyword">or</span> sn == <span class="string">'None'</span>:</span><br><span class="line">                        h = hashlib.md5()</span><br><span class="line">                        h.update(obj.sn+slot)</span><br><span class="line">                        sn = h.hexdigest()</span><br><span class="line">                    sn_list.append(sn)</span><br><span class="line">                    voltage = i.get(<span class="string">'Configured Voltage'</span>, <span class="string">'Unknown'</span>)</span><br><span class="line"></span><br><span class="line">                    mem_ins, status = MemoryInfo.objects.get_or_create(sn=sn)</span><br><span class="line">                    mem_ins.sn = sn</span><br><span class="line">                    mem_ins.size = size</span><br><span class="line">                    mem_ins.slot = slot</span><br><span class="line">                    mem_ins.interface = interface</span><br><span class="line">                    mem_ins.speed = speed</span><br><span class="line">                    mem_ins.manufacturer = manufacturer</span><br><span class="line">                    mem_ins.voltage = voltage</span><br><span class="line">                    mem_ins.host = obj</span><br><span class="line">                    mem_ins.save()</span><br><span class="line">            mem_ins = MemoryInfo.objects.filter(host_id=obj.id).exclude(sn__in=sn_list)</span><br><span class="line">            <span class="keyword">if</span> mem_ins:</span><br><span class="line">                mem_ins.delete()</span><br><span class="line">        <span class="keyword">elif</span> task_name == <span class="string">'hd'</span>:</span><br><span class="line">            <span class="keyword">if</span> self.sn == self.sn_new:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                obj, status = PhysicalHostInfo.objects.get_or_create(sn=self.sn_new)</span><br><span class="line">            result = result._result.get(<span class="string">'stdout'</span>)</span><br><span class="line">            <span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">            raid_adp_name = re.search(<span class="string">'Product Name:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">            raid_adp_sn = re.search(<span class="string">'Serial No:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">            raid_adp_cache_size = re.search(<span class="string">'Memory:.+'</span>, result).group().split(<span class="string">':'</span>)[<span class="number">-1</span>].strip()</span><br><span class="line"></span><br><span class="line">            obj.raid_adp_name = raid_adp_name</span><br><span class="line">            obj.raid_adp_sn = raid_adp_sn</span><br><span class="line">            obj.raid_adp_cache_size = raid_adp_cache_size</span><br><span class="line">            obj.save()</span><br><span class="line"></span><br><span class="line">            s = re.search(<span class="string">'Physical Disk:.+alert : No'</span>, result, flags=re.DOTALL).group()</span><br><span class="line"></span><br><span class="line">            hd_info = s.split(<span class="string">'\n\n\n\n'</span>)</span><br><span class="line"></span><br><span class="line">            wwn_list = []</span><br><span class="line">            <span class="keyword">for</span> hd <span class="keyword">in</span> hd_info:</span><br><span class="line">                slot = re.search(<span class="string">'Slot Number:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                wwn = re.search(<span class="string">'WWN:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                interface = re.search(<span class="string">'PD Type:.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                size = re.search(<span class="string">'Raw Size:.+B'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].strip()</span><br><span class="line">                manufacturer = re.search(<span class="string">'Inquiry Data.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].split()[<span class="number">0</span>].strip()</span><br><span class="line">                model = re.search(<span class="string">'Inquiry Data.+'</span>, hd).group().split(<span class="string">":"</span>)[<span class="number">-1</span>].split()[<span class="number">1</span>].strip()</span><br><span class="line"></span><br><span class="line">                wwn_list.append(wwn)</span><br><span class="line"></span><br><span class="line">                hd_ins, status = HardDiskInfo.objects.get_or_create(wwn=wwn)</span><br><span class="line">                hd_ins.slot = slot</span><br><span class="line">                hd_ins.wwn = wwn</span><br><span class="line">                hd_ins.interface = interface</span><br><span class="line">                hd_ins.size = size</span><br><span class="line">                hd_ins.manufacturer = manufacturer</span><br><span class="line">                hd_ins.model = model</span><br><span class="line">                hd_ins.host = obj</span><br><span class="line">                hd_ins.save()</span><br><span class="line"></span><br><span class="line">            hd_ins = HardDiskInfo.objects.filter(host_id=obj.id).exclude(wwn__in=wwn_list)</span><br><span class="line">            <span class="keyword">if</span> hd_ins:</span><br><span class="line">                hd_ins.delete()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_failed</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.host_failed[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlayBookResultsCollector</span><span class="params">(CallbackBase)</span>:</span></span><br><span class="line">    CALLBACK_VERSION = <span class="number">2.0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        super(PlayBookResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.task_ok = &#123;&#125;</span><br><span class="line">        self.task_skipped = &#123;&#125;</span><br><span class="line">        self.task_failed = &#123;&#125;</span><br><span class="line">        self.task_status = &#123;&#125;</span><br><span class="line">        self.task_unreachable = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_ok</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.task_ok[result._host.get_name()]  = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_failed</span><span class="params">(self, result, *args, **kwargs)</span>:</span></span><br><span class="line">        self.task_failed[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_unreachable</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.task_unreachable[result._host.get_name()] = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_runner_on_skipped</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        self.task_ok[result._host.get_name()]  = result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">v2_playbook_on_stats</span><span class="params">(self, stats)</span>:</span></span><br><span class="line">        hosts = sorted(stats.processed.keys())</span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> hosts:</span><br><span class="line">            t = stats.summarize(h)</span><br><span class="line">            self.task_status[h] = &#123;</span><br><span class="line">                <span class="string">"ok"</span>:t[<span class="string">'ok'</span>],</span><br><span class="line">                <span class="string">"changed"</span> : t[<span class="string">'changed'</span>],</span><br><span class="line">                <span class="string">"unreachable"</span>:t[<span class="string">'unreachable'</span>],</span><br><span class="line">                <span class="string">"skipped"</span>:t[<span class="string">'skipped'</span>],</span><br><span class="line">                <span class="string">"failed"</span>:t[<span class="string">'failures'</span>]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomInventory</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, resource, auth_type)</span>:</span></span><br><span class="line">        self.resource = resource</span><br><span class="line">        self.auth_type = auth_type</span><br><span class="line">        self.loader = DataLoader()</span><br><span class="line">        self.inventory = InventoryManager(loader=self.loader, sources=[os.path.join(BASE_DIR, <span class="string">'conf/inventory.conf'</span>)])</span><br><span class="line">        <span class="comment"># self.variable_manager.set_inventory(self.inventory)</span></span><br><span class="line">        self.variable_manager = VariableManager(loader=self.loader, inventory=self.inventory)</span><br><span class="line">        self.dynamic_inventory()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dynamic_inventory</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        添加主机信息</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(self.resource, list):</span><br><span class="line">            <span class="keyword">if</span> self.auth_type == <span class="string">'pwd_login'</span>:</span><br><span class="line">                self.add_dynamic_group(self.resource, self.auth_type)</span><br><span class="line">            <span class="keyword">elif</span> self.auth_type == <span class="string">'key_login'</span>:</span><br><span class="line">                self.add_dynamic_group(self.resource, self.auth_type)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> isinstance(self.resource, dict):</span><br><span class="line">            <span class="keyword">for</span> groupname, hosts <span class="keyword">in</span> self.resource.iteritems():</span><br><span class="line">                self.add_dynamic_group(hosts, groupname)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_dynamic_group</span><span class="params">(self, hosts, group_name, groupvars=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        添加主机信息</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.inventory.groups.get(group_name, <span class="string">''</span>):</span><br><span class="line">            self.inventory.add_group(group_name)</span><br><span class="line"></span><br><span class="line">        group_ins = Group(name=group_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># if group variables exists, add them to group</span></span><br><span class="line">        <span class="keyword">if</span> groupvars:</span><br><span class="line">            <span class="keyword">for</span> key, value <span class="keyword">in</span> groupvars.iteritems():</span><br><span class="line">                group_ins.set_variable(key, value)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add hosts to group</span></span><br><span class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> hosts:</span><br><span class="line">            self.inventory.add_host(host=host,group=group_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ANSRunner</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    This is a General object for parallel execute modules.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, auth_type, resource, *args, **kwargs)</span>:</span></span><br><span class="line">        self.loader = <span class="literal">None</span></span><br><span class="line">        self.inventory = <span class="literal">None</span></span><br><span class="line">        self.variable_manager = <span class="literal">None</span></span><br><span class="line">        self.resource = resource</span><br><span class="line">        self.options = <span class="literal">None</span></span><br><span class="line">        self.passwords = <span class="literal">None</span></span><br><span class="line">        self.callback = <span class="literal">None</span></span><br><span class="line">        self.results_raw = &#123;&#125;</span><br><span class="line">        self.auth_type = auth_type</span><br><span class="line">        self.__initializeData()</span><br><span class="line">        self.sn = kwargs.get(<span class="string">'sn'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__initializeData</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        初始化ansible</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.loader = DataLoader()</span><br><span class="line">        Options = namedtuple(<span class="string">'Options'</span>, [<span class="string">'connection'</span>, <span class="string">'module_path'</span>, <span class="string">'forks'</span>, <span class="string">'timeout'</span>,  <span class="string">'remote_user'</span>,</span><br><span class="line">                <span class="string">'ask_pass'</span>, <span class="string">'private_key_file'</span>, <span class="string">'ssh_common_args'</span>, <span class="string">'ssh_extra_args'</span>, <span class="string">'sftp_extra_args'</span>,</span><br><span class="line">                <span class="string">'scp_extra_args'</span>, <span class="string">'become'</span>, <span class="string">'become_method'</span>, <span class="string">'become_user'</span>, <span class="string">'ask_value_pass'</span>, <span class="string">'verbosity'</span>,</span><br><span class="line">                <span class="string">'check'</span>, <span class="string">'listhosts'</span>, <span class="string">'listtasks'</span>, <span class="string">'listtags'</span>, <span class="string">'syntax'</span>,<span class="string">'diff'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.auth_type == <span class="string">'pwd_login'</span>:</span><br><span class="line">            ask_pass = <span class="literal">True</span></span><br><span class="line">            ask_value_pass = <span class="literal">True</span></span><br><span class="line">            remote_user = <span class="string">'root'</span></span><br><span class="line">            private_key_file = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> self.auth_type == <span class="string">'key_login'</span>:</span><br><span class="line">            ask_pass = <span class="literal">False</span></span><br><span class="line">            ask_value_pass = <span class="literal">False</span></span><br><span class="line">            remote_user = SSH_USER</span><br><span class="line">            private_key_file = SSH_PRIVATE_KEY_FILE</span><br><span class="line"></span><br><span class="line">        self.options = Options(connection=<span class="string">'smart'</span>, module_path=<span class="literal">None</span>, forks=<span class="number">2</span>, timeout=<span class="number">10</span>,</span><br><span class="line">                remote_user=remote_user, ask_pass=ask_pass, private_key_file=private_key_file, ssh_common_args=<span class="literal">None</span>, ssh_extra_args=<span class="literal">None</span>,</span><br><span class="line">                sftp_extra_args=<span class="literal">None</span>, scp_extra_args=<span class="literal">None</span>, become=<span class="literal">True</span>, become_method=<span class="string">"sudo"</span>,</span><br><span class="line">                become_user=<span class="string">"root"</span>, ask_value_pass=ask_value_pass, verbosity=<span class="literal">None</span>, check=<span class="literal">False</span>, listhosts=<span class="literal">False</span>,</span><br><span class="line">                listtasks=<span class="literal">False</span>, listtags=<span class="literal">False</span>, syntax=<span class="literal">False</span>, diff=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        self.passwords = dict(</span><br><span class="line">            conn_pass=<span class="string">'xxxx'</span>,</span><br><span class="line">            becomepass=<span class="string">'xxxx'</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        ci = CustomInventory(self.resource, self.auth_type)</span><br><span class="line">        self.inventory = ci.inventory</span><br><span class="line">        self.variable_manager = ci.variable_manager</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_model</span><span class="params">(self, host_list, module_name, module_args=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        run module from andible ad-hoc.</span></span><br><span class="line"><span class="string">        module_name: ansible module_name</span></span><br><span class="line"><span class="string">        module_args: ansible module args</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> module_args:</span><br><span class="line">            play_source = dict(</span><br><span class="line">                    name=<span class="string">"Ansible Play"</span>,</span><br><span class="line">                    hosts=host_list,</span><br><span class="line">                    gather_facts=<span class="string">'no'</span>,</span><br><span class="line">                    tasks=[</span><br><span class="line">                        dict(action=dict(module=<span class="string">'setup'</span>)),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/usr/sbin/dmidecode -t memory'</span>)),</span><br><span class="line">                    ]</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            play_source = dict(</span><br><span class="line">                    name=<span class="string">"Ansible Play"</span>,</span><br><span class="line">                    hosts=host_list,</span><br><span class="line">                    gather_facts=<span class="string">'no'</span>,</span><br><span class="line">                    tasks=[</span><br><span class="line">                        dict(action=dict(module=<span class="string">'setup'</span>), name=<span class="string">"setup"</span>),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/usr/sbin/dmidecode -t memory'</span>), name=<span class="string">'mem'</span>),</span><br><span class="line">                        dict(action=dict(module=<span class="string">'shell'</span>, args=<span class="string">'/opt/MegaRAID/MegaCli/MegaCli64 -cfgdsply -aALL -NoLog'</span>), name=<span class="string">'hd'</span>)</span><br><span class="line">                    ]</span><br><span class="line">            )</span><br><span class="line">        play = Play().load(play_source, variable_manager=self.variable_manager, loader=self.loader)</span><br><span class="line">        tqm = <span class="literal">None</span></span><br><span class="line">        self.callback = ModelResultsCollector(sn=self.sn)</span><br><span class="line">        <span class="keyword">import</span> traceback</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            tqm = TaskQueueManager(</span><br><span class="line">                inventory=self.inventory,</span><br><span class="line">                variable_manager=self.variable_manager,</span><br><span class="line">                loader=self.loader,</span><br><span class="line">                options=self.options,</span><br><span class="line">                passwords=self.passwords,</span><br><span class="line">                stdout_callback = <span class="string">"minimal"</span>,</span><br><span class="line">            )</span><br><span class="line">            tqm._stdout_callback = self.callback</span><br><span class="line">            constants.HOST_KEY_CHECKING = <span class="literal">False</span> <span class="comment">#关闭第一次使用ansible连接客户端是输入命令</span></span><br><span class="line">            tqm.run(play)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            <span class="keyword">print</span> traceback.print_exc()</span><br><span class="line">            <span class="comment"># DsRedis.OpsAnsibleModel.lpush(self.redisKey,data=err)</span></span><br><span class="line">            <span class="comment"># if self.logId:AnsibleSaveResult.Model.insert(self.logId, err)</span></span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="keyword">if</span> tqm <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                tqm.cleanup()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_playbook</span><span class="params">(self, playbook_path,extra_vars=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        run ansible palybook</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># if self.redisKey:self.callback = PlayBookResultsCollectorToSave(self.redisKey,self.logId)</span></span><br><span class="line">            self.callback = PlayBookResultsCollector()</span><br><span class="line">            <span class="keyword">if</span> extra_vars:self.variable_manager.extra_vars = extra_vars</span><br><span class="line">            executor = PlaybookExecutor(</span><br><span class="line">                playbooks=[playbook_path], inventory=self.inventory, variable_manager=self.variable_manager, loader=self.loader,</span><br><span class="line">                options=self.options, passwords=self.passwords,</span><br><span class="line">            )</span><br><span class="line">            executor._tqm._stdout_callback = self.callback</span><br><span class="line">            constants.HOST_KEY_CHECKING = <span class="literal">False</span> <span class="comment">#关闭第一次使用ansible连接客户端是输入命令</span></span><br><span class="line">            executor.run()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_model_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.results_raw = &#123;<span class="string">'success'</span>:&#123;&#125;, <span class="string">'failed'</span>:&#123;&#125;, <span class="string">'unreachable'</span>:&#123;&#125;&#125;</span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_ok.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'success'</span>][hostvisiable] = result._result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_failed.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'failed'</span>][hostvisiable] = result._result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.host_unreachable.items():</span><br><span class="line">            hostvisiable = host.replace(<span class="string">'.'</span>,<span class="string">'_'</span>)</span><br><span class="line">            self.results_raw[<span class="string">'unreachable'</span>][hostvisiable]= result._result</span><br><span class="line"></span><br><span class="line">        <span class="comment"># return json.dumps(self.results_raw)</span></span><br><span class="line">        <span class="keyword">return</span> self.results_raw</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_playbook_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.results_raw = &#123;<span class="string">'skipped'</span>:&#123;&#125;, <span class="string">'failed'</span>:&#123;&#125;, <span class="string">'ok'</span>:&#123;&#125;,<span class="string">"status"</span>:&#123;&#125;,<span class="string">'unreachable'</span>:&#123;&#125;,<span class="string">"changed"</span>:&#123;&#125;&#125;</span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_ok.items():</span><br><span class="line">            self.results_raw[<span class="string">'ok'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_failed.items():</span><br><span class="line">            self.results_raw[<span class="string">'failed'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_status.items():</span><br><span class="line">            self.results_raw[<span class="string">'status'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="comment"># for host, result in self.callback.task_changed.items():</span></span><br><span class="line">        <span class="comment">#     self.results_raw['changed'][host] = result</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_skipped.items():</span><br><span class="line">            self.results_raw[<span class="string">'skipped'</span>][host] = result</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> host, result <span class="keyword">in</span> self.callback.task_unreachable.items():</span><br><span class="line">            self.results_raw[<span class="string">'unreachable'</span>][host] = result</span><br><span class="line">        <span class="keyword">return</span> self.results_raw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># resource = [</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.8.119"&#125;,</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.6.43"&#125;,</span></span><br><span class="line">    <span class="comment">#     &#123;"hostname": "192.168.1.233"&#125;,</span></span><br><span class="line">    <span class="comment">#  ]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># resource = &#123;</span></span><br><span class="line">    <span class="comment">#     "dynamic_host": &#123;</span></span><br><span class="line">    <span class="comment">#         "hosts": [</span></span><br><span class="line">    <span class="comment">#                     &#123;'username': u'root', 'password': '123456', 'ip': '192.168.1.108','hostname':'nginx01','port':'22'&#125;,</span></span><br><span class="line">    <span class="comment">#                     &#123;"hostname":"778da6afsdwf","ip": "192.168.1.109", "port": "22", "username": "root", "password":"123456"&#125;,</span></span><br><span class="line">    <span class="comment">#                   ],</span></span><br><span class="line">    <span class="comment">#         "vars": &#123;</span></span><br><span class="line">    <span class="comment">#                  "var1":"ansible",</span></span><br><span class="line">    <span class="comment">#                  "var2":"saltstack"</span></span><br><span class="line">    <span class="comment">#                  &#125;</span></span><br><span class="line">    <span class="comment">#     &#125;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">    resource = &#123;</span><br><span class="line">        <span class="string">'key_login'</span>: [<span class="string">'10.105.42.16'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    rbt = ANSRunner(resource)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ansible Adhoc</span></span><br><span class="line">    rbt.run_model(host_list=resource[<span class="string">'key_login'</span>], module_name=<span class="string">'setup'</span>)</span><br><span class="line">    data = rbt.get_model_result()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    <span class="comment"># Ansible playbook</span></span><br><span class="line">    <span class="comment"># rbt.run_playbook(playbook_path='/etc/ansible/playbook/OPUSE.yml')</span></span><br><span class="line">    <span class="comment"># print rbt.get_playbook_result()</span></span><br><span class="line">    <span class="comment"># rbt.run_model(host_list=[],module_name='yum',module_args="name=htop state=present")</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      资产管理系统
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>域账号后台管理</title>
    <link href="http://blog.laohulab.com/Django/3844096452.html"/>
    <id>http://blog.laohulab.com/Django/3844096452.html</id>
    <published>2019-04-29T06:45:00.000Z</published>
    <updated>2019-05-03T00:52:40.210Z</updated>
    
    <content type="html"><![CDATA[<div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1">开始之前</a></li><li class="tab"><a href="#-2">部署方式</a></li><li class="tab"><a href="#-3">注意事项</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><ul><li>主要用于用户、共享目录，邮箱组权限等日常管理</li><li>基于pyad模块(<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pha2lyZC9weWFk" title="https://github.com/zakird/pyad">https://github.com/zakird/pyad<i class="fa fa-external-link"></i></span>)</li><li>支持邮件通知及批量操作</li><li>LDAP登录(仅限CN Infrastructure Team &amp;&amp; CN Development Team登录后台,域账号登录)</li><li>后台地址：<span class="exturl" data-url="aHR0cDovL3h4Lnh4LmdlbmV3aXouY29tL2FkbWlu" title="http://xx.xx.genewiz.com/admin">http://xx.xx.genewiz.com/admin<i class="fa fa-external-link"></i></span></li></ul></div><div class="tab-pane" id="-2"><ul><li>部署于10.105.xx.xx,应用对AD Server进行操作！</li><li>Windows下的Apache无法通过daemon模式运行多个wsgi应用，故通过Django dev模式运行，通过Apache转发！(或者单独在另外一台Windows服务器单独部署)</li><li>\\GWNGFS\xx\Dev\AdminSet</li></ul></div><div class="tab-pane" id="-3"><ul><li>用户的全局管理未收敛至统一管理，为确保用户信息的准确性，对用户进行任何变更，请先更新用户信息！</li></ul></div></div></div><a id="more"></a><h5 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h5><div class="tabs" id="users"><ul class="nav-tabs"><li class="tab active"><a href="#users-1">更新账号信息</a></li><li class="tab"><a href="#users-2">更新组信息</a></li><li class="tab"><a href="#users-3">账号启用</a></li><li class="tab"><a href="#users-4">账号禁用</a></li><li class="tab"><a href="#users-5">账号禁用-离职</a></li><li class="tab"><a href="#users-6">账号解锁</a></li><li class="tab"><a href="#users-7">账号VPN启用</a></li><li class="tab"><a href="#users-8">账号VPN禁用</a></li><li class="tab"><a href="#users-9">账号密码重置</a></li><li class="tab"><a href="#users-10">账号密码重置【登录需要修改密码】</a></li></ul><div class="tab-content"><div class="tab-pane active" id="users-1"><p><strong>初次添加 </strong><br><img src="/images/pasted-277.png" alt="upload successful"><br><img src="/images/pasted-251.png" alt="upload successful"></p><div class="note success"><p>点击保存按钮后，将会自动更新用户及用户属组信息！</p></div><p><strong>已存在</strong><br><img src="/images/pasted-278.png" alt="upload successful"></p><div class="note success"><p>如果账号已添加过，可以勾选用户，更新用户最新的用户信息，支持批量！</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_user</span><span class="params">(self, user)</span>:</span></span><br><span class="line">    <span class="string">“””更新用户信息”””</span></span><br><span class="line">    dn = adsearch.by_san(user)</span><br><span class="line">    user_from_ad = aduser.ADUser.from_dn(dn)</span><br><span class="line">    guid = user_from_ad.guid_str</span><br><span class="line">    sid = str(user_from_ad.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">    san = user_from_ad.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">    <span class="string">“””if user has not email,will take AttributeError”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        email = user_from_ad.get_attribute(<span class="string">‘mail’</span>, <span class="literal">False</span>).lower()</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        email = <span class="literal">None</span></span><br><span class="line">    create_time = parse(user_from_ad.get_attribute(<span class="string">‘whenCreated’</span>,<span class="literal">False</span>).Format())</span><br><span class="line">    <span class="string">“”” if user never modify password,will take ValueError!”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pwd_last_set_time = user_from_ad.get_password_last_set()</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        pwd_last_set_time = <span class="literal">None</span></span><br><span class="line">    <span class="string">“”” if user never login,will take AttributeError”””</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        last_login_time = user_from_ad.get_last_login()</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        last_login_time = <span class="literal">None</span></span><br><span class="line">    uac = user_from_ad.get_user_account_control_settings()</span><br><span class="line">    is_enabled = <span class="keyword">not</span> uac[<span class="string">‘ACCOUNTDISABLE’</span>]</span><br><span class="line">    is_locked_out = uac[<span class="string">‘LOCKOUT’</span>]</span><br><span class="line">    is_dial_in = user_from_ad.get_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> is_dial_in <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        is_dial_in = <span class="literal">False</span></span><br><span class="line">    userobj, status = UserProfile.objects.get_or_create(username=user)</span><br><span class="line">    userobj.dn = dn</span><br><span class="line">    userobj.guid = guid</span><br><span class="line">    userobj.sid = sid</span><br><span class="line">    userobj.san = san</span><br><span class="line">    userobj.email = email</span><br><span class="line">    userobj.pwd_last_set_time = pwd_last_set_time</span><br><span class="line">    userobj.create_time = create_time</span><br><span class="line">    userobj.last_login_time = last_login_time</span><br><span class="line">    userobj.is_enabled = is_enabled</span><br><span class="line">    userobj.is_locked_out = is_locked_out</span><br><span class="line">    userobj.is_dial_in = is_dial_in</span><br><span class="line">    userobj.save()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        groups = user_from_ad.get_memberOfs()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    groups_from_ad = []</span><br><span class="line">    groups_from_db = []</span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> groups:</span><br><span class="line">        san = group.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">        guid = group.guid_str</span><br><span class="line">        sid = str(group.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">        gc = group.get_group_type()</span><br><span class="line">        gs = group.get_group_scope()</span><br><span class="line">        dn = group.dn</span><br><span class="line">        create_time = parse(group.get_attribute(<span class="string">‘whenCreated’</span>, <span class="literal">False</span>).Format())</span><br><span class="line">        groupobj, status = GroupProfile.objects.get_or_create(san=san)</span><br><span class="line">        groupobj.san = san</span><br><span class="line">        groupobj.guid = guid</span><br><span class="line">        groupobj.sid = sid</span><br><span class="line">        groupobj.gc = gc</span><br><span class="line">        groupobj.gs = gs</span><br><span class="line">        groupobj.dn = dn</span><br><span class="line">        groupobj.create_time = create_time</span><br><span class="line">        groupobj.save()</span><br><span class="line">        groups_from_ad.append(san)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> userobj.groups_of.all():</span><br><span class="line">        san = group.san</span><br><span class="line">        groups_from_db.append(san)</span><br><span class="line"> </span><br><span class="line">    intersection = set(groups_from_ad) &amp; set(groups_from_db)</span><br><span class="line">    <span class="keyword">if</span> intersection:</span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> list(set(groups_from_db) - intersection):</span><br><span class="line">            userobj.groups_of.remove(GroupProfile.objects.get(san=group))</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> list(set(groups_from_ad) - intersection):</span><br><span class="line">            userobj.groups_of.add(GroupProfile.objects.get(san=group))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        userobj.groups_of.clear()</span><br><span class="line">        <span class="keyword">for</span> group <span class="keyword">in</span> groups_from_ad:</span><br><span class="line">            userobj.groups_of.add(GroupProfile.objects.get(san=group))</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-2"><p><strong>初次添加</strong><br><!--![upload successful](/images/pasted-253.png) --><br><img src="/images/pasted-279.png" alt="upload successful"></p><p><img src="/images/pasted-254.png" alt="upload successful"></p><div class="note success"><p>点击保存按钮后，将会自动更新用户及用户属组信息！</p></div><p><strong>已存在</strong><br><!-- ![upload successful](/images/pasted-255.png) --><br><img src="/images/pasted-280.png" alt="upload successful"></p><div class="note success"><p>如果账号已添加过，可以勾选用户，更新用户最新的用户信息，支持批量！</p></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_group</span><span class="params">(self, group)</span>:</span></span><br><span class="line">    <span class="string">“””更新组信息”””</span></span><br><span class="line">    dn = adsearch.by_san(group)</span><br><span class="line">    group_from_ad = adgroup.ADGroup.from_dn(dn)</span><br><span class="line">    san = group_from_ad.get_attribute(<span class="string">‘SamAccountName’</span>, <span class="literal">False</span>)</span><br><span class="line">    guid = group_from_ad.guid_str</span><br><span class="line">    sid = str(group_from_ad.sid).split(<span class="string">“:”</span>)[<span class="number">-1</span>]</span><br><span class="line">    gc = group_from_ad.get_group_type()</span><br><span class="line">    gs = group_from_ad.get_group_scope()</span><br><span class="line">    dn = group_from_ad.dn</span><br><span class="line">    create_time = parse(group_from_ad.get_attribute(<span class="string">‘whenCreated’</span>, <span class="literal">False</span>).Format())</span><br><span class="line">    groupobj, status = GroupProfile.objects.get_or_create(san=group)</span><br><span class="line">    groupobj.san = san</span><br><span class="line">    groupobj.guid = guid</span><br><span class="line">    groupobj.sid = sid</span><br><span class="line">    groupobj.gc = gc</span><br><span class="line">    groupobj.gs = gs</span><br><span class="line">    groupobj.dn = dn</span><br><span class="line">    groupobj.create_time = create_time</span><br><span class="line">    groupobj.save()</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-3"><!-- ![upload successful](/images/pasted-256.png) --><p><img src="/images/pasted-283.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enabled_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””启用用户”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘enabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘enabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.enable()</span><br><span class="line">            res[<span class="string">‘enabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘enabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-4"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””禁用用户”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.disable()</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-5"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_user_lizhi</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“””禁用用户-离职”””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        ou = adcontainer.ADContainer.from_dn(<span class="string">“OU=China,OU=DisabledAccounts,DC=local,DC=genewiz,DC=com”</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.disable()</span><br><span class="line">            <span class="string">“””</span></span><br><span class="line"><span class="string">            move操作，需要全局AD控制器，需要使用苏州域控制器</span></span><br><span class="line"><span class="string">            pyad.set_defaults(ldap_server=”10.105.21.20”, username=”jianhu.yong”, password=”xxx”)                </span></span><br><span class="line"><span class="string">            “””</span></span><br><span class="line">            user_from_ad.move(ou)</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-6"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unlock_user</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 解锁用户</span></span><br><span class="line"><span class="string">        lockoutTime: 0</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘unlock_success’</span>: [],</span><br><span class="line">        <span class="string">‘unlock_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘lockoutTime’</span>, <span class="number">0</span>)</span><br><span class="line">            res[<span class="string">‘unlock_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘unlock_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-7"><p><img src="/images/pasted-284.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-257.png) --></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enabled_vpn</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 启用VPN</span></span><br><span class="line"><span class="string">    Enabled: True</span></span><br><span class="line"><span class="string">    Disabled: False</span></span><br><span class="line"><span class="string">    Not Set: None</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘enabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘enabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">True</span>)</span><br><span class="line">            res[<span class="string">‘enabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘enabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-8"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disabled_vpn</span><span class="params">(self, obj_list)</span>:</span></span><br><span class="line">    <span class="string">“”” 禁用VPN</span></span><br><span class="line"><span class="string">    Enabled: True</span></span><br><span class="line"><span class="string">    Disabled: False</span></span><br><span class="line"><span class="string">    Not Set: None</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘disabled_success’</span>: [],</span><br><span class="line">        <span class="string">‘disabled_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.update_attribute(<span class="string">‘msNPAllowDialin’</span>, <span class="literal">False</span>)</span><br><span class="line">            res[<span class="string">‘disabled_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘disabled_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-9"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_password</span><span class="params">(self, obj_list, init_pwd)</span>:</span></span><br><span class="line">    <span class="string">“”” </span></span><br><span class="line"><span class="string">    重置用户密码</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘reset_success’</span>: [],</span><br><span class="line">        <span class="string">‘reset_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.set_password(init_pwd)</span><br><span class="line">            res[<span class="string">‘reset_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘reset_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="users-10"><p><img src="/images/pasted-285.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-258.png) --></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_password_login_modify</span><span class="params">(self, obj_list, init_pwd)</span>:</span></span><br><span class="line">    <span class="string">“”” </span></span><br><span class="line"><span class="string">    重置用户密码,如果用户密码设置了永不过期，登录修改密码将不会生效!</span></span><br><span class="line"><span class="string">    “””</span></span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘reset_success’</span>: [],</span><br><span class="line">        <span class="string">‘reset_failer’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> obj_list:</span><br><span class="line">        user_from_ad = aduser.ADUser.from_dn(obj.dn)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user_from_ad.set_password(init_pwd)</span><br><span class="line">            user_from_ad.force_pwd_change_on_login()</span><br><span class="line">            res[<span class="string">‘reset_success’</span>].append(obj)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">‘reset_failer’</span>].append(obj)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></div></div><h5 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h5><div class="tabs" id="auth"><ul class="nav-tabs"><li class="tab active"><a href="#auth-1">共享目录权限</a></li><li class="tab"><a href="#auth-2">邮箱组权限</a></li></ul><div class="tab-content"><div class="tab-pane active" id="auth-1"><div class="note success"><p>分别新增共享目录（二级目录）只读及读写的信息！</p></div><p><img src="/images/pasted-286.png" alt="upload successful"><br><img src="/images/pasted-287.png" alt="upload successful"><br><img src="/images/pasted-288.png" alt="upload successful"><br><img src="/images/pasted-289.png" alt="upload successful"><br><img src="/images/pasted-290.png" alt="upload successful"></p><!--![upload successful](/images/pasted-259.png)![upload successful](/images/pasted-260.png)![upload successful](/images/pasted-263.png)![upload successful](/images/pasted-261.png)![upload successful](/images/pasted-262.png)--><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_members_to_smb</span><span class="params">(self, dn, smb_folders)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_added’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> smb_folder <span class="keyword">in</span> smb_folders:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(smb_folder.group.dn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.add_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(smb_folder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_added’</span>].append(smb_folder)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_members_from_smb</span><span class="params">(self, dn, smb_folders)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_deleted’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> smb_folder <span class="keyword">in</span> smb_folders:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(smb_folder.group.dn)</span><br><span class="line">        <span class="keyword">if</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.remove_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(smb_folder)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_deleted’</span>].append(smb_folder)</span><br><span class="line">    <span class="keyword">return</span> res  </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="auth-2"><p><img src="/images/pasted-291.png" alt="upload successful"><br><img src="/images/pasted-292.png" alt="upload successful"></p><!--![upload successful](/images/pasted-264.png)![upload successful](/images/pasted-265.png)--><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_members_to_eg</span><span class="params">(self, dn, enabled_egs)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_added’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> enabled_eg <span class="keyword">in</span> enabled_egs:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(enabled_eg.dn)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.add_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(enabled_eg)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_added’</span>].append(enabled_eg)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_members_from_eg</span><span class="params">(self, dn, disabled_egs)</span>:</span></span><br><span class="line">    <span class="string">“””更新组成员信息”””</span></span><br><span class="line">    user1 = aduser.ADUser.from_dn(dn)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">‘user_to_group_deleted’</span>: [],</span><br><span class="line">        <span class="string">‘user_to_group_new’</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> disabled_eg <span class="keyword">in</span> disabled_egs:</span><br><span class="line">        group_object = adgroup.ADGroup.from_dn(disabled_eg.dn)</span><br><span class="line">        <span class="keyword">if</span> user1.is_member_of(group_object):</span><br><span class="line">            group_object.remove_members(user1)</span><br><span class="line">            res[<span class="string">‘user_to_group_new’</span>].append(disabled_eg)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res[<span class="string">‘user_to_group_deleted’</span>].append(disabled_eg)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></div></div><h5 id="通讯录管理"><a href="#通讯录管理" class="headerlink" title="通讯录管理"></a>通讯录管理</h5><div class="tabs" id="contact"><ul class="nav-tabs"><li class="tab active"><a href="#contact-1">通讯录</a></li></ul><div class="tab-content"><div class="tab-pane active" id="contact-1"><p><img src="/images/pasted-293.png" alt="upload successful"><br><img src="/images/pasted-267.png" alt="upload successful"><br><!--![upload successful](/images/pasted-266.png)--></p></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;tabs&quot; id&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;a href=&quot;#-1&quot;&gt;开始之前&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#-2&quot;&gt;部署方式&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#-3&quot;&gt;注意事项&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-content&quot;&gt;&lt;div class=&quot;tab-pane active&quot; id=&quot;-1&quot;&gt;&lt;ul&gt;
&lt;li&gt;主要用于用户、共享目录，邮箱组权限等日常管理&lt;/li&gt;
&lt;li&gt;基于pyad模块(&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL3pha2lyZC9weWFk&quot; title=&quot;https://github.com/zakird/pyad&quot;&gt;https://github.com/zakird/pyad&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;支持邮件通知及批量操作&lt;/li&gt;
&lt;li&gt;LDAP登录(仅限CN Infrastructure Team &amp;amp;&amp;amp; CN Development Team登录后台,域账号登录)&lt;/li&gt;
&lt;li&gt;后台地址：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3h4Lnh4LmdlbmV3aXouY29tL2FkbWlu&quot; title=&quot;http://xx.xx.genewiz.com/admin&quot;&gt;http://xx.xx.genewiz.com/admin&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;-2&quot;&gt;&lt;ul&gt;
&lt;li&gt;部署于10.105.xx.xx,应用对AD Server进行操作！&lt;/li&gt;
&lt;li&gt;Windows下的Apache无法通过daemon模式运行多个wsgi应用，故通过Django dev模式运行，通过Apache转发！(或者单独在另外一台Windows服务器单独部署)&lt;/li&gt;
&lt;li&gt;\\GWNGFS\xx\Dev\AdminSet&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;-3&quot;&gt;&lt;ul&gt;
&lt;li&gt;用户的全局管理未收敛至统一管理，为确保用户信息的准确性，对用户进行任何变更，请先更新用户信息！&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://blog.laohulab.com/tags/Django/"/>
    
      <category term="Python" scheme="http://blog.laohulab.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>实验室上机CODE自动化</title>
    <link href="http://blog.laohulab.com/uncategorized/4043802563.html"/>
    <id>http://blog.laohulab.com/uncategorized/4043802563.html</id>
    <published>2019-04-29T04:51:00.000Z</published>
    <updated>2019-05-03T00:56:34.936Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>官方仅提供code脚本，需要ssh至集群登陆节点，执行该code脚本，来生成上机code,对于实验室人员操作，不是很方便！</p><p><img src="/images/pasted-247.png" alt="upload successful"></p><a id="more"></a><h5 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h5><p><img src="/images/pasted-248.png" alt="upload successful"><br><img src="/images/pasted-295.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-249.png) --></p><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.views.generic.base <span class="keyword">import</span> View</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Company, Level, DataPath, DistributePath, Owner, Group, Device, ProjectInfo</span><br><span class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> RegisterForm</span><br><span class="line"><span class="keyword">from</span> utils.GenerateNumber <span class="keyword">import</span> gene_random_number</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> utils.ansible_api_adhoc <span class="keyword">import</span> ANSRunner</span><br><span class="line"><span class="keyword">from</span> utils.email_send <span class="keyword">import</span> SendMail</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LabIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        all_companys = Company.objects.exclude(name=<span class="string">'root'</span>)</span><br><span class="line">        all_levels = Level.objects.all()</span><br><span class="line">        all_data_paths = DataPath.objects.all()</span><br><span class="line">        all_distribute_paths = DistributePath.objects.all()</span><br><span class="line">        all_owners = Owner.objects.all()</span><br><span class="line">        all_groups = Group.objects.all()</span><br><span class="line">        all_devices = Device.objects.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"lab-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            <span class="string">'all_companys'</span>: all_companys,</span><br><span class="line">            <span class="string">'all_levels'</span>: all_levels,</span><br><span class="line">            <span class="string">'all_data_paths'</span>: all_data_paths,</span><br><span class="line">            <span class="string">'all_distribute_paths'</span>: all_distribute_paths,</span><br><span class="line">            <span class="string">'all_owners'</span>: all_owners,</span><br><span class="line">            <span class="string">'all_groups'</span>: all_groups,</span><br><span class="line">            <span class="string">'all_devices'</span>: all_devices</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        register_form = RegisterForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">            <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">                ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">            company = request.POST.get(<span class="string">'company'</span>, <span class="string">''</span>)</span><br><span class="line">            level = request.POST.get(<span class="string">'level'</span>, <span class="string">''</span>)</span><br><span class="line">            data_path = request.POST.get(<span class="string">'data_path'</span>, <span class="string">''</span>)</span><br><span class="line">            distribute_path = request.POST.get(<span class="string">'distribute_path'</span>, <span class="string">''</span>)</span><br><span class="line">            owner = request.POST.get(<span class="string">'owner'</span>, <span class="string">''</span>)</span><br><span class="line">            group = request.POST.get(<span class="string">'group'</span>, <span class="string">''</span>)</span><br><span class="line">            device = request.POST.get(<span class="string">'device'</span>, <span class="string">''</span>)</span><br><span class="line">            code = gene_random_number()</span><br><span class="line"></span><br><span class="line">            info_join = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> code, company, level, distribute_path, owner, group, device, data_path:</span><br><span class="line">                info_join.append(i)</span><br><span class="line">            info_join = <span class="string">','</span>.join(info_join)</span><br><span class="line">            <span class="comment"># /YZGROUP/read/read.txt</span></span><br><span class="line">            job = ANSRunner()</span><br><span class="line">            job.run_model(host_list=<span class="string">'20.0.0.10'</span>, module_name=<span class="string">'shell'</span>,</span><br><span class="line">                          module_args=<span class="string">'echo &#123;0&#125; &gt;&gt; /YZGROUP/read/.&#123;1&#125;.sortlog'</span>.format(info_join, code))</span><br><span class="line">            res = job.get_model_result()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'company'</span>: company,</span><br><span class="line">                    <span class="string">'level'</span>: level,</span><br><span class="line">                    <span class="string">'data_path'</span>: data_path,</span><br><span class="line">                    <span class="string">'distribute_path'</span>: distribute_path,</span><br><span class="line">                    <span class="string">'owner'</span>: owner,</span><br><span class="line">                    <span class="string">'group'</span>: group,</span><br><span class="line">                    <span class="string">'device'</span>: device,</span><br><span class="line">                    <span class="string">'code'</span>: code,</span><br><span class="line">                    <span class="string">'email'</span>: [<span class="string">'sen.guo@genewiz.com.cn'</span>,<span class="string">'fang.xiao@genewiz.com.cn'</span>,<span class="string">'ruikai.jia@genewiz.com.cn'</span>,<span class="string">'jianhu.yong@genewiz.com.cn'</span>],</span><br><span class="line">                    <span class="comment">#'email': ['zongliang.guo@geneseeq.com', '453576956@qq.com'],</span></span><br><span class="line">                    <span class="string">'ip'</span>: ip,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'lab_code'</span>):</span><br><span class="line">                    ProjectInfo.objects.create(</span><br><span class="line">                        number=code,</span><br><span class="line">                        company=Company.objects.get(name=company),</span><br><span class="line">                        level=Level.objects.get(name=level),</span><br><span class="line">                        distribute_path=DistributePath.objects.get(path=distribute_path),</span><br><span class="line">                        owner=Owner.objects.get(name=owner),</span><br><span class="line">                        group=Group.objects.get(name=group),</span><br><span class="line">                        device=Device.objects.get(type=device),</span><br><span class="line">                        data_path=DataPath.objects.get(path=data_path)</span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'lab-success.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                        <span class="string">'company'</span>: company,</span><br><span class="line">                        <span class="string">'level'</span>: level,</span><br><span class="line">                        <span class="string">'data_path'</span>: data_path,</span><br><span class="line">                        <span class="string">'distribute_path'</span>: distribute_path,</span><br><span class="line">                        <span class="string">'owner'</span>: owner,</span><br><span class="line">                        <span class="string">'group'</span>: group,</span><br><span class="line">                        <span class="string">'device'</span>: device,</span><br><span class="line">                        <span class="string">'code'</span>: code,</span><br><span class="line">                        <span class="string">'ip'</span>: ip,</span><br><span class="line">                        <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(register_form.errors, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h5&gt;&lt;p&gt;官方仅提供code脚本，需要ssh至集群登陆节点，执行该code脚本，来生成上机code,对于实验室人员操作，不是很方便！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-247.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>集群HTTP代理</title>
    <link href="http://blog.laohulab.com/Django/776286004.html"/>
    <id>http://blog.laohulab.com/Django/776286004.html</id>
    <published>2019-04-29T04:07:00.000Z</published>
    <updated>2019-05-03T00:57:35.387Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>目前扬子科创集群均无法访问互联网，在未联网的情况下，软件安装，维护效率低下，为了解决该问题，将部署二级代理!</p><p>登录节点明细</p><table><thead><tr><th>HOSTNAME</th><th>IP</th></tr></thead><tbody><tr><td>njlogin01.yzgroup.local</td><td>20.0.0.10/192.168.89.214</td></tr><tr><td>njgate01.yzgroup.local</td><td>192.168.89.212</td></tr></tbody></table><a id="more"></a><h5 id="扬子科创集群网段"><a href="#扬子科创集群网段" class="headerlink" title="扬子科创集群网段"></a>扬子科创集群网段</h5><p>经检查，集群计算机点网段分布如下：</p><p>192.168.88.0/23<br>10.2.150.0/23</p><h5 id="gost软件介绍"><a href="#gost软件介绍" class="headerlink" title="gost软件介绍"></a>gost软件介绍</h5><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpbnVlcnpoLnh5ei9nb3N0L2dldHRpbmctc3RhcnRlZC8=" title="https://docs.ginuerzh.xyz/gost/getting-started/">https://docs.ginuerzh.xyz/gost/getting-started/<i class="fa fa-external-link"></i></span></p><h5 id="代理部署架构"><a href="#代理部署架构" class="headerlink" title="代理部署架构"></a>代理部署架构</h5><p><img src="/images/pasted-239.png" alt="upload successful"><br><img src="/images/pasted-240.png" alt="upload successful"><br><img src="/images/pasted-244.png" alt="upload successful"><br><img src="/images/pasted-243.png" alt="upload successful"></p><p>查看详情<br><img src="/images/pasted-245.png" alt="upload successful"></p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 终端下临时配置代理</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=http://192.168.89.214:8090</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.89.214:8090</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消设置</span></span><br><span class="line"><span class="built_in">unset</span> http_proxy</span><br><span class="line"><span class="built_in">unset</span> https_proxy</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 写入配置文件，永久生效</span></span><br><span class="line">cat &lt;&lt; EOF &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://192.168.89.214:8090</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.89.214:8090</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="Ansible-Hosts"><a href="#Ansible-Hosts" class="headerlink" title="Ansible Hosts"></a>Ansible Hosts</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[proxy-jumpbox]</span><br><span class="line">10.105.42.23 ansible_ssh_user=jianhu.yong ansible_ssh_private_key_file=<span class="string">'/opt/keys/id_rsa_2048_jianhu.yong'</span> ansible_become=<span class="literal">true</span> ansible_become_user=root ansible_become_method=sudo</span><br><span class="line"></span><br><span class="line">[proxy-yzkc]</span><br><span class="line">20.0.0.10 ansible_ssh_user=genewiznj ansible_ssh_private_key_file=<span class="string">'/opt/keys/id_rsa_genewiznj'</span>  ansible_remote_tmp=<span class="string">'/tmp/.ansible/tmp'</span></span><br></pre></td></tr></table></figure><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        proxy_ip = [<span class="string">'10.105.42.23'</span>,<span class="string">'20.0.0.10'</span>]</span><br><span class="line">        proxy_status = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> ip <span class="keyword">in</span> proxy_ip:</span><br><span class="line">            job = ANSRunner()</span><br><span class="line">            job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                          module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">            res = job.get_model_result()</span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                proxy_status[ip] = <span class="string">'Running'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                proxy_status[ip] = <span class="string">'Stopped'</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"proxy-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            <span class="string">'level1'</span>: proxy_status[<span class="string">'10.105.42.23'</span>],</span><br><span class="line">            <span class="string">'level2'</span>: proxy_status[<span class="string">'20.0.0.10'</span>]</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        proxy_ip = request.POST.get(<span class="string">'proxy_ip'</span>,<span class="string">''</span>)</span><br><span class="line">        action = request.POST.get(<span class="string">'action'</span>,<span class="string">''</span>)</span><br><span class="line">        level = int(request.POST.get(<span class="string">'level'</span>, <span class="string">''</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> level == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> action == <span class="string">'start'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务器已运行，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务启动成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'stop'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务停止成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务已停止，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'restart'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9 &amp;&amp; cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /opt/genewiznj/gost/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'curl -I -x &#123;0&#125;:8090 http://www.baidu.com'</span>.format(proxy_ip))</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-success'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试成功！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-failer'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试失败！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">elif</span> level == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> action == <span class="string">'start'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务器已运行，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Running'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务启动成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'stop'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务停止成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'Has Stopped'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务已停止，操作无效！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'restart'</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">"ps -ef|grep gost|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9 &amp;&amp; cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;"</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                                  module_args=<span class="string">'cd /YZGROUP/genewiz/public/app/gost-2.4/ &amp;&amp; nohup ./gost -C gost.json &amp;&gt; /dev/null &amp;'</span>)</span><br><span class="line">                    res = job.get_model_result()</span><br><span class="line">                    <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                        res.update(&#123;<span class="string">'status'</span>: <span class="string">'Restarted'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务重启成功！'</span>&#125;)</span><br><span class="line">                        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                job = ANSRunner()</span><br><span class="line">                job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>,</span><br><span class="line">                              module_args=<span class="string">'curl -I -x &#123;0&#125;:8090 http://www.baidu.com'</span>.format(proxy_ip))</span><br><span class="line">                res = job.get_model_result()</span><br><span class="line">                <span class="keyword">if</span> res[<span class="string">'success'</span>]:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-success'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试成功！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.update(&#123;<span class="string">'status'</span>: <span class="string">'curl-failer'</span>, <span class="string">'msg'</span>: <span class="string">'代理服务测试失败！'</span>&#125;)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyStatusView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        proxy_ip = request.GET.get(<span class="string">'proxy_ip'</span>,<span class="string">''</span>)</span><br><span class="line">        job = ANSRunner()</span><br><span class="line">        job.run_model(host_list=<span class="string">'&#123;0&#125;'</span>.format(proxy_ip), module_name=<span class="string">'shell'</span>, module_args=<span class="string">'netstat -anptul|grep 8090'</span>)</span><br><span class="line">        res = job.get_model_result()</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// initHighlightingOnLoad</span></span><br><span class="line">        $(<span class="string">'pre code'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i, block</span>) </span>&#123;</span><br><span class="line">            $(<span class="keyword">this</span>).parent().addClass(<span class="string">'hljs'</span>)</span><br><span class="line">            hljs.highlightBlock(block);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">proxy</span>(<span class="params">current_elem, proxy_ip, action,level</span>)</span>&#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                type: <span class="string">"POST"</span>,</span><br><span class="line">                url:<span class="string">"&#123;% url 'proxy:proxy_index' %&#125;"</span>,</span><br><span class="line">                data:&#123;<span class="string">'proxy_ip'</span>:proxy_ip,<span class="string">'action'</span>:action,<span class="string">'level'</span>:level&#125;,</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                beforeSend:<span class="function"><span class="keyword">function</span>(<span class="params">xhr, settings</span>)</span>&#123;</span><br><span class="line">                    xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, <span class="string">"&#123;&#123; csrf_token &#125;&#125;"</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(data.status === <span class="string">'Has Running'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Running'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">console</span>.log(current_elem.parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(5)'</span>).children(<span class="string">'span'</span>).text(<span class="string">'Running'</span>).removeClass().addClass(<span class="string">'label label-success'</span>))</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Has Stopped'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Stopped'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">console</span>.log(current_elem.parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(5)'</span>).children(<span class="string">'span'</span>).text(<span class="string">'Stopped'</span>).removeClass().addClass(<span class="string">'label label-danger'</span>))</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'Restarted'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="built_in">window</span>.location.reload()</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status === <span class="string">'curl-success'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">1</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status ===<span class="string">'curl-failer'</span>)&#123;</span><br><span class="line">                            layer.alert(data[<span class="string">'msg'</span>],&#123;</span><br><span class="line">                                skin: <span class="string">'layui-layer-lan'</span>,</span><br><span class="line">                                closeBtn: <span class="number">0</span>,</span><br><span class="line">                                icon: <span class="number">5</span></span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动一级代理服务</span></span><br><span class="line">        $(<span class="string">'.start-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'start'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止一级代理服务</span></span><br><span class="line">        $(<span class="string">'.stop-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">'正在停止代理服务,请稍候!'</span>, &#123;<span class="attr">icon</span>: <span class="number">6</span>&#125;);</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'stop'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重启一级代理服务</span></span><br><span class="line">        $(<span class="string">'.restart-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'restart'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试一级代理服务</span></span><br><span class="line">        $(<span class="string">'.test-proxy-one'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'test'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动二级代理服务</span></span><br><span class="line">        $(<span class="string">'.start-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'start'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止二级代理服务</span></span><br><span class="line">        $(<span class="string">'.stop-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            layer.msg(<span class="string">'正在停止代理服务,请稍候!'</span>, &#123;<span class="attr">icon</span>: <span class="number">6</span>&#125;);</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'stop'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重启二级代理服务</span></span><br><span class="line">        $(<span class="string">'.restart-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'restart'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试二级代理服务</span></span><br><span class="line">        $(<span class="string">'.test-proxy-two'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> action = <span class="string">'test'</span>;</span><br><span class="line">            <span class="keyword">var</span> level = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">var</span> proxy_ip = $(<span class="keyword">this</span>).parents(<span class="string">'tr'</span>).children(<span class="string">'td:eq(2)'</span>).text();</span><br><span class="line">            <span class="built_in">console</span>.log(proxy_ip);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            proxy($(<span class="keyword">this</span>),proxy_ip,action,level)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h5&gt;&lt;p&gt;目前扬子科创集群均无法访问互联网，在未联网的情况下，软件安装，维护效率低下，为了解决该问题，将部署二级代理!&lt;/p&gt;
&lt;p&gt;登录节点明细&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;HOSTNAME&lt;/th&gt;
&lt;th&gt;IP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;njlogin01.yzgroup.local&lt;/td&gt;
&lt;td&gt;20.0.0.10/192.168.89.214&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;njgate01.yzgroup.local&lt;/td&gt;
&lt;td&gt;192.168.89.212&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://blog.laohulab.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>内网邮件API服务部署</title>
    <link href="http://blog.laohulab.com/uncategorized/3811181486.html"/>
    <id>http://blog.laohulab.com/uncategorized/3811181486.html</id>
    <published>2019-04-29T03:05:27.000Z</published>
    <updated>2019-05-03T01:11:48.646Z</updated>
    
    <content type="html"><![CDATA[<h5 id="开源MailServer"><a href="#开源MailServer" class="headerlink" title="开源MailServer"></a>开源MailServer</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rvd25sb2Fk" title="https://www.hmailserver.com/download">https://www.hmailserver.com/download<i class="fa fa-external-link"></i></span> (for windows)<br><span class="exturl" data-url="aHR0cHM6Ly9tb2RvYm9hLm9yZy9lbi8=" title="https://modoboa.org/en/">https://modoboa.org/en/<i class="fa fa-external-link"></i></span> (基于Django Bootstrap Jquery for Linux)</p><p>本次部署hmailserver服务！</p><h5 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h5><ul><li>Windows Server 2012 R2 X64</li><li>Mysql 5.7 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv" title="https://dev.mysql.com/downloads/installer/">https://dev.mysql.com/downloads/installer/<i class="fa fa-external-link"></i></span></li><li>Apache2.4 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=" title="https://www.apachehaus.com/cgi-bin/download.plx">https://www.apachehaus.com/cgi-bin/download.plx<i class="fa fa-external-link"></i></span></li><li>hMailServer-5.6.7-B2425 <span class="exturl" data-url="aHR0cHM6Ly9jZG4ubXlzcWwuY29tLy9Eb3dubG9hZHMvTXlTUUxJbnN0YWxsZXIvbXlzcWwtaW5zdGFsbGVyLXdlYi1jb21tdW5pdHktOC4wLjEyLjAubXNp" title="https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi">https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi<i class="fa fa-external-link"></i></span></li><li>PHP 7.1 <span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWRzL3JlbGVhc2VzL3BocC03LjEuMjItV2luMzItVkMxNC14NjQuemlw" title="https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip">https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip<i class="fa fa-external-link"></i></span></li><li>MS VC14</li><li>libmysql</li></ul><a id="more"></a><h5 id="安装包准备"><a href="#安装包准备" class="headerlink" title="安装包准备"></a>安装包准备</h5><ul><li>Apache httpd-2.4.34-o102o-x64-vc14.zip</li><li>MS VC14 vc_redist.x64.rar</li><li>hmailserver hmailserver-5.6.7-b2425.rar</li><li>php php-7.1.22-win32-vc14-x64.zip</li><li>Webmail webmail-lite-php-8.zip</li><li>libmysql libmysql.zip</li><li>\\xx\xx\SoftWare\开发工具\Windows平台\mysql-installer-community-5.7.17.0.msi</li></ul><h5 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h5><p><img src="/images/pasted-205.png" alt="upload successful"></p><h5 id="安装Net3"><a href="#安装Net3" class="headerlink" title="安装Net3"></a>安装Net3</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;dism.exe /online /<span class="built_in">enable</span>-feature /all  /featurename:netfx3 /Source:D:\sources\sxs</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-206.png" alt="upload successful"></p><h5 id="安装Hmailserver"><a href="#安装Hmailserver" class="headerlink" title="安装Hmailserver"></a>安装Hmailserver</h5><p><img src="/images/pasted-207.png" alt="upload successful"><br><img src="/images/pasted-208.png" alt="upload successful"><br><img src="/images/pasted-209.png" alt="upload successful"><br><img src="/images/pasted-210.png" alt="upload successful"><br><img src="/images/pasted-211.png" alt="upload successful"><br><img src="/images/pasted-212.png" alt="upload successful"><br><img src="/images/pasted-213.png" alt="upload successful"><br><img src="/images/pasted-214.png" alt="upload successful"><br><img src="/images/pasted-215.png" alt="upload successful"><br><img src="/images/pasted-216.png" alt="upload successful"><br><img src="/images/pasted-217.png" alt="upload successful"><br><img src="/images/pasted-296.png" alt="upload successful"><br><img src="/images/pasted-219.png" alt="upload successful"><br><img src="/images/pasted-220.png" alt="upload successful"><br><img src="/images/pasted-221.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-218.png) --></p><p>上传 libmysql.dll 32bit至如下目录C:\Program Files (x86)\hMailServer\Bin</p><p><img src="/images/pasted-222.png" alt="upload successful"></p><p><img src="/images/pasted-223.png" alt="upload successful"></p><p><img src="/images/pasted-224.png" alt="upload successful"></p><h5 id="安装中文包"><a href="#安装中文包" class="headerlink" title="安装中文包"></a>安装中文包</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rldm5ldC90cmFuc2xhdGlvbl9nZXRsYW5ndWFnZS5waHA/bGFuZ3VhZ2U9Y2hpbmVzZQ==" title="https://www.hmailserver.com/devnet/translation_getlanguage.php?language=chinese">https://www.hmailserver.com/devnet/translation_getlanguage.php?language=chinese<i class="fa fa-external-link"></i></span> zh-hans.rar</p><p>C:\Program Files (x86)\hMailServer\Bin\hMailServer.INI</p><p>重启hmail服务，生效</p><p><img src="/images/pasted-225.png" alt="upload successful"></p><p><img src="/images/pasted-226.png" alt="upload successful"></p><p><img src="/images/pasted-227.png" alt="upload successful"></p><h5 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h5><p>将下载的zip文件解压到指定目录(D:\soft\apache24)</p><p><img src="/images/pasted-228.png" alt="upload successful"></p><p>修改ServerRoot<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Define SRVROOT <span class="string">"D:/Apache24"</span></span><br><span class="line">ServerRoot <span class="string">"<span class="variable">$&#123;SRVROOT&#125;</span>"</span></span><br></pre></td></tr></table></figure></p><p>修改DocumentRoot<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DocumentRoot <span class="string">"D:/Apache24/htdocs"</span></span><br></pre></td></tr></table></figure></p><p>安装Apache<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\soft\apache24\bin</span><br><span class="line">httpd.exe -k install</span><br><span class="line">The <span class="string">"Apache2.4"</span> is successfuly installed .</span><br><span class="line">Testing httpd.conf</span><br><span class="line">Error: reported here must be corrected before the service can be started.</span><br></pre></td></tr></table></figure></p><p>启动Apache服务<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\soft\apache24\bin</span><br><span class="line">net start Apache2.4</span><br><span class="line">Apache2.4 服务正在启动...</span><br><span class="line">Apache2.4 服务启动成功。</span><br></pre></td></tr></table></figure></p><h5 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h5><p>将下载的zip文件解压到指定目录(D:\soft\php-7.1.22)</p><p><img src="/images/pasted-229.png" alt="upload successful"></p><p>配置httpd.conf,添加PHP模块</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LoadModule php7_module <span class="string">"D:/soft/php-7.1.22/php7apache2_4.dll"</span></span><br></pre></td></tr></table></figure><p>添加扩展名<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .php</span><br><span class="line">AddType application/x-httpd-php-source .phps</span><br></pre></td></tr></table></figure></p><p>指定php.ini配置文件路径<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PHPIniDir <span class="string">"D:/soft/php-7.1.22"</span></span><br></pre></td></tr></table></figure></p><p>配置php.ini.将php安装目录下的php.ini-production改名为php.ini</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定EXT目录，相对目录会出错！</span></span><br><span class="line">extension_dir = <span class="string">"D:/soft/php-7.1.22/ext"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 开启常用的php扩展</span></span><br><span class="line">extension=php_mbstring.dll（php多字节字符串扩展）</span><br><span class="line">extension=php_curl.dll(webmail依赖)</span><br><span class="line">extension=php_mbstring.dll</span><br><span class="line">extension=php_mysqli.dll（mysqli库扩展）</span><br><span class="line">extension=php_openssl.dll</span><br><span class="line">extension=php_pdo_mysql.dll(webmail依赖)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 开启COM组件</span></span><br><span class="line">com.allow_dcom = <span class="literal">true</span></span><br><span class="line">extension=php_com_dotnet.dll</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置默认时区</span></span><br><span class="line">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure><p>测试PHP,将如下代码放置网站/目录测试<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-230.png" alt="upload successful"></p><p><img src="/images/pasted-231.png" alt="upload successful"></p><div class="note danger">            <font color="red"><br>Call to undefined function curl_init()错误<br>将php.ini中的;extension=php_curl.dll的注释去掉后，重启apache后仍然报Call to undefined function curl_init()的错误，只php安装目录下的libssh2.dll复制到apache的bin目录，并重新启动apache。<br></font><ul><li><span class="exturl" data-url="aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWQjcGhwLTcuMg==" title="https://windows.php.net/download#php-7.2">https://windows.php.net/download#php-7.2<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC85ZDVjM2E4MWM3ZWY=" title="https://www.jianshu.com/p/9d5c3a81c7ef">https://www.jianshu.com/p/9d5c3a81c7ef<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82MzE5NWZmOTIwNjI=" title="https://www.jianshu.com/p/63195ff92062">https://www.jianshu.com/p/63195ff92062<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9kYW5pZWxhcmFuY2liaWEud29yZHByZXNzLmNvbS8yMDE1LzA5LzI3L2luc3RhbGxpbmctYXBhY2hlLTItNC1hbmQtcGhwLTctZm9yLWRldmVsb3BtZW50LW9uLXdpbmRvd3Mv" title="https://danielarancibia.wordpress.com/2015/09/27/installing-apache-2-4-and-php-7-for-development-on-windows/">https://danielarancibia.wordpress.com/2015/09/27/installing-apache-2-4-and-php-7-for-development-on-windows/<i class="fa fa-external-link"></i></span></li></ul>          </div><h5 id="安装PHPWebAdmin"><a href="#安装PHPWebAdmin" class="headerlink" title="安装PHPWebAdmin"></a>安装PHPWebAdmin</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2RvY3VtZW50YXRpb24vbGF0ZXN0Lz9wYWdlPWhvd3RvX2luc3RhbGxfcGhwd2ViYWRtaW4=" title="https://www.hmailserver.com/documentation/latest/?page=howto_install_phpwebadmin">https://www.hmailserver.com/documentation/latest/?page=howto_install_phpwebadmin<i class="fa fa-external-link"></i></span></p><ul><li>Apache or IIS (or any other PHP compatible web server)</li><li>PHP &gt;= 4.3.11 or PHP &gt;= 5.0.3. Due to bugs in PHP 4.3.10, hMailServer does not work with that version.For php version 5.3.15 / 5.4.5 and higher the COM API has been disabled as a module. The error probably will be PHP Fatal error: Class ‘COM’ not found in \phpwebadmin\initialize.php on line xx. Make sure you edit the php.ini file has been edited with the value extension=php_com_dotnet.dll in the extentions.</li><li>For IIS , install PHP from the Web Platform Installer, and then enable php_com_dotnet.dll from there.</li><li>In the PHP configuration, the following settings must be configured for PHPWebAdmin to work properly:<ul><li>register_globals must be set to off (register_globals was deprecated and doesn’t exist from PHP 7.x)</li><li>display_errors must be set to off</li></ul></li><li>For IIS 8.5 and higher, IIS App pool runs under Network Service. Network Service needs full rights to PHPWebAdmin folder which is an alternative to granting ‘read and execute’ permissions to IIS_IUSRS.</li></ul><h5 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerAdmin jianhu.yong@genewiz.com.cn</span><br><span class="line">  ServerName njmail.local.genewiz.com</span><br><span class="line">  DocumentRoot <span class="string">"C:/Program Files (x86)/hMailServer/PHPWebAdmin"</span></span><br><span class="line">  ErrorLog <span class="string">"logs/njmail.local.genewniz.com-error.log"</span></span><br><span class="line">  CustomLog <span class="string">"logs/njmail.local.genewniz.com-access.log"</span> common</span><br><span class="line"> </span><br><span class="line">&lt;Directory <span class="string">"C:/Program Files (x86)/hMailServer/PHPWebAdmin"</span>&gt;</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Possible values for the Options directive are "None", "All",</span></span><br><span class="line">    <span class="comment"># or any combination of:</span></span><br><span class="line">    <span class="comment">#   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Note that "MultiViews" must be named *explicitly* --- "Options All"</span></span><br><span class="line">    <span class="comment"># doesn't give it to you.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># The Options directive is both complicated and important.  Please see</span></span><br><span class="line">    <span class="comment"># http://httpd.apache.org/docs/2.4/mod/core.html#options</span></span><br><span class="line">    <span class="comment"># for more information.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># AllowOverride controls what directives may be placed in .htaccess files.</span></span><br><span class="line">    <span class="comment"># It can be "All", "None", or any combination of the keywords:</span></span><br><span class="line">    <span class="comment">#   Options FileInfo AuthConfig Limit</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    AllowOverride None</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Controls who can get stuff from this server.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;  </span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h5 id="配置config-php"><a href="#配置config-php" class="headerlink" title="配置config.php"></a>配置config.php</h5><p>Please rename config-dist.php to config.php. The file is found in the PHPWebAdmin root folder.</p><p><img src="/images/pasted-237.png" alt="upload successful"></p><p>访问登录页 <span class="exturl" data-url="aHR0cDovL25qbWFpbC5sb2NhbC5nZW5ld2l6LmNvbS9waHB3ZWJhZG1pbi8=" title="http://njmail.local.genewiz.com/phpwebadmin/">http://njmail.local.genewiz.com/phpwebadmin/<i class="fa fa-external-link"></i></span></p><h5 id="安装WebMail"><a href="#安装WebMail" class="headerlink" title="安装WebMail"></a>安装WebMail</h5><ul><li><span class="exturl" data-url="aHR0cHM6Ly9hZnRlcmxvZ2ljLmNvbS9kb2NzL3dlYm1haWwtbGl0ZS04" title="https://afterlogic.com/docs/webmail-lite-8">https://afterlogic.com/docs/webmail-lite-8<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9hZnRlcmxvZ2ljLmNvbS9kb2NzL3dlYm1haWwtbGl0ZS04L2NvbmZpZ3VyaW5nLXdlYm1haWw=" title="https://afterlogic.com/docs/webmail-lite-8/configuring-webmail">https://afterlogic.com/docs/webmail-lite-8/configuring-webmail<i class="fa fa-external-link"></i></span></li></ul><p>将下载的webmail-lite-php-8压缩包解压后，重命名为webmail</p><p>配置虚拟主机<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Alias <span class="string">"/webmail/"</span> <span class="string">"D:/soft/webmail/"</span></span><br><span class="line">&lt;Directory <span class="string">"D:/soft/webmail/"</span>&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride None</span><br><span class="line">    Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><p>配置Webmail</p><div class="note ">            <p>默认账号密码<br>user:superadmin<br>password:空</p>          </div><p>检测依赖项目 <span class="exturl" data-url="aHR0cDovL25qbWFpbC5sb2NhbC5nZW5ld2l6LmNvbS93ZWJtYWlsLz9pbnN0YWxs" title="http://njmail.local.genewiz.com/webmail/?install">http://njmail.local.genewiz.com/webmail/?install<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-232.png" alt="upload successful"></p><p>修改默认用户密码</p><p><img src="/images/pasted-233.png" alt="upload successful"></p><p>数据库设置</p><p><img src="/images/pasted-297.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-234.png) --></p><p>开启日志监控</p><p><img src="/images/pasted-235.png" alt="upload successful"></p><p>添加HmailServer</p><p><img src="/images/pasted-298.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-236.png) --></p><hr><h5 id="邮件API部署"><a href="#邮件API部署" class="headerlink" title="邮件API部署"></a>邮件API部署</h5><p><img src="/images/pasted-299.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-238.png) --></p><h5 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 内网邮件API</span></span><br><span class="line">url(<span class="string">r'^email/'</span>, include(<span class="string">'njemail.urls'</span>, namespace=<span class="string">'email'</span>)),</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> EmailApiIndexView, EmailApiView</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># 首页</span></span><br><span class="line">    url(<span class="string">r'^index/$'</span>, EmailApiIndexView.as_view(), name=<span class="string">"email_index"</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 邮件接口</span></span><br><span class="line">    url(<span class="string">r'^api/$'</span>, EmailApiView.as_view(), name=<span class="string">"email_api"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailApiIndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"email-api-index.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        email_api_test_form = EmailApiTestForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> email_api_test_form.is_valid():</span><br><span class="line">            <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">                ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>,<span class="string">''</span>)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'ip'</span>: ip,</span><br><span class="line">                <span class="string">'email'</span>: [email],</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> SendMail(data=data, send_type=<span class="string">'api_test'</span>):</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'测试邮件已发送!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                <span class="string">'msg'</span>: <span class="string">'邮件地址格式有误!'</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailApiView</span><span class="params">(CSRFExemptMixin, LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">"email:email_index"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        info = json.loads(request.body)</span><br><span class="line">        email_api_form = EmailApiForm(info)</span><br><span class="line">        <span class="keyword">if</span> email_api_form.is_valid():</span><br><span class="line">            receivers = info[<span class="string">'receivers'</span>]</span><br><span class="line">            subject = info[<span class="string">'subject'</span>]</span><br><span class="line">            content = info[<span class="string">'content'</span>]</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'receivers'</span>: receivers,</span><br><span class="line">                <span class="string">'subject'</span>: subject,</span><br><span class="line">                <span class="string">'content'</span>: content</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> SendMail(data,send_type=<span class="string">"email_api"</span>):</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'success'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'邮件发送成功!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res = &#123;</span><br><span class="line">                    <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                    <span class="string">'msg'</span>: <span class="string">'邮件发送失败,请联系管理员!'</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">'status'</span>: <span class="string">'failer'</span>,</span><br><span class="line">                <span class="string">'msg'</span>: <span class="string">'邮件发送失败!'</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> i, j <span class="keyword">in</span> email_api_form.errors.items():</span><br><span class="line">                res[i] = j[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(res, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="客户端调用"><a href="#客户端调用" class="headerlink" title="客户端调用"></a>客户端调用</h5><div class="tabs" id="email_api"><ul class="nav-tabs"><li class="tab active"><a href="#email_api-1">cookies</a></li><li class="tab"><a href="#email_api-2">headers</a></li><li class="tab"><a href="#email_api-3">session</a></li><li class="tab"><a href="#email_api-4">php</a></li><li class="tab"><a href="#email_api-5">curl</a></li></ul><div class="tab-content"><div class="tab-pane active" id="email_api-1"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}<span class="comment"># 获取token</span>res = requests.get(<span class="string">'http://xx.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 获取sessionid</span>cookies = {}cookies[<span class="string">'csrftoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]res = requests.post(<span class="string">'http://njops.local.genewiz.com/login/'</span>, data=login_data, cookies=cookies)cookies[<span class="string">'sessionid'</span>] = res.history[<span class="number">0</span>].cookies[<span class="string">'sessionid'</span>]<span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 构造请求头</span>headers = {<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>}<span class="comment"># 发送邮件</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>, data=json.dumps(email_data), cookies=cookies, headers=headers)</code></pre></div><div class="tab-pane" id="email_api-2"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}<span class="comment"># 获取token</span>res = requests.get(<span class="string">'http://njops.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 构造请求头</span>headers = {}headers[<span class="string">'Cookie'</span>] = <span class="string">'csrftoken='</span>+res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 获取sessionid</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/login/'</span>,data=login_data,headers=headers)headers[<span class="string">'Cookie'</span>] = headers[<span class="string">'Cookie'</span>] + <span class="string">';'</span> + (<span class="string">'sessionid='</span>+res.history[<span class="number">0</span>].cookies[<span class="string">'sessionid'</span>])headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/json'</span><span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 发送邮件</span>res = requests.post(<span class="string">'http://xx.local.genewiz.com/email/api'</span>, data=json.dumps(email_data), headers=headers)</code></pre></div><div class="tab-pane" id="email_api-3"><pre><code class="python"><span class="comment"># API地址</span>http://xx.local.genewiz.com/email/api/<span class="comment"># 登陆验证</span>login_data = {    <span class="string">'username'</span>: <span class="string">'username'</span>,    <span class="string">'password'</span>: <span class="string">'password'</span>}s = requests.Session()res = s.get(<span class="string">'http://xx.local.genewiz.com/login/'</span>)login_data[<span class="string">'csrfmiddlewaretoken'</span>] = res.cookies[<span class="string">'csrftoken'</span>]<span class="comment"># 登录获取登录后的session</span>res = s.post(<span class="string">'http://njops.local.genewiz.com/login/'</span>, data=login_data)<span class="comment"># POST数据</span>email_data = {    <span class="string">"receivers"</span>: [<span class="string">"test1@example.com"</span>, <span class="string">"test2@example.com"</span>],    <span class="string">"content"</span>: <span class="string">"test"</span>,    <span class="string">"subject"</span>: <span class="string">"test"</span>}<span class="comment"># 发送邮件</span>headers = {}headers[<span class="string">'Content-Type'</span>] = <span class="string">'application/json'</span>res = s.post(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>, data=json.dumps(email_data), headers=headers)</code></pre></div><div class="tab-pane" id="email_api-4"><pre><code class="php">$request = <span class="keyword">new</span> HttpRequest();$request-&gt;setUrl(<span class="string">'http://xx.local.genewiz.com/email/api/'</span>);$request-&gt;setMethod(HTTP_METH_POST);<span class="comment"># 需要先登陆获取csrftoken sessionid(此处省略)</span>$request-&gt;setHeaders(<span class="keyword">array</span>(  <span class="string">'cache-control'</span> =&gt; <span class="string">'no-cache'</span>,  <span class="string">'cookie'</span> =&gt; <span class="string">'csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65'</span>,  <span class="string">'content-type'</span> =&gt; <span class="string">'application/json'</span>));$request-&gt;setBody(<span class="string">'{</span><span class="string">  "receivers": ["test1@example.com", "test2@example.com"],</span><span class="string">  "content": "test",</span><span class="string">  "subject": "test"</span><span class="string">}'</span>);<span class="keyword">try</span> {  $response = $request-&gt;send();  <span class="keyword">echo</span> $response-&gt;getBody();} <span class="keyword">catch</span> (HttpException $ex) {  <span class="keyword">echo</span> $ex;}</code></pre></div><div class="tab-pane" id="email_api-5"><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要先登陆获取csrftoken sessionid(此处省略)</span></span><br><span class="line">curl -X POST \</span><br><span class="line">    http:<span class="regexp">//</span>xx.local.genewiz.com<span class="regexp">/email/</span>api<span class="regexp">/ \</span></span><br><span class="line"><span class="regexp">  -H ‘cache-control: no-cache’ \</span></span><br><span class="line"><span class="regexp">  -H ‘content-type: application/</span>json<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -H ‘</span>cookie: csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -b ‘</span>csrftoken=eIWN96HiOCrxv63cUZmMV4RH91cTBWy4aKPpWrYljnu348xEfaImV67KSZAzEPR2;sessionid=u7hmxhlz3nba7sagf6sbwqhw64a7of65<span class="string">‘ \</span></span><br><span class="line"><span class="string">  -d ‘</span>&#123;</span><br><span class="line">  <span class="string">“receivers”</span>: [<span class="string">“<span class="exturl" data-url="bWFpbHRvOnRlc3QxQGV4YW1wbGUuY29t" title="mailto:test1@example.com">test1@example.com<i class="fa fa-external-link"></i></span>“</span>, <span class="string">“<span class="exturl" data-url="bWFpbHRvOnRlc3QyQGV4YW1wbGUuY29t" title="mailto:test2@example.com">test2@example.com<i class="fa fa-external-link"></i></span>“</span>],</span><br><span class="line">  <span class="string">“content”</span>: <span class="string">“test”</span>,</span><br><span class="line">  <span class="string">“subject”</span>: <span class="string">“test”</span></span><br><span class="line">&#125;<span class="string">‘</span></span><br></pre></td></tr></table></figure></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;开源MailServer&quot;&gt;&lt;a href=&quot;#开源MailServer&quot; class=&quot;headerlink&quot; title=&quot;开源MailServer&quot;&gt;&lt;/a&gt;开源MailServer&lt;/h5&gt;&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuaG1haWxzZXJ2ZXIuY29tL2Rvd25sb2Fk&quot; title=&quot;https://www.hmailserver.com/download&quot;&gt;https://www.hmailserver.com/download&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; (for windows)&lt;br&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9tb2RvYm9hLm9yZy9lbi8=&quot; title=&quot;https://modoboa.org/en/&quot;&gt;https://modoboa.org/en/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; (基于Django Bootstrap Jquery for Linux)&lt;/p&gt;
&lt;p&gt;本次部署hmailserver服务！&lt;/p&gt;
&lt;h5 id=&quot;部署环境&quot;&gt;&lt;a href=&quot;#部署环境&quot; class=&quot;headerlink&quot; title=&quot;部署环境&quot;&gt;&lt;/a&gt;部署环境&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;Windows Server 2012 R2 X64&lt;/li&gt;
&lt;li&gt;Mysql 5.7 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv&quot; title=&quot;https://dev.mysql.com/downloads/installer/&quot;&gt;https://dev.mysql.com/downloads/installer/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Apache2.4 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=&quot; title=&quot;https://www.apachehaus.com/cgi-bin/download.plx&quot;&gt;https://www.apachehaus.com/cgi-bin/download.plx&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;hMailServer-5.6.7-B2425 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9jZG4ubXlzcWwuY29tLy9Eb3dubG9hZHMvTXlTUUxJbnN0YWxsZXIvbXlzcWwtaW5zdGFsbGVyLXdlYi1jb21tdW5pdHktOC4wLjEyLjAubXNp&quot; title=&quot;https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi&quot;&gt;https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-web-community-8.0.12.0.msi&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;PHP 7.1 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93aW5kb3dzLnBocC5uZXQvZG93bmxvYWRzL3JlbGVhc2VzL3BocC03LjEuMjItV2luMzItVkMxNC14NjQuemlw&quot; title=&quot;https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip&quot;&gt;https://windows.php.net/downloads/releases/php-7.1.22-Win32-VC14-x64.zip&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;MS VC14&lt;/li&gt;
&lt;li&gt;libmysql&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>下机数据自动处理By peaktrace with Docker</title>
    <link href="http://blog.laohulab.com/uncategorized/1962248623.html"/>
    <id>http://blog.laohulab.com/uncategorized/1962248623.html</id>
    <published>2019-04-28T07:45:25.000Z</published>
    <updated>2019-05-03T02:42:36.058Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger">            <font color="red">Centos7.2版本较低，通过docker-compose构建时候会出现如下错误：Error response from daemon: OCI runtime create failed<br>建议Centos7.4以上，或者通过yum update升级</font>          </div><h5 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h5><h6 id="旧的版本"><a href="#旧的版本" class="headerlink" title="旧的版本"></a>旧的版本</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h6 id="添加安装源"><a href="#添加安装源" class="headerlink" title="添加安装源"></a>添加安装源</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h6 id="安装Docker-1"><a href="#安装Docker-1" class="headerlink" title="安装Docker"></a>安装Docker</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure><h6 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h6 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h6 id="Docker-compose构建"><a href="#Docker-compose构建" class="headerlink" title="Docker-compose构建"></a>Docker-compose构建</h6><div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1"><i class="fa fa-cogs" style="font-size:16px" title></i> Docker-compose Build</a></li><li class="tab"><a href="#-2"><i class="fa fa-cogs" style="font-size:16px" title></i>  Docker-compose Image</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><div class="note danger"><p><strong>注意事项</strong><br>  执行docker-compose命令时，务必进入docker-compose.yml所在的目录，否则无法正常执行。</p></div><p></p><h6 id="上传项目至服务器"><a href="#上传项目至服务器" class="headerlink" title="上传项目至服务器"></a>上传项目至服务器</h6><p>路径：/opt/clims</p><p></p><p></p><h6 id="配置docker-compose-yml"><a href="#配置docker-compose-yml" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h6><div class="note danger"><p><strong>注意事项</strong><br>宿主机下机数据路径务必与容器内部路径一致,请根据实际情况修改!</p></div><p></p><p></p><p><img src="/images/pasted-199.png" alt="upload successful"></p><p></p><p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">‘3’</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    db:</span></span><br><span class="line"><span class="attr">      container_name:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">      image:</span> <span class="attr">mysql:5.6</span></span><br><span class="line"><span class="attr">      environment:</span></span><br><span class="line"><span class="attr">        MYSQL_ROOT_PASSWORD:</span> <span class="string">xxxxxxxx</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">“3306:3306”</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./mysql/data:/var/lib/mysql</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    web:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./nginx</span></span><br><span class="line">        <span class="comment">#image: nginx:test</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">“80:80”</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./nginx/conf:/opt/nginx/conf</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./django/clims:/opt/clims-status</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">status</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    status:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">django</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./django</span></span><br><span class="line">        <span class="comment">#image: django:test</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="comment"># command: uwsgi  –emperor uwsgi.ini</span></span><br><span class="line"><span class="attr">        command:</span> <span class="string">uwsgi</span> <span class="bullet">–ini</span> <span class="string">/opt/clims/uwsgi/uwsgi.ini</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">“8001:8001”</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./django/clims:/opt/clims</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">db</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    pipeline:</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">pipeline</span></span><br><span class="line"><span class="attr">        build:</span> <span class="string">./pipeline</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/internal:/opt/pipeline/internal</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/external:/opt/pipeline/external</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">./pipeline/cron:/var/spool/cron</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/sanger-pipeline/clims-in-uat:/sanger-pipeline/clims-in-uat</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/sanger-pipeline/clims-out-uat:/sanger-pipeline/clims-out-uat</span></span><br><span class="line"><span class="attr">        depends_on:</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">db</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">status</span></span><br><span class="line"><span class="bullet">         -</span> <span class="string">web</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">    data:</span></span><br><span class="line"><span class="attr">    clims:</span></span><br><span class="line">    <span class="attr">conf:</span></span><br></pre></td></tr></table></figure></p><p></p><h6 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p></p><div class="note info"><p><strong>备注</strong><br>执行此命令会自动构建镜像，并以此镜像自动创建容器，至此已完成自动化部署，可以访问http://宿主机IP/即可！</p></div><p></p><h6 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h6><p><img src="/images/pasted-200.png" alt="upload successful"></p><p></p><p></p><h6 id="上传镜像至本地仓库"><a href="#上传镜像至本地仓库" class="headerlink" title="上传镜像至本地仓库"></a>上传镜像至本地仓库</h6><ul><p></p><p><li>苏州Harbor仓库地址：<span class="exturl" data-url="aHR0cHM6Ly94eC5sb2NhbC5nZW5ld2l6LmNvbQ==" title="https://xx.local.genewiz.com">https://xx.local.genewiz.com<i class="fa fa-external-link"></i></span><!-- * 苏州Harbor仓库地址：https://gwharbor03.local.genewiz.com --><br></li><br></p></ul><p></p><p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 登录本地仓库</span><br><span class="line">docker login <span class="exturl" data-url="aHR0cHM6Ly94eC5sb2NhbC5nZW5ld2l6LmNvbQ==" title="https://xx.local.genewiz.com">https://xx.local.genewiz.com<i class="fa fa-external-link"></i></span></span><br></pre></td></tr></table></figure></p><p></p><p><img src="/images/pasted-301.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-201.png) --></p><p></p><p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// 本地镜像标记TAG</span><br><span class="line">docker tag clims_pipeline:latest xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">docker tag clims_web:latest xx.local.genewiz.com/clims/web:latest</span><br><span class="line">docker tag clims_status:latest xx.local.genewiz.com/clims/status:latest</span><br><span class="line">docker tag mysql:5.6 xx.local.genewiz.com/clims/mysql:5.6</span><br><span class="line">// 上传</span><br><span class="line">docker push xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/web:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/status:latest</span><br><span class="line">docker push xx.local.genewiz.com/clims/mysql:5.6</span><br></pre></td></tr></table></figure></p><p></p><h6 id="登录仓库查看上传镜像"><a href="#登录仓库查看上传镜像" class="headerlink" title="登录仓库查看上传镜像"></a>登录仓库查看上传镜像</h6><p><img src="/images/pasted-202.png" alt="upload successful"><br></p></div><div class="tab-pane" id="-2"><div class="note danger"><strong>注意事项</strong><br><p>执行docker-compose命令时，务必进入docker-compose.yml所在的目录，否则无法正常执行。</p></div>  <p></p><h6 id="上传项目至服务器-1"><a href="#上传项目至服务器-1" class="headerlink" title="上传项目至服务器"></a>上传项目至服务器</h6><p>路径：/opt/clims</p><p></p><p></p><h6 id="配置docker-compose-yml-1"><a href="#配置docker-compose-yml-1" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h6><div class="note danger"><strong>注意事项</strong><br><p>宿主机下机数据路径务必与容器内部路径一致,请根据实际情况修改!</p></div>  <p></p><p></p><p><img src="/images/pasted-204.png" alt="upload successful"></p><p></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">‘3’</span></span><br><span class="line">services:</span><br><span class="line">    db:</span><br><span class="line">      container_name: mysql</span><br><span class="line">      <span class="comment">#image: mysql:5.6</span></span><br><span class="line">      image: xx.local.genewiz.com/clims/mysql:5.6</span><br><span class="line">      environment:</span><br><span class="line">        MYSQL_ROOT_PASSWORD: xxxxxxxx</span><br><span class="line">      ports:</span><br><span class="line">        - <span class="string">“3306:3306”</span></span><br><span class="line">      volumes:</span><br><span class="line">        - ./mysql/data:/var/lib/mysql</span><br><span class="line"> </span><br><span class="line">    web:</span><br><span class="line">        container_name: nginx</span><br><span class="line">        <span class="comment">#build: ./nginx</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/web:latest</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">        - <span class="string">“80:80”</span></span><br><span class="line">        volumes:</span><br><span class="line">        - ./nginx/conf:/opt/nginx/conf</span><br><span class="line">        - ./django/clims:/opt/clims-status</span><br><span class="line">        depends_on:</span><br><span class="line">        - status</span><br><span class="line"> </span><br><span class="line">    status:</span><br><span class="line">        container_name: django</span><br><span class="line">        <span class="comment">#build: ./django</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/status:latest</span><br><span class="line">        restart: always</span><br><span class="line">        <span class="comment"># command: uwsgi  –emperor uwsgi.ini</span></span><br><span class="line">        <span class="built_in">command</span>: uwsgi –ini /opt/clims/uwsgi/uwsgi.ini</span><br><span class="line">        ports:</span><br><span class="line">         - <span class="string">“8001:8001”</span></span><br><span class="line">        volumes:</span><br><span class="line">        - ./django/clims:/opt/clims</span><br><span class="line">        depends_on:</span><br><span class="line">         - db</span><br><span class="line"> </span><br><span class="line">    pipeline:</span><br><span class="line">        container_name: pipeline</span><br><span class="line">        <span class="comment">#build: ./pipeline</span></span><br><span class="line">        image: xx.local.genewiz.com/clims/pipeline:latest</span><br><span class="line">        restart: always</span><br><span class="line">        volumes:</span><br><span class="line">        - ./pipeline/internal:/opt/pipeline/internal</span><br><span class="line">        - ./pipeline/external:/opt/pipeline/external</span><br><span class="line">        - ./pipeline/cron:/var/spool/cron</span><br><span class="line">        - /sanger-pipeline/clims-in-uat:/sanger-pipeline/clims-in-uat</span><br><span class="line">        - /sanger-pipeline/clims-out-uat:/sanger-pipeline/clims-out-uat</span><br><span class="line">        depends_on:</span><br><span class="line">         - db</span><br><span class="line">         - status</span><br><span class="line">         - web</span><br><span class="line"> </span><br><span class="line">volumes:</span><br><span class="line">    data:</span><br><span class="line">    clims:</span><br><span class="line">    conf:</span><br></pre></td></tr></table></figure><br><div class="note danger"><strong>注意事项</strong><p>此时构建镜像直接从本地仓库获取，而不是本地编译Dockerfile!</p></div><br><br><h6 id="开始构建-1"><a href="#开始构建-1" class="headerlink" title="开始构建"></a>开始构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></div></div></div><h5 id="容器启停"><a href="#容器启停" class="headerlink" title="容器启停"></a>容器启停</h5><h6 id="容器停止"><a href="#容器停止" class="headerlink" title="容器停止"></a>容器停止</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure><h6 id="容器启动"><a href="#容器启动" class="headerlink" title="容器启动"></a>容器启动</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose start</span><br></pre></td></tr></table></figure><h6 id="容器重启"><a href="#容器重启" class="headerlink" title="容器重启"></a>容器重启</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><h6 id="容器重新构建"><a href="#容器重新构建" class="headerlink" title="容器重新构建"></a>容器重新构建</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h5 id="Pipeline使用注意事项"><a href="#Pipeline使用注意事项" class="headerlink" title="Pipeline使用注意事项"></a>Pipeline使用注意事项</h5><h6 id="Json配置文件说明"><a href="#Json配置文件说明" class="headerlink" title="Json配置文件说明"></a>Json配置文件说明</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"INPUT_ROOT_DIRECTORY"</span>: <span class="string">"/sanger-pipeline/clims-in-uat"</span>, //本地下机路径</span><br><span class="line">  <span class="string">"OUTPUT_ROOT_DIRECTORY"</span>: <span class="string">"/sanger-pipeline/clims-out-uat"</span>, //本地下机路径</span><br><span class="line">  <span class="string">"INPUT_SMB_DIRECTORY"</span>: <span class="string">"\\\\10.105.23.227\\seqdata-in"</span>, //相对应Samba路径</span><br><span class="line">  <span class="string">"OUTPUT_SMB_DIRECTORY"</span>: <span class="string">"\\\\10.105.23.227\\seqdata"</span>, //相对应Samba路径</span><br><span class="line">  <span class="string">"PEAKTRACE_SERVER"</span>:<span class="string">"10.105.21.181"</span>, //Peaktrace所在服务器IP</span><br><span class="line">  <span class="string">"PEAKTRACE_USER"</span>:<span class="string">"root"</span>, //Peaktrace服务器账号</span><br><span class="line">  <span class="string">"PEAKTRACE_PASSWORD"</span>:<span class="string">"xxxxxxxx"</span>, //Peaktrace服务器账号密码</span><br><span class="line">  <span class="string">"PEAKTRACE_EXEC_ARGS"</span>: <span class="string">"-al no -c -10 -n 0 -xn yes"</span>, //Peaktrace参数</span><br><span class="line">  <span class="string">"PEAKTRACE_UNITS"</span>:<span class="string">"140000"</span>, //告警阈值</span><br><span class="line">  <span class="string">"PEAKTRACE_DAYS"</span>:<span class="string">"700"</span>, //告警阈值</span><br><span class="line">  <span class="string">"MYSQL_HOST"</span>:<span class="string">"db"</span>, //容器DB主机</span><br><span class="line">  <span class="string">"MYSQL_USER"</span>:<span class="string">"root"</span>, //容器DB账号</span><br><span class="line">  <span class="string">"MYSQL_PASSWORD"</span>:<span class="string">"xxxxxxxx"</span>, //容器DB密码</span><br><span class="line">  <span class="string">"MYSQL_DB"</span>:<span class="string">"pipelinedb"</span>, //数据库</span><br><span class="line">  <span class="string">"STATUS_URL"</span>:<span class="string">"http://10.105.21.181/"</span> // 详情页面地址</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h6><p>默认均关闭，需要手动打开,请合理设置时间间隔！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Internal Pipeline</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/internal/climspipe.py &amp;&gt;&gt; /tmp/pipeline-internal.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># External Pipeline</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/external/climspipe.py &amp;&gt;&gt; /tmp/pipeline-external.log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># PeakTrace License Monitor</span></span><br><span class="line"><span class="comment">#* * * * * python /opt/pipeline/internal/pt_license_monitor.py</span></span><br></pre></td></tr></table></figure><div class="note info">            <p>生产环境，已通过Peaktrace处理过的目录，请提前加入数据库中，否则会被重新处理，请慎重操作！</p>          </div><h5 id="Nginx-域名配置（可选）"><a href="#Nginx-域名配置（可选）" class="headerlink" title="Nginx 域名配置（可选）"></a>Nginx 域名配置（可选）</h5><div class="note info">            <p>Nginx默认监听所有IP地址，容器部署完成后，直接访问宿主机IP地址即可！</p><p>如需配置域名，请替换如下域名，配置相应DNS记录,重启容器即可生效</p>          </div><p><img src="/images/pasted-203.png" alt="upload successful"></p><h5 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h5><div class="note danger">            <font color="red">docker WARNING: IPv4 forwarding is disabled?</font>          </div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf or vim /usr/lib/sysctl.d/00-system.conf</span><br><span class="line"> </span><br><span class="line">添加如下代码：</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"> </span><br><span class="line">查看</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h5 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h5><p><img src="/images/pasted-312.png" alt="upload successful"><br><img src="/images/pasted-321.png" alt="upload successful"><br><img src="/images/pasted-319.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-310.png) --></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note danger&quot;&gt;
            &lt;font color=&quot;red&quot;&gt;Centos7.2版本较低，通过docker-compose构建时候会出现如下错误：Error response from daemon: OCI runtime create failed&lt;br&gt;建议Centos7.4以上，或者通过yum update升级&lt;/font&gt;
          &lt;/div&gt;
&lt;h5 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; class=&quot;headerlink&quot; title=&quot;安装Docker&quot;&gt;&lt;/a&gt;安装Docker&lt;/h5&gt;&lt;h6 id=&quot;旧的版本&quot;&gt;&lt;a href=&quot;#旧的版本&quot; class=&quot;headerlink&quot; title=&quot;旧的版本&quot;&gt;&lt;/a&gt;旧的版本&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>下机数据自动处理By peaktrace</title>
    <link href="http://blog.laohulab.com/uncategorized/4039255390.html"/>
    <id>http://blog.laohulab.com/uncategorized/4039255390.html</id>
    <published>2019-04-28T06:55:26.000Z</published>
    <updated>2019-05-01T06:26:15.819Z</updated>
    
    <content type="html"><![CDATA[<h5 id="处理流程"><a href="#处理流程" class="headerlink" title="处理流程"></a>处理流程</h5><p><img src="/images/pasted-198.png" alt="upload successful"></p><a id="more"></a><h5 id="安装PeakTrace"><a href="#安装PeakTrace" class="headerlink" title="安装PeakTrace"></a>安装PeakTrace</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">tar -zxv peaktrace_6911_linux_el7_x86_64 </span><br><span class="line">cd peaktrace_6911_linux_el7_x86_64</span><br><span class="line"> </span><br><span class="line"><span class="comment"># installs peaktrace and codemeter on CentOS 7</span></span><br><span class="line">yum --nogpgcheck localinstall CodeMeter<span class="number">-6.60</span><span class="number">.2878</span><span class="number">-501.</span>x86_64.rpm AxProtector<span class="number">-10.10</span><span class="number">.2878</span><span class="number">-501.</span>x86_64.rpm</span><br><span class="line">chmod <span class="number">755</span> peaktrace &amp;&amp; cp peaktrace /usr/bin/peaktrace</span><br><span class="line">cp peaktrace<span class="number">.1</span>.gz /usr/local/share/man/man1/peaktrace<span class="number">.1</span>.gz</span><br><span class="line">cmu -h</span><br></pre></td></tr></table></figure><h5 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">mysqladmin -hlocalhost -uroot password <span class="string">"xxx"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"create database pipelinedb character set utf8;"</span> | mysql -hlocalhost -uroot -p<span class="string">'xxx'</span></span><br></pre></td></tr></table></figure><h5 id="安装Django环境"><a href="#安装Django环境" class="headerlink" title="安装Django环境"></a>安装Django环境</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -r requirement.txt </span><br><span class="line"></span><br><span class="line">asn1crypto==0.24.0</span><br><span class="line">bcrypt==3.1.4</span><br><span class="line">biopython==1.72</span><br><span class="line">cffi==1.11.5</span><br><span class="line">cryptography==2.4.1</span><br><span class="line">diff-match-patch==20181111</span><br><span class="line">Django==1.10.4</span><br><span class="line">django-auth-ldap==1.3.0</span><br><span class="line">django-crispy-forms==1.7.2</span><br><span class="line">django-formtools==2.1</span><br><span class="line">django-import-export==1.0.1</span><br><span class="line">django-pure-pagination==0.3.0</span><br><span class="line">django-ranged-response==0.2.0</span><br><span class="line">django-simple-captcha==0.4.6</span><br><span class="line">enum34==1.1.6</span><br><span class="line">et-xmlfile==1.0.1</span><br><span class="line">idna==2.7</span><br><span class="line">image==1.5.24</span><br><span class="line">ipaddress==1.0.22</span><br><span class="line">jdcal==1.4</span><br><span class="line">MySQL-python==1.2.5</span><br><span class="line">numpy==1.15.1</span><br><span class="line">odfpy==1.3.6</span><br><span class="line">openpyxl==2.5.11</span><br><span class="line">paramiko==2.4.1</span><br><span class="line">Pillow==5.3.0</span><br><span class="line">psycopg2-binary==2.7.5</span><br><span class="line">pyasn1==0.4.4</span><br><span class="line">pycparser==2.19</span><br><span class="line">PyNaCl==1.3.0</span><br><span class="line">python-ldap==2.5.2</span><br><span class="line">PyYAML==3.13</span><br><span class="line">six==1.11.0</span><br><span class="line">SQLAlchemy==1.2.11</span><br><span class="line">tablib==0.12.1</span><br><span class="line">unicodecsv==0.14.1</span><br><span class="line">uWSGI==2.0.17.1</span><br><span class="line">xlrd==1.1.0</span><br><span class="line">xlwt==1.3.0</span><br></pre></td></tr></table></figure><h5 id="修改Django-DB配置"><a href="#修改Django-DB配置" class="headerlink" title="修改Django DB配置"></a>修改Django DB配置</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'pipelinedb'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'xxxxxxxx'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'127.0.0.1'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><h5 id="同步静态文件"><a href="#同步静态文件" class="headerlink" title="同步静态文件"></a>同步静态文件</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><h5 id="配置uwsgi"><a href="#配置uwsgi" class="headerlink" title="配置uwsgi"></a>配置uwsgi</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line"><span class="comment"># 项目目录</span></span><br><span class="line"><span class="built_in">chdir</span>=/opt/clims</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定项目的application</span></span><br><span class="line">module=clims.wsgi</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定sock的文件路径</span></span><br><span class="line">socket=/opt/clims/uwsgi/uwsgi.sock</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启用主进程</span></span><br><span class="line">master=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 进程个数</span></span><br><span class="line">workers=2</span><br><span class="line"> </span><br><span class="line">pidfile=/opt/clims/uwsgi/uwsgi.pid</span><br><span class="line"><span class="comment"># 自动移除unix Socket和pid文件当服务停止的时候</span></span><br><span class="line">vacuum=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定IP端口</span></span><br><span class="line">http=10.105.21.181:8001</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定静态文件</span></span><br><span class="line">static-map=/static=/opt/clims/statics</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启动uwsgi的用户名和用户组</span></span><br><span class="line">uid=root</span><br><span class="line">gid=root</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 序列化接受的内容，如果可能的话</span></span><br><span class="line">thunder-lock=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启用线程</span></span><br><span class="line"><span class="built_in">enable</span>-threads=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置自中断时间</span></span><br><span class="line">harakiri=30</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置缓冲</span></span><br><span class="line">post-buffering=4096</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置日志目录</span></span><br><span class="line">daemonize=/opt/clims/uwsgi/uwsgi.log</span><br></pre></td></tr></table></figure><h5 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --ini /opt/clims/uwsgi/uwsgi8001.ini</span><br></pre></td></tr></table></figure><h5 id="停止项目"><a href="#停止项目" class="headerlink" title="停止项目"></a>停止项目</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkill -9 uwsgi</span><br><span class="line"> </span><br><span class="line">or</span><br><span class="line"> </span><br><span class="line">ps -ef|grep uwsgi |grep -v grep|xargs <span class="built_in">kill</span> -9</span><br></pre></td></tr></table></figure><h5 id="启动pipeline"><a href="#启动pipeline" class="headerlink" title="启动pipeline"></a>启动pipeline</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">通过设置定时任务即可！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;处理流程&quot;&gt;&lt;a href=&quot;#处理流程&quot; class=&quot;headerlink&quot; title=&quot;处理流程&quot;&gt;&lt;/a&gt;处理流程&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-198.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>目录同步-线上部署</title>
    <link href="http://blog.laohulab.com/uncategorized/150957718.html"/>
    <id>http://blog.laohulab.com/uncategorized/150957718.html</id>
    <published>2019-04-28T06:49:51.000Z</published>
    <updated>2019-05-01T06:27:00.553Z</updated>
    
    <content type="html"><![CDATA[<h5 id="线上环境部署"><a href="#线上环境部署" class="headerlink" title="线上环境部署"></a>线上环境部署</h5><h6 id="安装python2-7"><a href="#安装python2-7" class="headerlink" title="安装python2.7"></a>安装python2.7</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/2.7.13/Python-2.7.13rc1.tgz</span><br><span class="line">tar zxvf Python-2.7.13rc1.tgz </span><br><span class="line"><span class="built_in">cd</span> Python-2.7.13rc1</span><br><span class="line">yum -y install sqlite-devel openssl-devel tk-devel readline-devel bzip2-devel gdbm-devel</span><br><span class="line">./configure --prefix=/opt/app/python2.7/</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">/opt/app/python2.7/bin/python get-pip.py</span><br><span class="line">/opt/app/python2.7/bin/pip install virtualenvwrapper</span><br></pre></td></tr></table></figure><h6 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="built_in">export</span> PATH=/opt/app/python2.7/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> WORKON_HOME=/opt/virtualenvs</span><br><span class="line"><span class="built_in">export</span> VIRTUALENVWRAPPER_PYTHON=/opt/app/python2.7/bin/python</span><br><span class="line"><span class="built_in">source</span> /opt/app/python2.7/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure><h6 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkvirtualenv -p /opt/app/python2.7/bin/python DeviceOnline</span><br><span class="line">pip install -r /opt/DeviceOnline/venv/requirment.txt -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure><h5 id="目录创建"><a href="#目录创建" class="headerlink" title="目录创建"></a>目录创建</h5><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title="进入虚拟环境"></a>进入虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">workon DeviceOnline</span><br></pre></td></tr></table></figure><h6 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(DeviceOnline) [root@gwszsmb01 DeviceOnline]<span class="comment"># ./run.py </span></span><br><span class="line">usage: run.py [-h] [--force] [--configfile CONFIGFILE] folder_name</span><br><span class="line">run.py: error: too few arguments</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Example</span></span><br><span class="line">(DeviceOnline) [root@gwszsmb01 DeviceOnline]<span class="comment"># ./run.py Linne</span></span><br></pre></td></tr></table></figure><h6 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title="退出虚拟环境"></a>退出虚拟环境</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;线上环境部署&quot;&gt;&lt;a href=&quot;#线上环境部署&quot; class=&quot;headerlink&quot; title=&quot;线上环境部署&quot;&gt;&lt;/a&gt;线上环境部署&lt;/h5&gt;&lt;h6 id=&quot;安装python2-7&quot;&gt;&lt;a href=&quot;#安装python2-7&quot; class=&quot;headerlink&quot; title=&quot;安装python2.7&quot;&gt;&lt;/a&gt;安装python2.7&lt;/h6&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://www.python.org/ftp/python/2.7.13/Python-2.7.13rc1.tgz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf Python-2.7.13rc1.tgz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; Python-2.7.13rc1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install sqlite-devel openssl-devel tk-devel readline-devel bzip2-devel gdbm-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure --prefix=/opt/app/python2.7/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>目录同步</title>
    <link href="http://blog.laohulab.com/uncategorized/2863113024.html"/>
    <id>http://blog.laohulab.com/uncategorized/2863113024.html</id>
    <published>2019-04-28T06:23:41.000Z</published>
    <updated>2019-05-03T02:55:06.578Z</updated>
    
    <content type="html"><![CDATA[<h5 id="同步示例"><a href="#同步示例" class="headerlink" title="同步示例"></a>同步示例</h5><p><img src="/images/pasted-188.png" alt="upload successful"></p><a id="more"></a><h5 id="目录流程"><a href="#目录流程" class="headerlink" title="目录流程"></a>目录流程</h5><p><img src="/images/pasted-189.png" alt="upload successful"></p><h5 id="初次安装"><a href="#初次安装" class="headerlink" title="初次安装"></a>初次安装</h5><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title="进入虚拟环境"></a>进入虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">source ../../DeviceOnline/bin/activate</span><br></pre></td></tr></table></figure><h6 id="进入run-py所在目录"><a href="#进入run-py所在目录" class="headerlink" title="进入run.py所在目录"></a>进入run.py所在目录</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd ../DeviceOnline</span><br></pre></td></tr></table></figure><h6 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(venv) [root@localhost DeviceOnline]<span class="comment"># ./run.py -h</span></span><br><span class="line">usage: run.py [-h] [--force] [--configfile CONFIGFILE] folder_name</span><br><span class="line"> </span><br><span class="line">positional arguments:</span><br><span class="line">  folder_name           The Name of Device</span><br><span class="line"> </span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message <span class="keyword">and</span> exit</span><br><span class="line">  --force               Force installation</span><br><span class="line">  --configfile CONFIGFILE</span><br><span class="line">                        Configuration file to use</span><br></pre></td></tr></table></figure><h6 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">./run.py folder_name</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-190.png" alt="upload successful"></p><blockquote class="pullquote note info"><p>使用场景：<br>本地Samba未安装lsyncd同步软件<br>本地Samba &amp; Azrue Samba服务器均未创建SyncUser用户<br>本地Samba SyncUser公钥尚未同步至Azrue Samba</p></blockquote><h5 id="非初次安装"><a href="#非初次安装" class="headerlink" title="非初次安装"></a>非初次安装</h5><p><img src="/images/pasted-191.png" alt="upload successful"></p><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p><code>../DeviceOnline/install.cfg</code></p><p><img src="/images/pasted-192.png" alt="upload successful"></p><h5 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h5><h6 id="Lsyncd未安装"><a href="#Lsyncd未安装" class="headerlink" title="Lsyncd未安装"></a>Lsyncd未安装</h6><p><img src="/images/pasted-193.png" alt="upload successful"></p><h6 id="SyncUser未创建"><a href="#SyncUser未创建" class="headerlink" title="SyncUser未创建"></a>SyncUser未创建</h6><p><img src="/images/pasted-194.png" alt="upload successful"></p><h6 id="公钥未同步"><a href="#公钥未同步" class="headerlink" title="公钥未同步"></a>公钥未同步</h6><p><img src="/images/pasted-195.png" alt="upload successful"></p><h6 id="目录重名"><a href="#目录重名" class="headerlink" title="目录重名"></a>目录重名</h6><p><img src="/images/pasted-196.png" alt="upload successful"></p><h5 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h5><p><img src="/images/pasted-327.png" alt="upload successful"><br><!-- ![upload successful](/images/pasted-197.png) --></p><h5 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">An installer for GENEWIZ Device Online.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Create Device Folder Name IN Local &amp; Azrue Samba Servers.</span></span><br><span class="line"><span class="string">Config Lsyncd Service IN Local Samba Server.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">import</span> configparser</span><br><span class="line"><span class="keyword">except</span> ImportError:</span><br><span class="line">    <span class="keyword">import</span> ConfigParser <span class="keyword">as</span> configparser</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> system</span><br><span class="line"><span class="keyword">from</span> scripts <span class="keyword">import</span> utils</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deploy_key</span><span class="params">(key, host, username, password, sync_user)</span>:</span></span><br><span class="line">    <span class="string">"""Deploy Public key to target machines"""</span></span><br><span class="line">    client = paramiko.SSHClient()</span><br><span class="line">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    client.connect(host, username=username, password=password)</span><br><span class="line">    client.exec_command(<span class="string">'mkdir -p /home/&#123;&#125;/.ssh/'</span>.format(sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chown &#123;&#125;.&#123;&#125; /home/&#123;&#125;/.ssh/'</span>.format(sync_user, sync_user, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'echo "&#123;&#125;" &gt; /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(key, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chmod 600 /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chown &#123;&#125;.&#123;&#125; /home/&#123;&#125;/.ssh/authorized_keys'</span>.format(sync_user, sync_user, sync_user))</span><br><span class="line">    client.exec_command(<span class="string">'chmod 700 /home/&#123;&#125;/.ssh/'</span>.format(sync_user))</span><br><span class="line">    client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mkdirs</span><span class="params">(host, username, password, folder_path, sync_user)</span>:</span></span><br><span class="line">    <span class="string">"""Make dirs"""</span></span><br><span class="line">    client = paramiko.SSHClient()</span><br><span class="line">    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    client.connect(host, username=username, password=password)</span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> folder_path:</span><br><span class="line">        client.exec_command(<span class="string">'mkdir -p &#123;&#125;'</span>.format(path))</span><br><span class="line">        client.exec_command(<span class="string">'chmod -R 2776 &#123;&#125;'</span>.format(path))</span><br><span class="line">        client.exec_command(<span class="string">'chown &#123;&#125;."&#123;&#125;" &#123;&#125;'</span>.format(sync_user, <span class="string">'domain users'</span>, path))</span><br><span class="line">    client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SentMail</span><span class="params">(msg_data, mail_to, mail_cc)</span>:</span></span><br><span class="line">    <span class="string">"""Send Email"""</span></span><br><span class="line">    mail_host = <span class="string">'10.xx.xx.xx'</span></span><br><span class="line">    mail_user = <span class="string">'xx@genewiz.com.cn'</span></span><br><span class="line">    <span class="comment"># mail_pass = '********'</span></span><br><span class="line">    mail_sender = <span class="string">'xx@genewiz.com.cn'</span></span><br><span class="line">    mail_to = mail_to</span><br><span class="line">    mail_cc = mail_cc</span><br><span class="line">    subject = <span class="string">'【GENEWIZ-IT】设备目录上线通知'</span></span><br><span class="line">    <span class="comment"># message = MIMEMultipart()</span></span><br><span class="line">    tr_messages_list = []</span><br><span class="line">    li_messages_list = []</span><br><span class="line">    <span class="keyword">for</span> smb_tag, smb_info <span class="keyword">in</span> msg_data.items():</span><br><span class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> smb_info[<span class="string">'hosts'</span>]:</span><br><span class="line">            hostname = host[<span class="string">'hostname'</span>]</span><br><span class="line">            folder_auth = host[<span class="string">'folder_auth'</span>]</span><br><span class="line">            create_time = host[<span class="string">'create_time'</span>]</span><br><span class="line">            folder_group = host[<span class="string">'folder_group'</span>]</span><br><span class="line">            folder_name = host[<span class="string">'folder_name'</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'local'</span> <span class="keyword">in</span> smb_tag:</span><br><span class="line">                smb_path_internal_in = os.path.join(host[<span class="string">'smb_path_internal_in'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line">                smb_path_external_in = os.path.join(host[<span class="string">'smb_path_external_in'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line">                smb_path_out = os.path.join(host[<span class="string">'smb_path_out'</span>], folder_name).replace(<span class="string">'/'</span>, <span class="string">'\\'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> service <span class="keyword">in</span> smb_info[<span class="string">'services'</span>]:</span><br><span class="line">                    li_messages = <span class="string">'''</span></span><br><span class="line"><span class="string">                        &lt;li&gt;&lt;strong&gt;服务: &#123;&#125;&lt;/strong&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;日志目录: &#123;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;配置文件: &#123;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li style="margin-bottom:15px"&gt;系统服务: &#123;&#125;【自启动】&lt;/li&gt;                                            </span></span><br><span class="line"><span class="string">                    '''</span>.format(service[<span class="string">'name'</span>], service[<span class="string">'log_file_path'</span>], service[<span class="string">'config_path'</span>], service[<span class="string">'init_path'</span>])</span><br><span class="line">                    li_messages_list.append(li_messages)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> path <span class="keyword">in</span> host[<span class="string">'path'</span>]:</span><br><span class="line">                tr_messages = <span class="string">'''</span></span><br><span class="line"><span class="string">                    &lt;tr&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;height: 27px;line-height: 27px;background: #fff;padding:0 10px;color:#4285F4" &gt;&#123;0&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td  style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;height: 27px;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;1&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 20px"&gt;&#123;2&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;3&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;4&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;border-right: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 10px"&gt;&#123;5&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                        &lt;td style="border-top: 1px solid #c4cacd;line-height: 27px;background: #fff;padding:0 20px;color: red"&gt;&#123;6&#125;&lt;/td&gt;</span></span><br><span class="line"><span class="string">                    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                '''</span>.format(smb_tag, hostname, folder_name, path, folder_auth, folder_group, create_time)</span><br><span class="line">                tr_messages_list.append(tr_messages)</span><br><span class="line"></span><br><span class="line">    mail_msg = <span class="string">'''</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';color:#333;font-weight: bold;"&gt;您的设备目录已创建,详情如下：&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;table cellspacing="0" cellpadding="0" style="border: 1px solid #c4cacd;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">            &lt;tbody&gt;</span></span><br><span class="line"><span class="string">            &lt;tr&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-left: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;类型&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;IP&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4; line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录路径&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;权限&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;目录属组&lt;/th&gt;</span></span><br><span class="line"><span class="string">                &lt;th style="border-top: 1px solid #fff;border-right: 1px solid #c4cacd;color: white;background: #4285F4;line-height: 21px;font-weight: bold;padding: 2px 0"&gt;创建时间&lt;/th&gt;</span></span><br><span class="line"><span class="string">            &lt;/tr&gt;</span></span><br><span class="line"><span class="string">                %s</span></span><br><span class="line"><span class="string">            &lt;/tbody&gt;</span></span><br><span class="line"><span class="string">        &lt;/table&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';font-weight:bold;color:#333;border-bottom: 1px solid #eee"&gt;本地下机路径&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul style="list-style: none;margin: 0;padding: 0;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径-内单【IN】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径-外单【IN】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;本地下机路径【OUT】: %s&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:14px;font-family:'Microsoft YaHei';font-weight:bold;color:#333;border-bottom: 1px solid #eee"&gt;目录同步服务&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul style="list-style: none;margin: 0;padding: 0;font-size:13px;font-family:'Microsoft YaHei';color:#333;"&gt;</span></span><br><span class="line"><span class="string">        %s</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;p style="margin-right:20px;margin-top:15px;margin-bottom:15px; padding-bottom: 5px;font-size:12px;font-family:'Microsoft YaHei';color:red;"&gt;本邮件是由系统自动发出的，请不要回复本邮件！&lt;/p&gt;</span></span><br><span class="line"><span class="string">        '''</span> % (<span class="string">""</span>.join(tr_messages_list), smb_path_internal_in, smb_path_external_in, smb_path_out, <span class="string">""</span>.join(li_messages_list))</span><br><span class="line"></span><br><span class="line">    message = MIMEText(mail_msg, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">    message[<span class="string">'From'</span>] = Header(mail_sender)</span><br><span class="line">    message[<span class="string">'To'</span>] = Header(<span class="string">','</span>.join(mail_to))</span><br><span class="line">    message[<span class="string">'Cc'</span>] = Header(<span class="string">','</span>.join(mail_cc))</span><br><span class="line">    message[<span class="string">'Subject'</span>] = Header(subject, <span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        smtpObj = smtplib.SMTP()</span><br><span class="line">        smtpObj.connect(mail_host, <span class="number">25</span>)</span><br><span class="line">        <span class="comment"># SZ SMTP Server do not require login</span></span><br><span class="line">        <span class="comment"># smtpObj.login(mail_user,mail_pass)</span></span><br><span class="line">        smtpObj.sendmail(mail_sender, mail_to + mail_cc, message.as_string())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(input_args)</span>:</span></span><br><span class="line">    <span class="string">"""Install process."""</span></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">"--force"</span>, action=<span class="string">"store_true"</span>, default=<span class="literal">False</span>,help=<span class="string">"Force installation"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"--configfile"</span>, default=<span class="string">"installer.cfg"</span>,help=<span class="string">"Configuration file to use"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"folder_name"</span>, type=str,help=<span class="string">"The Name of Device"</span>)</span><br><span class="line">    args = parser.parse_args(input_args)</span><br><span class="line"></span><br><span class="line">    folder_name = args.folder_name</span><br><span class="line">    basedir = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line"></span><br><span class="line">    utils.printcolor(<span class="string">"Welcome to Genewiz installer for Device Online!\n"</span>, utils.GREEN)</span><br><span class="line">    config = configparser.SafeConfigParser()</span><br><span class="line">    <span class="keyword">with</span> open(args.configfile) <span class="keyword">as</span> fp:</span><br><span class="line">        config.readfp(fp)</span><br><span class="line"></span><br><span class="line">    mail_to = config.get(<span class="string">'notify'</span>, <span class="string">'mail_to'</span>).split(<span class="string">','</span>)</span><br><span class="line">    mail_cc= config.get(<span class="string">'notify'</span>, <span class="string">'mail_cc'</span>).split(<span class="string">','</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if Lsyncd is installed?</span></span><br><span class="line">    utils.printcolor(<span class="string">"1.Check if Lsyncd is installed?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line">    code,res = utils.exec_cmd(<span class="string">'which lsyncd'</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">        utils.printcolor(<span class="string">"[Error]: lsyncd is not installed."</span>, utils.RED)</span><br><span class="line">        name, version, _id = platform.linux_distribution()</span><br><span class="line">        <span class="keyword">if</span> version.startswith(<span class="string">'6'</span>):</span><br><span class="line">            lsyncd_rpm = os.path.join(basedir, <span class="string">'scripts/files/lsyncd-2.1.5-0.el6.x86_64.rpm'</span>)</span><br><span class="line">        <span class="keyword">elif</span> version.startswith(<span class="string">'7'</span>):</span><br><span class="line">            lsyncd_rpm = os.path.join(basedir, <span class="string">'scripts/files/lsyncd-2.1.5-6.el7.x86_64.rpm'</span>)</span><br><span class="line">        utils.printcolor(<span class="string">"[Info]: Installing lsyncd for you, please wait..."</span>, utils.BLUE)</span><br><span class="line">        package.backend.install_many(config.get(<span class="string">'requirement'</span>, <span class="string">'package'</span>).split(<span class="string">','</span>))</span><br><span class="line">        utils.exec_cmd(<span class="string">'rpm -ivh &#123;&#125;'</span>.format(lsyncd_rpm))</span><br><span class="line">        code, res = utils.exec_cmd(<span class="string">'which lsyncd'</span>)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: Lsyncd installation is complete. &#123;&#125;"</span>.format([res.strip()]), utils.GREEN)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: Lsyncd is installed &#123;&#125;"</span>.format([res.strip()]), utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if SyncUser is Created?</span></span><br><span class="line">    utils.printcolor(<span class="string">''</span>, utils.BLACK)</span><br><span class="line">    utils.printcolor(<span class="string">"2.Check if SyncUser is Created?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get all samba servers</span></span><br><span class="line">    hosts = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> section <span class="keyword">in</span> config.sections():</span><br><span class="line">        <span class="keyword">if</span> section.startswith(<span class="string">'smb-local'</span>):</span><br><span class="line">            hosts[section] = &#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> config.items(section)&#125;</span><br><span class="line">        <span class="keyword">elif</span> section.startswith(<span class="string">'smb-azure'</span>):</span><br><span class="line">            hosts[section] = &#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> config.items(section)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get local and azure servers</span></span><br><span class="line">    azure_hosts = []</span><br><span class="line">    local_hosts = []</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> hosts.keys():</span><br><span class="line">        <span class="keyword">if</span> key.startswith(<span class="string">'smb-local'</span>):</span><br><span class="line">            local_hosts.append(hosts[key])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            azure_hosts.append(hosts[key])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> hosts.values():</span><br><span class="line">        client = paramiko.SSHClient()</span><br><span class="line">        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        client.connect(host[<span class="string">'hostname'</span>], <span class="number">22</span>, username=host[<span class="string">'username'</span>], password=host[<span class="string">'password'</span>])</span><br><span class="line">        cmd = <span class="string">'id SyncUser'</span></span><br><span class="line">        stdin, stdout, stderr = client.exec_command(cmd)</span><br><span class="line">        stdout = stdout.read()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> stdout:</span><br><span class="line">            utils.printcolor(<span class="string">"[Error]: the SyncUser was not detected for &#123;&#125;"</span>.format(host[<span class="string">'hostname'</span>]), utils.RED)</span><br><span class="line">            utils.printcolor(<span class="string">"[Info]: Creating SyncUser for &#123;&#125;, please wait..."</span>.format(host[<span class="string">'hostname'</span>]), utils.BLUE)</span><br><span class="line">            cmd = <span class="string">'useradd SyncUser'</span></span><br><span class="line">            client.exec_command(cmd)</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: SyncUser is created"</span>, utils.GREEN)</span><br><span class="line">            utils.printcolor(<span class="string">''</span>, utils.BLACK)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: detected SyncUser in &#123;&#125;\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if can ssh pass the key?</span></span><br><span class="line">    utils.printcolor(<span class="string">"3.Check if can ssh pass the key?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">        key = os.path.join(basedir, <span class="string">'scripts/files/SyncUser_id_rsa'</span>)</span><br><span class="line">        private_key = paramiko.RSAKey.from_private_key_file(key)</span><br><span class="line">        client = paramiko.SSHClient()</span><br><span class="line">        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            client.connect(host[<span class="string">'hostname'</span>], <span class="number">22</span>, username=<span class="string">'SyncUser'</span>, pkey=private_key)</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: login &#123;&#125; with private key\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            utils.printcolor(<span class="string">"[Error]: &#123;&#125; for &#123;&#125;"</span>.format(str(e), host[<span class="string">'hostname'</span>]), utils.RED)</span><br><span class="line">            utils.printcolor(<span class="string">"[Info]: Initializing user permissions for &#123;&#125;, please wait..."</span>.format(host[<span class="string">'hostname'</span>]), utils.BLUE)</span><br><span class="line">            key = open(os.path.expanduser(os.path.join(basedir,<span class="string">'scripts/files/SyncUser_id_rsa.pub'</span>))).read()</span><br><span class="line">            deploy_key(key, host[<span class="string">'hostname'</span>], host[<span class="string">'username'</span>], host[<span class="string">'password'</span>], host[<span class="string">'sync_user'</span>])</span><br><span class="line">            utils.printcolor(<span class="string">"[Success]: Permission initialization succeeded in &#123;&#125;\n"</span>.format(host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if the directory name conflicts?</span></span><br><span class="line">    utils.printcolor(<span class="string">"4.Check if the directory name conflicts?"</span>, utils.BLUE)</span><br><span class="line">    utils.printcolor(<span class="string">"-"</span>*<span class="number">80</span>, utils.BLUE)</span><br><span class="line"></span><br><span class="line">    has_created_folders = []</span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        path_internal_in = host[<span class="string">'path_internal_in'</span>]</span><br><span class="line">        path_external_in = host[<span class="string">'path_external_in'</span>]</span><br><span class="line">        path_out = host[<span class="string">'path_out'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_internal_in):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_internal_in, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_external_in):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_external_in, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> folder <span class="keyword">in</span> os.listdir(path_out):</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(os.path.join(path_out, folder)):</span><br><span class="line">                has_created_folders.append(folder)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Directory deduplication</span></span><br><span class="line">    has_created_folders_unique = list(set(has_created_folders))</span><br><span class="line">    <span class="keyword">if</span> folder_name <span class="keyword">in</span> has_created_folders_unique:</span><br><span class="line">        utils.printcolor(<span class="string">"Error: Directory name conflict - &#123;&#125;, please change the directory name."</span>.format(folder_name),utils.RED)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        utils.printcolor(<span class="string">"[Success]: No directory conflict."</span>.format(folder_name),utils.GREEN)</span><br><span class="line">        utils.printcolor(<span class="string">""</span>, utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Ask for confirm</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> args.force:</span><br><span class="line">        answer = utils.user_input(<span class="string">"Will create a directory and synchronization service,do you confirm? (Y/n) "</span>)</span><br><span class="line">        <span class="keyword">if</span> answer.lower().startswith(<span class="string">"n"</span>):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># mail dict</span></span><br><span class="line">    msg_data = &#123;</span><br><span class="line">        <span class="string">'local_smb'</span>: &#123;<span class="string">'hosts'</span>: [], <span class="string">'services'</span>: []&#125;,</span><br><span class="line">        <span class="string">'azrue_smb'</span>: &#123;<span class="string">'hosts'</span>: []&#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create device folder in Local Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        folder_path_internal_in = os.path.join(host[<span class="string">'path_internal_in'</span>], folder_name)</span><br><span class="line">        folder_path_external_in = os.path.join(host[<span class="string">'path_external_in'</span>], folder_name)</span><br><span class="line">        folder_path_out = os.path.join(host[<span class="string">'path_out'</span>], folder_name)</span><br><span class="line">        folder_path = [folder_path_internal_in, folder_path_external_in, folder_path_out]</span><br><span class="line">        mkdirs(host[<span class="string">'hostname'</span>],host[<span class="string">'username'</span>],host[<span class="string">'password'</span>],folder_path,host[<span class="string">'sync_user'</span>])</span><br><span class="line">        tmp_data = &#123;&#125;</span><br><span class="line">        tmp_data[<span class="string">'hostname'</span>] = host[<span class="string">'hostname'</span>]</span><br><span class="line">        tmp_data[<span class="string">'path'</span>] = folder_path</span><br><span class="line">        tmp_data[<span class="string">'folder_name'</span>] = folder_name</span><br><span class="line">        tmp_data[<span class="string">'folder_auth'</span>] = <span class="string">'2766'</span></span><br><span class="line">        tmp_data[<span class="string">'folder_group'</span>] = <span class="string">'SyncUser:Domain User'</span></span><br><span class="line">        tmp_data[<span class="string">'smb_path_internal_in'</span>] = host[<span class="string">'smb_path_internal_in'</span>]</span><br><span class="line">        tmp_data[<span class="string">'smb_path_external_in'</span>] = host[<span class="string">'smb_path_external_in'</span>]</span><br><span class="line">        tmp_data[<span class="string">'smb_path_out'</span>] = host[<span class="string">'smb_path_out'</span>]</span><br><span class="line">        tmp_data[<span class="string">'create_time'</span>] = datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        msg_data[<span class="string">'local_smb'</span>][<span class="string">'hosts'</span>].append(tmp_data)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success-LocalSamba]: &#123;&#125; is created in &#123;&#125;"</span>.format(folder_path, host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create device folder in Azrue Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">        folder_path_out = os.path.join(host[<span class="string">'path_out'</span>], folder_name)</span><br><span class="line">        folder_path = [folder_path_out]</span><br><span class="line">        mkdirs(host[<span class="string">'hostname'</span>], host[<span class="string">'username'</span>], host[<span class="string">'password'</span>], folder_path, host[<span class="string">'sync_user'</span>])</span><br><span class="line">        tmp_data = &#123;&#125;</span><br><span class="line">        tmp_data[<span class="string">'hostname'</span>] = host[<span class="string">'hostname'</span>]</span><br><span class="line">        tmp_data[<span class="string">'path'</span>] = folder_path</span><br><span class="line">        tmp_data[<span class="string">'folder_name'</span>] = folder_name</span><br><span class="line">        tmp_data[<span class="string">'folder_auth'</span>] = <span class="string">'2766'</span></span><br><span class="line">        tmp_data[<span class="string">'folder_group'</span>] = <span class="string">'SyncUser:Domain User'</span></span><br><span class="line">        tmp_data[<span class="string">'create_time'</span>] = datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">        msg_data[<span class="string">'azrue_smb'</span>][<span class="string">'hosts'</span>].append(tmp_data)</span><br><span class="line">        utils.printcolor(<span class="string">"[Success-AzureSamba]: &#123;&#125; is created in &#123;&#125;"</span>.format(folder_path, host[<span class="string">'hostname'</span>]), utils.GREEN)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create Lsyncd services in Local Samba Servers</span></span><br><span class="line">    <span class="keyword">for</span> local_host <span class="keyword">in</span> local_hosts:</span><br><span class="line">        key = os.path.join(basedir, <span class="string">'scripts/files/SyncUser_id_rsa'</span>)</span><br><span class="line">        <span class="keyword">for</span> azure_host <span class="keyword">in</span> azure_hosts:</span><br><span class="line">            <span class="keyword">if</span> azure_host.has_key(<span class="string">'tag'</span>):</span><br><span class="line">                logfile = <span class="string">'Sync_'</span> + folder_name + <span class="string">'_DR'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logfile = <span class="string">'Sync_'</span> + folder_name</span><br><span class="line">            statusfile = logfile</span><br><span class="line">            source = os.path.join(local_host[<span class="string">'path_out'</span>],folder_name)</span><br><span class="line">            target = azure_host[<span class="string">'hostname'</span>] + <span class="string">':'</span> + os.path.join(azure_host[<span class="string">'path_out'</span>],folder_name)</span><br><span class="line">            rsh = azure_host[<span class="string">'sync_user'</span>]</span><br><span class="line">            sync_cfg_tpl = open(os.path.join(basedir, <span class="string">'scripts/files/sync-cfg.tpl'</span>)).read() % (logfile,logfile,statusfile,statusfile,source,target,key,rsh)</span><br><span class="line">            sync_init_tpl = open(os.path.join(basedir, <span class="string">'scripts/files/sync-init.tpl'</span>)).read() % (logfile,res.strip(),logfile,logfile,logfile)</span><br><span class="line">            f = open(os.path.join(<span class="string">'/etc'</span>,logfile + <span class="string">'.lua'</span>), <span class="string">'wb'</span>)</span><br><span class="line">            f.write(sync_cfg_tpl)</span><br><span class="line">            f.flush()</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">            f = open(os.path.join(<span class="string">'/etc/init.d'</span>,logfile), <span class="string">'wb'</span>)</span><br><span class="line">            f.write(sync_init_tpl)</span><br><span class="line">            f.flush()</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">            os.chmod(os.path.join(<span class="string">'/etc/init.d'</span>,logfile), <span class="number">0755</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                os.makedirs(os.path.join(<span class="string">'/var/log'</span>, logfile))</span><br><span class="line">            <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            system.enable_and_start_service(logfile)</span><br><span class="line"></span><br><span class="line">            tmp_data = &#123;&#125;</span><br><span class="line">            tmp_data[<span class="string">'name'</span>] = logfile</span><br><span class="line">            tmp_data[<span class="string">'log_file_path'</span>] = os.path.join(<span class="string">'/var/log'</span>, logfile)</span><br><span class="line">            tmp_data[<span class="string">'config_path'</span>] = os.path.join(<span class="string">'/etc'</span>, logfile + <span class="string">'.lua'</span>)</span><br><span class="line">            tmp_data[<span class="string">'init_path'</span>] = os.path.join(<span class="string">'/etc/init.d'</span>, logfile)</span><br><span class="line">            msg_data[<span class="string">'local_smb'</span>][<span class="string">'services'</span>].append(tmp_data)</span><br><span class="line"></span><br><span class="line">    utils.printcolor(<span class="string">"Congratulations!"</span>,utils.GREEN)</span><br><span class="line">    SentMail(msg_data, mail_to, mail_cc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;同步示例&quot;&gt;&lt;a href=&quot;#同步示例&quot; class=&quot;headerlink&quot; title=&quot;同步示例&quot;&gt;&lt;/a&gt;同步示例&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-188.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域账号密码自助-项目部署</title>
    <link href="http://blog.laohulab.com/uncategorized/4173984491.html"/>
    <id>http://blog.laohulab.com/uncategorized/4173984491.html</id>
    <published>2019-04-28T04:41:18.000Z</published>
    <updated>2019-05-01T06:29:37.759Z</updated>
    
    <content type="html"><![CDATA[<h5 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h5><p><code>Windows + Apache + Mod_Wsgi + Django + Mysql</code></p><blockquote class="pullquote note warning"><p>注意事项：Windows需要为英文版本，中文版本报错会有乱码！</p></blockquote><h5 id="安装Python2-7"><a href="#安装Python2-7" class="headerlink" title="安装Python2.7"></a>安装Python2.7</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv" title="https://www.python.org/downloads/">https://www.python.org/downloads/<i class="fa fa-external-link"></i></span></p><a id="more"></a><h5 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h5><h6 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h6><p><img src="/images/pasted-168.png" alt="upload successful"></p><p><img src="/images/pasted-169.png" alt="upload successful"></p><p><img src="/images/pasted-170.png" alt="upload successful"></p><p><img src="/images/pasted-171.png" alt="upload successful"></p><p><img src="/images/pasted-172.png" alt="upload successful"></p><p><img src="/images/pasted-173.png" alt="upload successful"></p><p><img src="/images/pasted-174.png" alt="upload successful"></p><p><img src="/images/pasted-175.png" alt="upload successful"></p><p><img src="/images/pasted-176.png" alt="upload successful"></p><h6 id="3-2-创建数据库"><a href="#3-2-创建数据库" class="headerlink" title="3.2 创建数据库"></a>3.2 创建数据库</h6><p><img src="/images/pasted-177.png" alt="upload successful"></p><p><img src="/images/pasted-178.png" alt="upload successful"></p><h5 id="4-创建虚拟环境"><a href="#4-创建虚拟环境" class="headerlink" title="4.创建虚拟环境"></a>4.创建虚拟环境</h5><blockquote class="pullquote note info"><ul><li>使不同应用开发环境独立</li><li>环境升级不影响其他应用，也不会影响全局的python环境</li><li>防止系统中出现包管理混乱和版本冲突</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装virtualenvwrapper</span></span><br><span class="line">pip install virtualenvwrapper-win</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建</span></span><br><span class="line">mkvirtualenv ADManager</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 进入虚拟机环境</span></span><br><span class="line">workon ADManager</span><br></pre></td></tr></table></figure><h5 id="5-离线安装-ldap-amp-mysql-python"><a href="#5-离线安装-ldap-amp-mysql-python" class="headerlink" title="5.离线安装 ldap &amp; mysql-python"></a>5.离线安装 ldap &amp; mysql-python</h5><blockquote class="pullquote note warning"><p>MySQL_python &amp; python_ldap 在windows上无法直接通过pip install 完成安装<br><span class="exturl" data-url="aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLw==" title="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/<i class="fa fa-external-link"></i></span> (解决方案)</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(ADManager) D:\&gt;<span class="built_in">cd</span> D:\ShareFloders\NG-IT\AD_Manager\package</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;dir</span><br><span class="line"> </span><br><span class="line"> Directory of D:\ShareFloders\NG-IT\AD_Manager\package</span><br><span class="line">03/19/2018  11:47 AM           821,050 MySQL_python-1.2.5-cp27-none-win_amd64.whl</span><br><span class="line">01/23/2018  10:55 PM         1,086,402 python_ldap-2.5.2-cp27-cp27m-win_amd64.whl</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;pip install MySQL_python-1.2.5-cp27-none-win_amd64.whl</span><br><span class="line">Successfully installed MySQL-python-1.2.5</span><br><span class="line"> </span><br><span class="line">(ADManager) D:\ShareFloders\NG-IT\AD_Manager\package&gt;pip install python_ldap-2.5.2-cp27-cp27m-win_amd64.whl</span><br><span class="line">Successfully installed python-ldap-2.5.2</span><br></pre></td></tr></table></figure><h5 id="6-部署Django环境"><a href="#6-部署Django环境" class="headerlink" title="6.部署Django环境"></a>6.部署Django环境</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><h5 id="7-上传CODE至服务器"><a href="#7-上传CODE至服务器" class="headerlink" title="7.上传CODE至服务器"></a>7.上传CODE至服务器</h5><p>省略</p><h5 id="8-配置数据库信息"><a href="#8-配置数据库信息" class="headerlink" title="8.配置数据库信息"></a>8.配置数据库信息</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">settings.py</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'DATABASE NAME'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'USER'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'PASSWORD'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'DATABASE IP'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-配置邮件服务器"><a href="#9-配置邮件服务器" class="headerlink" title="9.配置邮件服务器"></a>9.配置邮件服务器</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">settings.py</span><br><span class="line"><span class="comment"># Email Config</span></span><br><span class="line">EMAIL_HOST = <span class="string">'MAIL Server'</span></span><br><span class="line">EMAIL_PORT = <span class="string">'MAIL PORT'</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'USER'</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'PASSWORS'</span></span><br><span class="line">EMAIL_USE_TLS = <span class="literal">True</span></span><br><span class="line">EMAIL_FROM = <span class="string">'MAIL FROM'</span></span><br></pre></td></tr></table></figure><h5 id="10-配置Apache"><a href="#10-配置Apache" class="headerlink" title="10.配置Apache"></a>10.配置Apache</h5><h6 id="10-1-MS-VC14安装"><a href="#10-1-MS-VC14安装" class="headerlink" title="10.1 MS VC14安装"></a>10.1 MS VC14安装</h6><p><img src="/images/pasted-179.png" alt="upload successful"></p><p>Apache依赖于 MicroSoft VC14，需要安装！</p><h6 id="10-2-官网下载"><a href="#10-2-官网下载" class="headerlink" title="10.2 官网下载"></a>10.2 官网下载</h6><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlaGF1cy5jb20vY2dpLWJpbi9kb3dubG9hZC5wbHg=" title="https://www.apachehaus.com/cgi-bin/download.plx">https://www.apachehaus.com/cgi-bin/download.plx<i class="fa fa-external-link"></i></span></p><p>httpd-2.4.34-o102o-x64-vc14.zip</p><p><img src="/images/pasted-181.png" alt="upload successful"></p><h6 id="10-3-Mod-Wsgi"><a href="#10-3-Mod-Wsgi" class="headerlink" title="10.3 Mod_Wsgi"></a>10.3 Mod_Wsgi</h6><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dyYWhhbUR1bXBsZXRvbi9tb2Rfd3NnaQ==" title="https://github.com/GrahamDumpleton/mod_wsgi">https://github.com/GrahamDumpleton/mod_wsgi<i class="fa fa-external-link"></i></span></p><p>mod_wsgi-windows-4.4.12.rar</p><h6 id="10-4-配置Apache"><a href="#10-4-配置Apache" class="headerlink" title="10.4 配置Apache"></a>10.4 配置Apache</h6><p>解压httpd-2.4.34-o102o-x64-vc14.zip,将apache24目录放至 D:\apache24</p><p>解压mod_wsgi-windows-4.4.12.rar，将‪mod_wsgi-windows-4.4.12\Apache24-win64-VC10\modules\mod_wsgi-py27-VC9.so文件放至D:\apache24\modules目录</p><p><img src="/images/pasted-182.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf，添加mod_wsgi.so 模块</p><p><img src="/images/pasted-183.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf,修改SRVROOT目录</p><p><img src="/images/pasted-184.png" alt="upload successful"></p><p>修改D:\apache24\conf\httpd.conf,打开虚拟主机</p><p><img src="/images/pasted-185.png" alt="upload successful"></p><p>修改D:\Apache24\conf\extra\httpd-vhosts.conf</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin jianhu.yong@genewiz.com.cn</span><br><span class="line">    DocumentRoot <span class="string">"D:/app01/ADManager"</span></span><br><span class="line">    ServerName pwd.local.genewiz.com</span><br><span class="line">    ErrorLog <span class="string">"logs/pwd.local.genewiz.com-error.log"</span></span><br><span class="line">    CustomLog <span class="string">"logs/pwd.local.genewiz.com-access.log"</span> common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">WSGIScriptAlias / D:/app01/ADManager/ADManager/wsgi.py</span><br><span class="line">&lt;Directory D:/app01/ADManager/ADManager/&gt;</span><br><span class="line">&lt;Files wsgi.py&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line">Alias /static/ D:/app01/ADManager/statics/</span><br><span class="line">&lt;Directory D:/app01/ADManager/statics/&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># virtual env</span></span><br><span class="line">WSGIPythonPath D:/app01/ADManager;D:/python-envs/ADManager/Lib/site-packages</span><br></pre></td></tr></table></figure><h6 id="10-5-安装Apache服务"><a href="#10-5-安装Apache服务" class="headerlink" title="10.5 安装Apache服务"></a>10.5 安装Apache服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Apache24\bin</span><br><span class="line">httpd.exe -k install</span><br><span class="line">The <span class="string">"Apache2.4"</span> is successfuly installed .</span><br><span class="line">Testing httpd.conf</span><br><span class="line">Error: reported here must be corrected before the service can be started.</span><br></pre></td></tr></table></figure><h6 id="10-6-启动Apache服务"><a href="#10-6-启动Apache服务" class="headerlink" title="10.6 启动Apache服务"></a>10.6 启动Apache服务</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Apache24\bin</span><br><span class="line">net start Apache2.4</span><br><span class="line">Apache2.4 服务正在启动...</span><br><span class="line">Apache2.4 服务启动成功。</span><br></pre></td></tr></table></figure><h6 id="10-7-Apache服务管理工具"><a href="#10-7-Apache服务管理工具" class="headerlink" title="10.7 Apache服务管理工具"></a>10.7 Apache服务管理工具</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">启动D:\Apache24\bin\ApacheMonitor.exe</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-186.png" alt="upload successful"></p><h6 id="10-8-Apache运行账号权限设置"><a href="#10-8-Apache运行账号权限设置" class="headerlink" title="10.8 Apache运行账号权限设置"></a>10.8 Apache运行账号权限设置</h6><p>默认服务 没有权限执行powershell 需要在服务器上面设置登录</p><p><img src="/images/pasted-187.png" alt="upload successful"></p><h5 id="11-其他"><a href="#11-其他" class="headerlink" title="11.其他"></a>11.其他</h5><blockquote><p>ImportError: No system module ‘pywintypes’ (pywintypes27.dll) 错误</p><p>拷贝 Lib\site-packages\pywin32_system32目录下的pywintypes27.dll pythoncom27.dll 至Lib\site-packages\win32\lib目录下即可！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;部署方式&quot;&gt;&lt;a href=&quot;#部署方式&quot; class=&quot;headerlink&quot; title=&quot;部署方式&quot;&gt;&lt;/a&gt;部署方式&lt;/h5&gt;&lt;p&gt;&lt;code&gt;Windows + Apache + Mod_Wsgi + Django + Mysql&lt;/code&gt;&lt;/p&gt;
&lt;blockquote class=&quot;pullquote note warning&quot;&gt;&lt;p&gt;注意事项：Windows需要为英文版本，中文版本报错会有乱码！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;安装Python2-7&quot;&gt;&lt;a href=&quot;#安装Python2-7&quot; class=&quot;headerlink&quot; title=&quot;安装Python2.7&quot;&gt;&lt;/a&gt;安装Python2.7&lt;/h5&gt;&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv&quot; title=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域账号密码自助-前端DEMO</title>
    <link href="http://blog.laohulab.com/uncategorized/586407947.html"/>
    <id>http://blog.laohulab.com/uncategorized/586407947.html</id>
    <published>2019-04-28T04:23:55.000Z</published>
    <updated>2019-05-01T06:32:43.405Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/pasted-167.png" alt="upload successful"><br><a id="more"></a><br><img src="/images/pasted-163.png" alt="upload successful"><br><img src="/images/pasted-164.png" alt="upload successful"><br><img src="/images/pasted-165.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/pasted-167.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域账号密码自助-通知模板</title>
    <link href="http://blog.laohulab.com/uncategorized/1296339277.html"/>
    <id>http://blog.laohulab.com/uncategorized/1296339277.html</id>
    <published>2019-04-28T03:57:27.000Z</published>
    <updated>2019-05-03T09:46:45.514Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/pasted-331.png" class="pull-left"><img src="/images/pasted-332.png" class="pull-right">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/images/pasted-331.png&quot; class=&quot;pull-left&quot;&gt;
&lt;img src=&quot;/images/pasted-332.png&quot; class=&quot;pull-right&quot;&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域账号密码自助-后台逻辑</title>
    <link href="http://blog.laohulab.com/uncategorized/2579722334.html"/>
    <id>http://blog.laohulab.com/uncategorized/2579722334.html</id>
    <published>2019-04-28T02:56:00.000Z</published>
    <updated>2019-05-01T06:37:33.863Z</updated>
    
    <content type="html"><![CDATA[<h5 id="密码修改-重置核心类"><a href="#密码修改-重置核心类" class="headerlink" title="密码修改|重置核心类"></a>密码修改|重置核心类</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> pythoncom</span><br><span class="line"><span class="keyword">import</span> win32com.client</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NTUser</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># Uses ADSI to change password under user privileges</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, username)</span>:</span></span><br><span class="line">        <span class="comment"># 初始化</span></span><br><span class="line">        pythoncom.CoInitialize()</span><br><span class="line">        self.adsiNS = win32com.client.Dispatch(<span class="string">'ADsNameSpaces'</span>)</span><br><span class="line">        Userpath = <span class="string">"WinNT://10.105.42.13/"</span> + username + <span class="string">",user"</span></span><br><span class="line">        self.adsNTUser = self.adsiNS.GetObject(<span class="string">""</span>, Userpath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">modify</span><span class="params">(self, old_password, new_password)</span>:</span></span><br><span class="line">        self.adsNTUser.ChangePassword(old_password, new_password)</span><br><span class="line">        <span class="comment"># 释放资源</span></span><br><span class="line">        pythoncom.CoUninitialize()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reset</span><span class="params">(self, new_password)</span>:</span></span><br><span class="line">        self.adsNTUser.SetPassword(new_password)</span><br><span class="line">        <span class="comment"># 释放资源</span></span><br><span class="line">        pythoncom.CoUninitialize()</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="密码修改"><a href="#密码修改" class="headerlink" title="密码修改"></a>密码修改</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdModifyView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">            <span class="string">'current_year'</span>:current_year</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        pwd_modify_form = PwdModifyForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> pwd_modify_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_old = request.POST.get(<span class="string">"pwd_old"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new1 = request.POST.get(<span class="string">"pwd_new1"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new2 = request.POST.get(<span class="string">"pwd_new2"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="comment"># try:</span></span><br><span class="line">            <span class="comment">#     user_profile = UserProfile.objects.get(username=username)</span></span><br><span class="line">            <span class="comment"># except Exception as e:</span></span><br><span class="line">            <span class="comment">#     print e</span></span><br><span class="line">            <span class="comment">#     user_profile = UserProfile()</span></span><br><span class="line">            <span class="keyword">if</span> pwd_new1 != pwd_new2:</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'pwd-modify.html'</span>,&#123;</span><br><span class="line">                    <span class="string">'pwd_new_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                    <span class="string">"msg"</span>: <span class="string">"2次密码输入不一致!"</span>,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    <span class="string">'pwd_modify_form'</span>:pwd_modify_form</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                nt = NTUser(username=username)</span><br><span class="line">                nt.modify(pwd_old, pwd_new1)</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                user_profile.password = make_password(pwd_new1)</span><br><span class="line">                user_profile.save()</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'username'</span>: username,</span><br><span class="line">                    <span class="string">'email'</span>: <span class="string">'&#123;0&#125;@genewiz.com.cn'</span>.format(username),</span><br><span class="line">                    <span class="string">'ip'</span>: ip,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_modify_pwd'</span>):</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">True</span>,</span><br><span class="line">                        user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'密码修改成功'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'pwd-modify-success.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                        <span class="string">'ip'</span>: ip,</span><br><span class="line">                        <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                        <span class="string">"msg"</span>: <span class="string">"成功"</span>,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">except</span> pythoncom.com_error, (hr, msg, exc, arg):</span><br><span class="line">                stderr = exc[<span class="number">2</span>]</span><br><span class="line">            <span class="comment"># cmd = 'Set-ADAccountPassword -Identity &#123;0&#125; -OldPassword (ConvertTo-SecureString -AsPlainText "&#123;1&#125;" -Force) -NewPassword (ConvertTo-SecureString -AsPlainText "&#123;2&#125;" -Force)'.format(username, pwd_old, pwd_new1)</span></span><br><span class="line">            <span class="comment"># p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)</span></span><br><span class="line">            <span class="comment"># stdout, stderr = p.communicate()</span></span><br><span class="line">                <span class="comment"># 释放资源</span></span><br><span class="line">                pythoncom.CoUninitialize()</span><br><span class="line">                <span class="keyword">if</span> stderr:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">'found'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'username_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>: pwd_modify_form,</span><br><span class="line">                            <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">elif</span> <span class="string">'correct'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'旧密码有误,请重新输入!(输错5次,帐号将被锁定!)'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'pwd_old_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>: pwd_modify_form,</span><br><span class="line">                            <span class="string">'msg'</span>: <span class="string">'旧密码有误!'</span>,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">elif</span> <span class="string">'meet'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status = <span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip = ip,</span><br><span class="line">                            username = username,</span><br><span class="line">                            comment = <span class="string">'新密码不满足|复杂性|历史性|要求!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">"msg"</span>: <span class="string">"新密码不满足|复杂性|历史性|要求!"</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">elif</span> <span class="string">'denied'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                        cmd = <span class="string">'powershell -command Get-ADUser -Identity %s -Properties lockedout'</span> % username</span><br><span class="line">                        p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">                        stdout, stderr = p.communicate()</span><br><span class="line">                        data_list = stdout.strip().split(<span class="string">'\r\n'</span>)</span><br><span class="line">                        <span class="keyword">while</span> <span class="string">''</span> <span class="keyword">in</span> data_list:</span><br><span class="line">                            data_list.remove(<span class="string">''</span>)</span><br><span class="line">                        data = &#123;&#125;</span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> data_list:</span><br><span class="line">                            temp_list = [i.strip() <span class="keyword">for</span> i <span class="keyword">in</span> i.split(<span class="string">':'</span>)]</span><br><span class="line">                            <span class="keyword">if</span> len(temp_list) == <span class="number">2</span>:</span><br><span class="line">                                k, v = temp_list</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                k = temp_list[<span class="number">0</span>]</span><br><span class="line">                                v = <span class="string">":"</span>.join(temp_list[<span class="number">1</span>:])</span><br><span class="line">                            data[k] = v</span><br><span class="line">                        <span class="keyword">if</span> data[<span class="string">'LockedOut'</span>] == <span class="string">'True'</span>:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=<span class="string">'帐号已被锁定!'</span></span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                                <span class="string">'username_lock_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                                <span class="string">'msg'</span>: <span class="string">'帐号已被锁定!'</span>,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year</span><br><span class="line">                            &#125;)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=<span class="string">'访问被拒绝，请稍后重试!'</span></span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                                <span class="string">'username_lock_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                                <span class="string">'msg'</span>: <span class="string">'访问被拒绝，请稍后重试!'</span>,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year</span><br><span class="line">                            &#125;)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_modify_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=stderr[:<span class="number">100</span>]</span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                            <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">"msg"</span>: <span class="string">"发生未知错误，请联系管理员!"</span>,</span><br><span class="line">                            <span class="string">'pwd_modify_form'</span>:pwd_modify_form,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                <span class="comment"># else:</span></span><br><span class="line">                <span class="comment">#     user_profile, created = UserProfile.objects.get_or_create(username=username)</span></span><br><span class="line">                <span class="comment">#     user_profile.password = make_password(pwd_new1)</span></span><br><span class="line">                <span class="comment">#     user_profile.save()</span></span><br><span class="line">                <span class="comment">#     data = &#123;</span></span><br><span class="line">                <span class="comment">#         'username': username,</span></span><br><span class="line">                <span class="comment">#         'email': '&#123;0&#125;@genewiz.com.cn'.format(username),</span></span><br><span class="line">                <span class="comment">#         'ip': ip,</span></span><br><span class="line">                <span class="comment">#         'current_year': current_year</span></span><br><span class="line">                <span class="comment">#     &#125;</span></span><br><span class="line">                <span class="comment">#     if SendMail(data, send_type='user_modify_pwd'):</span></span><br><span class="line">                <span class="comment">#         UserActionLog.objects.create(</span></span><br><span class="line">                <span class="comment">#             status=True,</span></span><br><span class="line">                <span class="comment">#             user_type='user_modify_pwd',</span></span><br><span class="line">                <span class="comment">#             client_ip=ip,</span></span><br><span class="line">                <span class="comment">#             username=username,</span></span><br><span class="line">                <span class="comment">#             comment='密码修改成功'</span></span><br><span class="line">                <span class="comment">#         )</span></span><br><span class="line">                <span class="comment">#         return render(request, 'pwd-modify-success.html', &#123;</span></span><br><span class="line">                <span class="comment">#             'pwd_modify_form':pwd_modify_form,</span></span><br><span class="line">                <span class="comment">#             'ip': ip,</span></span><br><span class="line">                <span class="comment">#             'time': time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()),</span></span><br><span class="line">                <span class="comment">#             "msg": "成功",</span></span><br><span class="line">                <span class="comment">#             'current_year': current_year</span></span><br><span class="line">                <span class="comment">#         &#125;)</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"pwd-modify.html"</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                <span class="string">'pwd_modify_form'</span>:pwd_modify_form</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdResetView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        username = request.GET.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">if</span> username:</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status = <span class="literal">False</span>,</span><br><span class="line">                        user_type = <span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                        client_ip = ip,</span><br><span class="line">                        username = username,</span><br><span class="line">                        comment = <span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"pwd-reset.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'username'</span>:username,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> user_profile.rescue_email:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'pwd-reset2.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'pwd-reset3.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset.html"</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        pwd_reset_form = PwdResetForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> pwd_reset_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">            reset_code = request.POST.get(<span class="string">"reset_code"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new1 = request.POST.get(<span class="string">"pwd_new1"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd_new2 = request.POST.get(<span class="string">"pwd_new2"</span>, <span class="string">""</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">if</span> pwd_new1 != pwd_new2:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'2次密码输入不一致!'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request,<span class="string">'pwd-reset3.html'</span>,&#123;</span><br><span class="line">                    <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                    <span class="string">"msg"</span>: <span class="string">"2次密码输入不一致!"</span>,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    <span class="string">'pwd_reset_form'</span>: pwd_reset_form,</span><br><span class="line">                    <span class="string">'user_profile'</span>:user_profile</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                email_verify_record = EmailVerifyRecord.objects.get(code=reset_code,email=email, send_type=<span class="string">'user_reset_pwd_code'</span>,user=user_profile, is_used=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'重置码有误或已使用过!'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>, &#123;</span><br><span class="line">                    <span class="string">'pwd_reset_code_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                    <span class="string">"msg"</span>: <span class="string">"重置码有误或已使用过!"</span>,</span><br><span class="line">                    <span class="string">'pwd_reset_form'</span>:pwd_reset_form,</span><br><span class="line">                    <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">if</span> email_verify_record:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    nt = NTUser(username=username)</span><br><span class="line">                    nt.reset(pwd_new1)</span><br><span class="line">                    data = &#123;</span><br><span class="line">                        <span class="string">'username'</span>: username,</span><br><span class="line">                        <span class="string">'email'</span>: <span class="string">'&#123;0&#125;@genewiz.com.cn'</span>.format(username),</span><br><span class="line">                        <span class="string">'ip'</span>: ip,</span><br><span class="line">                        <span class="string">'pwd_new1'</span>: pwd_new1,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_reset_pwd'</span>):</span><br><span class="line">                        email_verify_record.is_used = <span class="literal">True</span></span><br><span class="line">                        email_verify_record.save()</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">True</span>,</span><br><span class="line">                            user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'密码重置成功'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">'pwd-reset-success.html'</span>, &#123;</span><br><span class="line">                            <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                            <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                            <span class="string">'pwd_reset_form'</span>: pwd_reset_form,</span><br><span class="line">                            <span class="string">'ip'</span>: ip,</span><br><span class="line">                            <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                            <span class="string">"msg"</span>: <span class="string">"成功"</span>,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                <span class="comment"># cmd = 'Set-ADAccountPassword -identity "&#123;0&#125;" -Reset -NewPassword (ConvertTo-SecureString -AsPlainText "&#123;1&#125;" -Force)'.format(username, pwd_new1)</span></span><br><span class="line">                <span class="comment"># x = PxPowerShell()</span></span><br><span class="line">                <span class="comment"># x.start_process()</span></span><br><span class="line">                <span class="comment"># result = x.run(cmd)</span></span><br><span class="line">                <span class="comment"># x.stop_process()</span></span><br><span class="line">                <span class="comment"># p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)</span></span><br><span class="line">                <span class="comment"># stdout, stderr = p.communicate()</span></span><br><span class="line">                <span class="keyword">except</span> pythoncom.com_error, (hr, msg, exc, arg):</span><br><span class="line">                    stderr = exc[<span class="number">2</span>]</span><br><span class="line">                    <span class="comment"># 释放资源</span></span><br><span class="line">                    pythoncom.CoUninitialize()</span><br><span class="line">                    <span class="keyword">if</span> stderr:</span><br><span class="line">                        <span class="keyword">if</span> <span class="string">'meet'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=<span class="string">'新密码不满足|复杂性|历史性|要求!'</span></span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>,&#123;</span><br><span class="line">                                <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">"msg"</span>: <span class="string">"新密码不满足|复杂性|历史性|要求!"</span>,</span><br><span class="line">                                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                                <span class="string">'pwd_reset_form'</span>:pwd_reset_form</span><br><span class="line">                            &#125;)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            UserActionLog.objects.create(</span><br><span class="line">                                status=<span class="literal">False</span>,</span><br><span class="line">                                user_type=<span class="string">'user_reset_pwd'</span>,</span><br><span class="line">                                client_ip=ip,</span><br><span class="line">                                username=username,</span><br><span class="line">                                comment=stderr[:<span class="number">100</span>]</span><br><span class="line">                            )</span><br><span class="line">                            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>,&#123;</span><br><span class="line">                                <span class="string">'pwd_new_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                                <span class="string">"msg"</span>: <span class="string">"发生未知错误，请联系管理员!"</span>,</span><br><span class="line">                                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                                <span class="string">'pwd_reset_form'</span>:pwd_reset_form</span><br><span class="line">                            &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            username = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"pwd-reset3.html"</span>, &#123;</span><br><span class="line">                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                <span class="string">'pwd_reset_form'</span>: pwd_reset_form,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="密码重置码"><a href="#密码重置码" class="headerlink" title="密码重置码"></a>密码重置码</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdResetCodeView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        username = request.GET.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">        user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">        email = user_profile.rescue_email</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: username,</span><br><span class="line">            <span class="string">'email'</span>: email,</span><br><span class="line">            <span class="string">'ip'</span>: ip,</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_reset_pwd_code'</span>):</span><br><span class="line">            UserActionLog.objects.create(</span><br><span class="line">                status=<span class="literal">True</span>,</span><br><span class="line">                user_type = <span class="string">'user_reset_pwd_code'</span>,</span><br><span class="line">                client_ip=ip,</span><br><span class="line">                username=username,</span><br><span class="line">                comment=<span class="string">'发送密码重置码'</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(&#123;<span class="string">'status'</span>:<span class="string">'success'</span>, <span class="string">'msg'</span>:<span class="string">'重置码发送成功，请查收!'</span>&#125;), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><h5 id="邮箱绑定"><a href="#邮箱绑定" class="headerlink" title="邮箱绑定"></a>邮箱绑定</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailBindView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'email-bind-index.html'</span>, &#123;</span><br><span class="line">            <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">            <span class="string">'image_url'</span>: image_url,</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        email_bind_form = EmailBindForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> email_bind_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">            pwd = request.POST.get(<span class="string">'pwd'</span>, <span class="string">''</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status = <span class="literal">False</span>,</span><br><span class="line">                        user_type = <span class="string">'user_bind_email'</span>,</span><br><span class="line">                        client_ip = ip,</span><br><span class="line">                        username = username,</span><br><span class="line">                        comment = <span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"email-bind-index.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'email_bind_form'</span>: email_bind_form,</span><br><span class="line">                        <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                        <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                user = authenticate(username=username, password=pwd)</span><br><span class="line">                <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    <span class="keyword">if</span> user_profile.rescue_email:</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">False</span>,</span><br><span class="line">                            user_type=<span class="string">'user_bind_email'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'外部邮箱已绑定，请不要重复绑定!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">'email-bind-fail.html'</span>, &#123;</span><br><span class="line">                            <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                            <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                            <span class="string">'current_year'</span>: current_year</span><br><span class="line">                        &#125;)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        user_profile.rescue_email = email</span><br><span class="line">                        user_profile.save()</span><br><span class="line">                        UserActionLog.objects.create(</span><br><span class="line">                            status=<span class="literal">True</span>,</span><br><span class="line">                            user_type=<span class="string">'user_bind_email'</span>,</span><br><span class="line">                            client_ip=ip,</span><br><span class="line">                            username=username,</span><br><span class="line">                            comment=<span class="string">'外部邮箱绑定成功!'</span></span><br><span class="line">                        )</span><br><span class="line">                        <span class="keyword">return</span> render(request, <span class="string">'email-bind-success.html'</span>, &#123;</span><br><span class="line">                            <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                            <span class="string">'email_bind_form'</span>: email_bind_form,</span><br><span class="line">                            <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                            <span class="string">'ip'</span>: ip</span><br><span class="line">                        &#125;)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'email-bind-index.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'pwd_errors'</span>:<span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'密码错误！'</span>,</span><br><span class="line">                        <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                        <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                        <span class="string">'email_bind_form'</span>: email_bind_form,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-bind-index.html'</span>, &#123;</span><br><span class="line">                <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                <span class="string">'email_bind_form'</span>:email_bind_form,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="邮箱修改"><a href="#邮箱修改" class="headerlink" title="邮箱修改"></a>邮箱修改</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailModifyView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        username = request.GET.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="keyword">if</span> username:</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">False</span>,</span><br><span class="line">                        user_type = <span class="string">'user_modify_email'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"email-modify-index.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'username'</span>: username,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                <span class="keyword">if</span> user_profile.rescue_email:</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'email-modify-submit.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'success'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    &#125;)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span>  render(request, <span class="string">'email-modify-fail.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-modify-index.html'</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        email_modify_form = EmailModifyForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> email_modify_form.is_valid():</span><br><span class="line">            username = request.POST.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            email_new = request.POST.get(<span class="string">'email_new'</span>, <span class="string">''</span>)</span><br><span class="line">            reset_code = request.POST.get(<span class="string">"reset_code"</span>, <span class="string">""</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                email_verify_record = EmailVerifyRecord.objects.get(code=reset_code,email=email, send_type=<span class="string">'user_reset_email_code'</span>,user=user_profile, is_used=<span class="literal">False</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_modify_email'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'重置码有误或已使用过!'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"email-modify-submit.html"</span>, &#123;</span><br><span class="line">                <span class="string">'email_reset_code_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                <span class="string">"msg"</span>: <span class="string">"重置码有误或已使用过!"</span>,</span><br><span class="line">                <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                <span class="string">'email_modify_form'</span>:email_modify_form,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year</span><br><span class="line">            &#125;)</span><br><span class="line">            user_profile.rescue_email = email_new</span><br><span class="line">            user_profile.save()</span><br><span class="line">            email_verify_record.is_used = <span class="literal">True</span></span><br><span class="line">            email_verify_record.save()</span><br><span class="line">            UserActionLog.objects.create(</span><br><span class="line">                status=<span class="literal">True</span>,</span><br><span class="line">                user_type=<span class="string">'user_modify_email'</span>,</span><br><span class="line">                client_ip=ip,</span><br><span class="line">                username=username,</span><br><span class="line">                comment=<span class="string">'邮箱修改成功-'</span> + email_new</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-modify-success.html'</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                <span class="string">'email_modify_form'</span>:email_modify_form,</span><br><span class="line">                <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                <span class="string">'ip'</span>: ip</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            username = request.POST.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">            user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'email-modify-submit.html'</span>,&#123;</span><br><span class="line">                <span class="string">'email_modify_form'</span>:email_modify_form,</span><br><span class="line">                <span class="string">'user_profile'</span>:user_profile,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="用户解锁"><a href="#用户解锁" class="headerlink" title="用户解锁"></a>用户解锁</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserUnlockView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self,request)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        username = request.GET.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> username:</span><br><span class="line">            cmd = <span class="string">'powershell -command Get-ADUser -Identity &#123;0&#125;'</span>.format(username)</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'find'</span> <span class="keyword">in</span> stderr:</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">False</span>,</span><br><span class="line">                        user_type=<span class="string">'user_unlock'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'帐号不存在,请重新输入!'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">"user-unlock-index.html"</span>, &#123;</span><br><span class="line">                        <span class="string">'username_errors'</span>: <span class="literal">True</span>,</span><br><span class="line">                        <span class="string">'msg'</span>: <span class="string">'帐号不存在,请重新输入!'</span>,</span><br><span class="line">                        <span class="string">'username'</span>: username,</span><br><span class="line">                        <span class="string">'current_year'</span>: current_year</span><br><span class="line">                    &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># try:</span></span><br><span class="line">                <span class="comment">#     user_profile = UserProfile.objects.get(username=username)</span></span><br><span class="line">                <span class="comment"># except Exception as e:</span></span><br><span class="line">                <span class="comment">#     print e</span></span><br><span class="line">                <span class="comment">#     user_profile = UserProfile()</span></span><br><span class="line">                user_profile, created = UserProfile.objects.get_or_create(username=username)</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'user-unlock-submit.html'</span>, &#123;</span><br><span class="line">                    <span class="string">'user_profile'</span>: user_profile,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year,</span><br><span class="line">                    <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                    <span class="string">'image_url'</span>: image_url</span><br><span class="line">                &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"user-unlock-index.html"</span>, &#123;</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip =  request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        hashkey = CaptchaStore.generate_key()</span><br><span class="line">        image_url = captcha_image_url(hashkey)</span><br><span class="line">        user_unlock_form = UserUnlockForm(request.POST)</span><br><span class="line">        username = request.POST.get(<span class="string">"username"</span>, <span class="string">''</span>)</span><br><span class="line">        user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">        <span class="keyword">if</span> user_unlock_form.is_valid():</span><br><span class="line">            cmd = <span class="string">'powershell -Command Unlock-ADAccount -Identity %s'</span> % username</span><br><span class="line">            p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=<span class="literal">True</span>)</span><br><span class="line">            stdout, stderr = p.communicate()</span><br><span class="line">            <span class="keyword">if</span> stderr:</span><br><span class="line">                UserActionLog.objects.create(</span><br><span class="line">                    status=<span class="literal">False</span>,</span><br><span class="line">                    user_type=<span class="string">'user_unlock'</span>,</span><br><span class="line">                    client_ip=ip,</span><br><span class="line">                    username=username,</span><br><span class="line">                    comment=<span class="string">'帐号解锁失败'</span></span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'user-unlock-success.html'</span>, &#123;</span><br><span class="line">                    <span class="string">'msg'</span>:<span class="string">'解锁失败'</span>,</span><br><span class="line">                    <span class="string">'username'</span>:username,</span><br><span class="line">                    <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                    <span class="string">'ip'</span>:ip</span><br><span class="line">                &#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">'username'</span>: username,</span><br><span class="line">                    <span class="string">'email'</span>: <span class="string">'&#123;0&#125;@genewiz.com.cn'</span>.format(username),</span><br><span class="line">                    <span class="string">'ip'</span>: ip,</span><br><span class="line">                    <span class="string">'current_year'</span>: current_year</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_unlock'</span>):</span><br><span class="line">                    UserActionLog.objects.create(</span><br><span class="line">                        status=<span class="literal">True</span>,</span><br><span class="line">                        user_type=<span class="string">'user_unlock'</span>,</span><br><span class="line">                        client_ip=ip,</span><br><span class="line">                        username=username,</span><br><span class="line">                        comment=<span class="string">'帐号解锁成功'</span></span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">return</span> render(request, <span class="string">'user-unlock-success.html'</span>, &#123;</span><br><span class="line">                        <span class="string">'msg'</span>:<span class="string">'解锁成功'</span>,</span><br><span class="line">                        <span class="string">'username'</span>:username,</span><br><span class="line">                        <span class="string">'time'</span>: time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime()),</span><br><span class="line">                        <span class="string">'ip'</span>:ip</span><br><span class="line">                    &#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'user-unlock-submit.html'</span>, &#123;</span><br><span class="line">                <span class="string">'user_unlock_form'</span>: user_unlock_form,</span><br><span class="line">                <span class="string">'user_profile'</span>:user_profile,</span><br><span class="line">                <span class="string">'hashkey'</span>: hashkey,</span><br><span class="line">                <span class="string">'image_url'</span>: image_url,</span><br><span class="line">                <span class="string">'current_year'</span>: current_year,</span><br><span class="line"></span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure><h5 id="邮箱重置码"><a href="#邮箱重置码" class="headerlink" title="邮箱重置码"></a>邮箱重置码</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailResetCodeView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        username = request.GET.get(<span class="string">'username'</span>, <span class="string">''</span>)</span><br><span class="line">        user_profile = UserProfile.objects.get(username=username)</span><br><span class="line">        email = user_profile.rescue_email</span><br><span class="line">        <span class="keyword">if</span> request.META.has_key(<span class="string">'HTTP_X_FORWARDED_FOR'</span>):</span><br><span class="line">            ip = request.META[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ip = request.META[<span class="string">'REMOTE_ADDR'</span>]</span><br><span class="line">        current_year = datetime.now().year</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: username,</span><br><span class="line">            <span class="string">'email'</span>: email,</span><br><span class="line">            <span class="string">'ip'</span>: ip,</span><br><span class="line">            <span class="string">'current_year'</span>: current_year</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> SendMail(data, send_type=<span class="string">'user_reset_email_code'</span>):</span><br><span class="line">            UserActionLog.objects.create(</span><br><span class="line">                status=<span class="literal">True</span>,</span><br><span class="line">                user_type=<span class="string">'user_reset_email_code'</span>,</span><br><span class="line">                client_ip=ip,</span><br><span class="line">                username=username,</span><br><span class="line">                comment=<span class="string">'发送邮箱验证码成功-'</span> + email</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(&#123;<span class="string">'status'</span>:<span class="string">'success'</span>, <span class="string">'msg'</span>:<span class="string">'邮箱重置码发送成功，请查收!'</span>&#125;), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;密码修改-重置核心类&quot;&gt;&lt;a href=&quot;#密码修改-重置核心类&quot; class=&quot;headerlink&quot; title=&quot;密码修改|重置核心类&quot;&gt;&lt;/a&gt;密码修改|重置核心类&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding:utf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pythoncom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; win32com.client&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NTUser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Uses ADSI to change password under user privileges&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, username)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pythoncom.CoInitialize()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.adsiNS = win32com.client.Dispatch(&lt;span class=&quot;string&quot;&gt;&#39;ADsNameSpaces&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Userpath = &lt;span class=&quot;string&quot;&gt;&quot;WinNT://10.105.42.13/&quot;&lt;/span&gt; + username + &lt;span class=&quot;string&quot;&gt;&quot;,user&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.adsNTUser = self.adsiNS.GetObject(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, Userpath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, old_password, new_password)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.adsNTUser.ChangePassword(old_password, new_password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 释放资源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pythoncom.CoUninitialize()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, new_password)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.adsNTUser.SetPassword(new_password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 释放资源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pythoncom.CoUninitialize()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>域账号密码自助-相关表结构设计</title>
    <link href="http://blog.laohulab.com/uncategorized/3852621189.html"/>
    <id>http://blog.laohulab.com/uncategorized/3852621189.html</id>
    <published>2019-04-28T02:56:00.000Z</published>
    <updated>2019-05-01T06:38:43.314Z</updated>
    
    <content type="html"><![CDATA[<h6 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserProfile</span><span class="params">(AbstractUser)</span>:</span></span><br><span class="line">    company = (</span><br><span class="line">        (<span class="string">'suzhou'</span>, <span class="string">u'苏州'</span>),</span><br><span class="line">        (<span class="string">'beijing'</span>, <span class="string">u'北京'</span>),</span><br><span class="line">        (<span class="string">'tianjing'</span>, <span class="string">u"天津"</span>),</span><br><span class="line">        (<span class="string">'guangzhou'</span>, <span class="string">u'广州'</span>),</span><br><span class="line">        (<span class="string">'nanjing'</span>, <span class="string">u"南京"</span>),</span><br><span class="line">        (<span class="string">'usa'</span>, <span class="string">u"美国"</span>),</span><br><span class="line">        (<span class="string">'lizhi'</span>, <span class="string">u"离职"</span>)</span><br><span class="line">    )</span><br><span class="line">    uid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'用户UID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'用户SID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    dn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'DN名称'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>,)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"邮箱"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    rescue_email = models.EmailField(max_length=<span class="number">50</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u"救援邮箱"</span>)</span><br><span class="line">    is_enabled = models.BooleanField(default=<span class="literal">True</span>, verbose_name=<span class="string">u'帐号启用'</span>)</span><br><span class="line">    is_lockedout = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u'帐号锁定'</span>)</span><br><span class="line">    is_dial_in = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u'VPN权限'</span>)</span><br><span class="line">    gender = models.CharField(max_length=<span class="number">10</span>, choices=((<span class="string">"male"</span>, <span class="string">"男"</span>), (<span class="string">"female"</span>, <span class="string">"女"</span>)), default=<span class="string">"male"</span>, verbose_name=<span class="string">u'性别'</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'联系方式'</span>)</span><br><span class="line">    department = models.CharField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'部门'</span>)</span><br><span class="line">    company = models.CharField(choices=company, max_length=<span class="number">50</span>, null=<span class="literal">True</span>,blank=<span class="literal">True</span>, help_text=<span class="string">u'所属公司'</span>, verbose_name=<span class="string">u'所属公司'</span>)</span><br><span class="line">    birday = models.DateField(null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u"生日"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"image/%Y/%m/%m"</span>, blank=<span class="literal">True</span>, default=<span class="string">u"image/default.png"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    check = models.URLField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'在线检查'</span>)</span><br><span class="line">    quit_time = models.DateField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">u'离职时间'</span>)</span><br><span class="line">    created_time = models.CharField(max_length=<span class="number">100</span>,verbose_name=<span class="string">u"创建时间"</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>,)</span><br><span class="line">    pwd_last_set_time = models.CharField(max_length=<span class="number">100</span>,verbose_name=<span class="string">u"密码最后一次设置时间"</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>,)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_groups</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.usergroup_set.all()</span><br><span class="line">    list_groups.short_description = <span class="string">u'属组信息'</span></span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure><a id="more"></a><h6 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserGroup</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'组名'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    uid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'组UID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sid = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'组SID'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gc = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'GC'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gs = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'GS'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    dn = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u'DN'</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    members = models.ManyToManyField(UserProfile)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户组信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.dn</span><br></pre></td></tr></table></figure><h6 id="邮箱验证码"><a href="#邮箱验证码" class="headerlink" title="邮箱验证码"></a>邮箱验证码</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecord</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    action_type = (</span><br><span class="line">        (<span class="string">"user_reset_pwd_code"</span>, <span class="string">u"重置密码"</span>),</span><br><span class="line">        (<span class="string">"email_modify"</span>, <span class="string">u"修改邮箱"</span>),</span><br><span class="line">        (<span class="string">'user_reset_email_code'</span>, <span class="string">u'重置邮箱'</span>)</span><br><span class="line">    )</span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>, default=<span class="string">''</span>)</span><br><span class="line">    code = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"验证码"</span>)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"邮箱"</span>)</span><br><span class="line">    is_used= models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否使用"</span>)</span><br><span class="line">    send_type = models.CharField(choices=action_type, max_length=<span class="number">100</span>, verbose_name=<span class="string">u"验证码类型"</span>)</span><br><span class="line">    send_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"发送时间"</span>)</span><br><span class="line">    <span class="comment"># datetime.now() model编译时间生成默认时间</span></span><br><span class="line">    <span class="comment"># datetime.now classs实例化时生成的时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"邮箱验证码"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;0&#125;(&#123;1&#125;)'</span>.format(self.code, self.email)</span><br></pre></td></tr></table></figure><h5 id="用户日志"><a href="#用户日志" class="headerlink" title="用户日志"></a>用户日志</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserActionLog</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user_type = (</span><br><span class="line">        (<span class="string">"user_modify_pwd"</span>, <span class="string">u"修改密码"</span>),</span><br><span class="line">        (<span class="string">"user_reset_pwd"</span>, <span class="string">u"重置密码"</span>),</span><br><span class="line">        (<span class="string">"user_unlock"</span>, <span class="string">u"账号解锁"</span>),</span><br><span class="line">        (<span class="string">"user_bind_email"</span>, <span class="string">u"绑定外部邮箱"</span>),</span><br><span class="line">        (<span class="string">"user_modify_email"</span>, <span class="string">u"修改外部邮箱"</span>),</span><br><span class="line">        (<span class="string">'user_reset_pwd_code'</span>, <span class="string">u'密码重置码'</span>),</span><br><span class="line">        (<span class="string">'user_reset_email_code'</span>, <span class="string">u'邮箱重置码'</span>)</span><br><span class="line">    )</span><br><span class="line">    status = models.BooleanField(verbose_name=<span class="string">u'状态'</span>, default=<span class="literal">True</span>)</span><br><span class="line">    user_type = models.CharField(verbose_name=<span class="string">u'类型'</span>, max_length=<span class="number">100</span>, choices=user_type)</span><br><span class="line">    client_ip = models.CharField(verbose_name=<span class="string">'客户端IP'</span>,max_length=<span class="number">128</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    username = models.CharField(verbose_name=<span class="string">'用户'</span>,max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    comment = models.CharField(verbose_name=<span class="string">'备注'</span>,max_length=<span class="number">1000</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    add_time = models.DateTimeField(verbose_name=<span class="string">u"添加时间"</span>, default=datetime.now)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户操作日志"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdModifySuccess</span><span class="params">(UserActionLog)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"密码修改成功"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdResetSuccess</span><span class="params">(UserActionLog)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"密码重置成功"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserUnlockSuccess</span><span class="params">(UserActionLog)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"账号解锁成功"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdmActionLog</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    adm_type = (</span><br><span class="line">        (<span class="string">"adm_update"</span>, <span class="string">u"更新信息"</span>),</span><br><span class="line">        (<span class="string">"adm_disable"</span>, <span class="string">u"禁用帐号"</span>),</span><br><span class="line">        (<span class="string">"adm_disable_lizhi"</span>, <span class="string">u"禁用帐号[离职]"</span>),</span><br><span class="line">        (<span class="string">"adm_enable"</span>, <span class="string">u"启用帐号"</span>),</span><br><span class="line">        (<span class="string">"adm_unlock"</span>, <span class="string">u"解锁帐号"</span>),</span><br><span class="line">        (<span class="string">"adm_reset_pwd"</span>, <span class="string">u"重置密码"</span>),</span><br><span class="line">        (<span class="string">"adm_enable_vpn"</span>, <span class="string">u"启用VPN"</span>),</span><br><span class="line">        (<span class="string">"adm_disable_vpn"</span>, <span class="string">u"禁用VPN"</span>)</span><br><span class="line">    )</span><br><span class="line">    status = models.BooleanField(verbose_name=<span class="string">u'状态'</span>, default=<span class="literal">True</span>)</span><br><span class="line">    adm_type= models.CharField(verbose_name=<span class="string">u'类型'</span>, max_length=<span class="number">100</span>, choices=adm_type)</span><br><span class="line">    client_ip = models.CharField(verbose_name=<span class="string">'客户端IP'</span>, max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    username = models.CharField(verbose_name=<span class="string">'用户'</span>,max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    comment = models.CharField(verbose_name=<span class="string">'备注'</span>,max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    sa = models.CharField(verbose_name=<span class="string">'操作用户'</span>, max_length=<span class="number">128</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"管理员操作日志"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;用户表&quot;&gt;&lt;a href=&quot;#用户表&quot; class=&quot;headerlink&quot; title=&quot;用户表&quot;&gt;&lt;/a&gt;用户表&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# coding:utf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; datetime &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.contrib.auth.models &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; AbstractUser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Create your models here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UserProfile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AbstractUser)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    company = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;suzhou&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&#39;苏州&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;beijing&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&#39;北京&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;tianjing&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&quot;天津&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;guangzhou&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&#39;广州&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;nanjing&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&quot;南京&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;usa&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&quot;美国&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;lizhi&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;u&quot;离职&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uid = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;用户UID&#39;&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sid = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;用户SID&#39;&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dn = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;DN名称&#39;&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    email = models.EmailField(max_length=&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&quot;邮箱&quot;&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rescue_email = models.EmailField(max_length=&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&quot;救援邮箱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    is_enabled = models.BooleanField(default=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;帐号启用&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    is_lockedout = models.BooleanField(default=&lt;span class=&quot;literal&quot;&gt;False&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;帐号锁定&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    is_dial_in = models.BooleanField(default=&lt;span class=&quot;literal&quot;&gt;False&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;VPN权限&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gender = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, choices=((&lt;span class=&quot;string&quot;&gt;&quot;male&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;男&quot;&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&quot;female&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;女&quot;&lt;/span&gt;)), default=&lt;span class=&quot;string&quot;&gt;&quot;male&quot;&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;性别&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mobile = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;联系方式&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    department = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;部门&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    company = models.CharField(choices=company, max_length=&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;,blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, help_text=&lt;span class=&quot;string&quot;&gt;u&#39;所属公司&#39;&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;所属公司&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    birday = models.DateField(null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&quot;生日&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image = models.ImageField(upload_to=&lt;span class=&quot;string&quot;&gt;&quot;image/%Y/%m/%m&quot;&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, default=&lt;span class=&quot;string&quot;&gt;u&quot;image/default.png&quot;&lt;/span&gt;, max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check = models.URLField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;在线检查&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quit_time = models.DateField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;u&#39;离职时间&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    created_time = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,verbose_name=&lt;span class=&quot;string&quot;&gt;u&quot;创建时间&quot;&lt;/span&gt;,null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pwd_last_set_time = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,verbose_name=&lt;span class=&quot;string&quot;&gt;u&quot;密码最后一次设置时间&quot;&lt;/span&gt;,null=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, blank=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add_time = models.DateTimeField(default=datetime.now, verbose_name=&lt;span class=&quot;string&quot;&gt;u&quot;添加时间&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;list_groups&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.usergroup_set.all()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    list_groups.short_description = &lt;span class=&quot;string&quot;&gt;u&#39;属组信息&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Meta&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verbose_name = &lt;span class=&quot;string&quot;&gt;&quot;用户信息&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        verbose_name_plural = verbose_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__unicode__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.username&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端相关</title>
    <link href="http://blog.laohulab.com/uncategorized/1656965246.html"/>
    <id>http://blog.laohulab.com/uncategorized/1656965246.html</id>
    <published>2018-07-31T05:42:14.000Z</published>
    <updated>2019-04-28T03:16:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>响应式布局<br>meta:vp</p><p>IE:<br>meta:compat</p><p>col-xs-<em><br>col-sm-</em><br>col-md-<em><br>col-lg-</em></p><p> col-<em>-push-</em><br>  col-<em>-pull-</em></p><p>  <div class="clearfix"></div> 清除浮动<br>  col-<em>-offset-</em><br>  hidden-xs<br>  visible-xs</p><p>  导航栏目<br>  navbar-fixed-bottom<br>  navbar-fixed-top<br>  navbar-static-top</p><p><span class="exturl" data-url="aHR0cHM6Ly9wbGFjZWhvbGRlci5jb20v" title="https://placeholder.com/">https://placeholder.com/<i class="fa fa-external-link"></i></span><br>google-code-prettify</p><p>cdn加速<br>cdn.code.baidu.com</p><p><span class="exturl" data-url="aHR0cDovL3BsdWdpbnMuanF1ZXJ5LmNvbS9zaW5nbGVwYWdlbmF2Lw==" title="http://plugins.jquery.com/singlepagenav/">http://plugins.jquery.com/singlepagenav/<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9kYW5lZGVuLmdpdGh1Yi5pby9hbmltYXRlLmNzcy8=" title="https://daneden.github.io/animate.css/">https://daneden.github.io/animate.css/<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTExMjcwMTkvYXJ0aWNsZS9kZXRhaWxzLzc3MTY1MDYy" title="https://blog.csdn.net/u011127019/article/details/77165062">https://blog.csdn.net/u011127019/article/details/77165062<i class="fa fa-external-link"></i></span></p><p>chartjs.org</p><p>bootstrap模版<br><span class="exturl" data-url="aHR0cHM6Ly9ib290c3dhdGNoLmNvbQ==" title="https://bootswatch.com">https://bootswatch.com<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9pY29tb29uLmlvLw==" title="https://icomoon.io/">https://icomoon.io/<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;响应式布局&lt;br&gt;meta:vp&lt;/p&gt;
&lt;p&gt;IE:&lt;br&gt;meta:compat&lt;/p&gt;
&lt;p&gt;col-xs-&lt;em&gt;&lt;br&gt;col-sm-&lt;/em&gt;&lt;br&gt;col-md-&lt;em&gt;&lt;br&gt;col-lg-&lt;/em&gt;&lt;/p&gt;
&lt;p&gt; col-&lt;em&gt;-push-&lt;/em&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Django项目实战</title>
    <link href="http://blog.laohulab.com/Django/3085239228.html"/>
    <id>http://blog.laohulab.com/Django/3085239228.html</id>
    <published>2018-07-02T03:50:00.000Z</published>
    <updated>2019-05-01T06:46:36.228Z</updated>
    
    <content type="html"><![CDATA[<p>Django app</p><ul><li>users-用户管理</li><li>course-课程管理</li><li>organization-机构和教师管理</li><li>operation-用户操作管理</li></ul><a id="more"></a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Users\jianhu.yong&gt;mkvirtualenv mxonline</span><br><span class="line">New python executable <span class="keyword">in</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe</span><br><span class="line">Installing setuptools, pip, wheel...done.</span><br><span class="line"></span><br><span class="line">(mxonline) C:\Users\jianhu.yong&gt;</span><br><span class="line">(mxonline) C:\Users\jianhu.yong&gt;pip install django==<span class="number">1.9</span></span><br><span class="line">Collecting django==<span class="number">1.9</span></span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/ea/<span class="number">9</span>b/b5a6360b3dfcd88d4bad70f59da26cbde4bdec395a31bb26dc840e806a50/Django<span class="number">-1.9</span>-py2.py3-none-any.whl (<span class="number">6.6</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">6.6</span>MB <span class="number">79</span>kB/s</span><br><span class="line">Installing collected packages: django</span><br><span class="line">Successfully installed django<span class="number">-1.9</span></span><br><span class="line"></span><br><span class="line">(mxonline) C:\Users\jianhu.yong&gt;cd Downloads</span><br><span class="line">(mxonline) C:\Users\jianhu.yong\Downloads&gt;pip install MySQL_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Processing c:\users\jianhu.yong\downloads\mysql_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Installing collected packages: MySQL-python</span><br><span class="line">Successfully installed MySQL-python<span class="number">-1.2</span><span class="number">.5</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-116.png" alt="upload successful"><br><img src="/images/pasted-117.png" alt="upload successful"><br><img src="/images/pasted-118.png" alt="upload successful"></p><p>数据库配置<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'mxonline'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'127.0.0.1'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>新建数据库</p><p><img src="/images/pasted-119.png" alt="upload successful"></p><p>生成默认数据表<br><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">makemigrations</span></span><br><span class="line"><span class="attribute">migtate</span></span><br></pre></td></tr></table></figure></p><p>userapp model设计<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; startapp users</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp users C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\tests.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\migrations\__init__.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-120.png" alt="upload successful"><br>默认的user表不满足我们的需求，因此需要定制user表<br>自定义userprofile覆盖默认user表</p><figure class="highlight python"><figcaption><span>users.model</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserProfile</span><span class="params">(AbstractUser)</span>:</span></span><br><span class="line">    nick_name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u'昵称'</span>, default=<span class="string">""</span>)</span><br><span class="line">    birday = models.DateField(verbose_name=<span class="string">u"生日"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gender = models.CharField(max_length=<span class="number">5</span>, choices=((<span class="string">"male"</span>, <span class="string">u"男"</span>),(<span class="string">"female"</span>, <span class="string">u"女"</span>)), default=<span class="string">"female"</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, default=<span class="string">u""</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"image/%Y/%m/%m"</span>,default=<span class="string">u"image/default.png"</span>, max_length=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'users'</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">AUTH_USER_MODEL = <span class="string">"users.UserProfile"</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-121.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(mxonline) C:\Users\jianhu.yong\Downloads&gt;pip install pillow</span><br><span class="line">Collecting pillow</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">48</span>/<span class="number">91</span>/f058672c494e186dc900bb6253e8cbde3307da17aed0a2d1ebcfb80ab766/Pillow<span class="number">-5.2</span><span class="number">.0</span>-cp27-cp27m-win_amd64.whl (<span class="number">1.5</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">1.5</span>MB <span class="number">2.4</span>MB/s</span><br><span class="line">Installing collected packages: pillow</span><br><span class="line">Successfully installed pillow<span class="number">-5.2</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-122.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations users</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations users C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'users'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model UserProfile</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; migrate users</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate users C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: users</span><br><span class="line">Running migrations:</span><br><span class="line">  Rendering model states... DONE</span><br><span class="line">  Applying users<span class="number">.0001</span>_initial... OK</span><br><span class="line">The following content types are stale <span class="keyword">and</span> need to be deleted:</span><br><span class="line"></span><br><span class="line">    auth | user</span><br><span class="line"></span><br><span class="line">Any objects related to these content types by a foreign key will also</span><br><span class="line">be deleted. Are you sure you want to delete these content types?</span><br><span class="line">If yo<span class="string">u're unsure, answer '</span>no<span class="string">'.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type '</span>yes<span class="string">' to continue, or '</span>no<span class="string">' to cancel:  yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Process finished with exit code 0</span></span><br></pre></td></tr></table></figure><p>app设计需要避免循环引用(a调用b，b调用a，最后ab都无法执行)<br><img src="/images/pasted-123.png" alt="upload successful"><br><img src="/images/pasted-124.png" alt="upload successful"></p><p>EmailVerifyRecord邮箱验证码设计<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecord</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    code = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"验证码"</span>)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"邮箱"</span>)</span><br><span class="line">    send_type = models.CharField(choices=((<span class="string">"register"</span>, <span class="string">u"注册"</span>),(<span class="string">"forget"</span>, <span class="string">u"找回密码"</span>)), max_length=<span class="number">10</span>)</span><br><span class="line">    send_time = models.DateTimeField(default=datetime.now)</span><br><span class="line">    <span class="comment"># datetime.now() model编译时间生成默认时间</span></span><br><span class="line">    <span class="comment"># datetime.now classs实例化时生成的时间</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"邮箱验证码"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">```        </span><br><span class="line">PageBanner轮播图</span><br><span class="line">``` python</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Banner</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    title =  models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"标题"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"banner/%Y/%m/"</span>, verbose_name=<span class="string">u"轮播图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    url = models.URLField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"访问地址"</span>)</span><br><span class="line">    index = models.IntegerField(default=<span class="number">100</span>,verbose_name=<span class="string">u"顺序"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"轮播图"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">```        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">courses models设计：</span><br><span class="line">新建app</span><br><span class="line"></span><br><span class="line">- courses课程基本信息</span><br><span class="line">- lesson 章节信息</span><br><span class="line">- video 视频信息</span><br><span class="line">- courseResouce 课程资源</span><br><span class="line"></span><br><span class="line">``` python models.py</span><br><span class="line"><span class="comment"># conding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程描述"</span>)</span><br><span class="line">    detail = models.TextField(verbose_name=<span class="string">u"课程详情"</span>)</span><br><span class="line">    <span class="comment"># TextField不限制max_length</span></span><br><span class="line">    defree = models.CharField(choices=((<span class="string">"cj"</span>, <span class="string">u"初级"</span>),(<span class="string">"zj"</span>, <span class="string">u"中级"</span>),(<span class="string">"bj"</span>, <span class="string">u"高级"</span>)), max_length=<span class="number">2</span>)</span><br><span class="line">    learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长（分钟数）"</span>)</span><br><span class="line">    students= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习人数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏人数"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"courses/%y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    click_nums = models.ImageField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lesson</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span> , verbose_name=<span class="string">u"章节名"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"章节"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Video</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    lesson = models.ForeignKey(Lesson, verbose_name=<span class="string">u"章节"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span> , verbose_name=<span class="string">u"视频名"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"视频"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseResource</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span> , verbose_name=<span class="string">u"名称"</span>)</span><br><span class="line">    download = models.FileField(upload_to=<span class="string">"course/resourse/%Y/%m"</span>, verbose_name=<span class="string">u"资源文件"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程资源"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; startapp organization</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp organization C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\tests.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\migrations\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\__init__.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>CourseOrg 课程机构基本信息</li><li>Teacher 教师基本信息</li><li>CityDict 城市信息</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CityDict</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"城市"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"描述"</span>)</span><br><span class="line">    add_time= models.DateTimeField(default=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"城市"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseOrg</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"机构名称"</span>)</span><br><span class="line">    desc = models.TextField(verbose_name=<span class="string">u"机构描述"</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏数"</span>)</span><br><span class="line">    image= models.ImageField(upload_to=<span class="string">"org/%Y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">150</span>, verbose_name=<span class="string">u"机构地址"</span>)</span><br><span class="line">    city = models.ForeignKey(CityDict, verbose_name=<span class="string">u"所在城市"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程机构"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    org =  models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"所属机构"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"教师名"</span>)</span><br><span class="line">    work_years= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"工作年限"</span>)</span><br><span class="line">    work_company = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"就职公司"</span>)</span><br><span class="line">    work_position = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"公司职位"</span>)</span><br><span class="line">    points = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"教学特点"</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    fav_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏数"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"教师"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">```        </span><br><span class="line"></span><br><span class="line">operation app设计</span><br><span class="line"></span><br><span class="line">- UserAsk 用户咨询</span><br><span class="line">- CourseComments 用户评论</span><br><span class="line">- UserFavorite 用户收藏</span><br><span class="line">- UserMessage 用户消息</span><br><span class="line">- UserCourse 用户学习的课程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">``` python</span><br><span class="line">manage.py@MxOnline &gt; startapp operation</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp operation C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\migrations\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\tests.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> users.models <span class="keyword">import</span> UserProfile</span><br><span class="line"><span class="keyword">from</span> courses.models <span class="keyword">import</span>  Course</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAsk</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"姓名"</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, verbose_name=<span class="string">u"手机"</span>)</span><br><span class="line">    course_name= models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    add_time= models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户咨询"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseComments</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">'''课程评论'''</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    comments = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"评论"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程评论"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFavorite</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    fav_id = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"数据ID"</span>)</span><br><span class="line">    fav_type= models.IntegerField(choices=((<span class="number">1</span>,<span class="string">"课程"</span>), (<span class="number">2</span>,<span class="string">"课程机构"</span>), (<span class="number">3</span>, <span class="string">"讲师"</span>)), default=<span class="number">1</span>, verbose_name=<span class="string">u"收藏类型"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户收藏"</span></span><br><span class="line">        verbose_name_plural =verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>   <span class="title">UserMessage</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"接收用户"</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>, verbose_name=<span class="string">u"消息内容"</span>)</span><br><span class="line">    has_read = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否已读"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户消息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserCourse</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p>添加至install apps settings.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'courses'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model Course</span><br><span class="line">    - Create model CourseResource</span><br><span class="line">    - Create model Lesson</span><br><span class="line">    - Create model Video</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'operation'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model CourseComments</span><br><span class="line">    - Create model UserAsk</span><br><span class="line">    - Create model UserCourse</span><br><span class="line">    - Create model UserFavorite</span><br><span class="line">    - Create model UserMessage</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'users'</span>:</span><br><span class="line">  <span class="number">0002</span>_banner_emailverifyrecord.py:</span><br><span class="line">    - Create model Banner</span><br><span class="line">    - Create model EmailVerifyRecord</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'organization'</span>:</span><br><span class="line">  <span class="number">0001</span>_initial.py:</span><br><span class="line">    - Create model CityDict</span><br><span class="line">    - Create model CourseOrg</span><br><span class="line">    - Create model Teacher</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\MxOnline\organization\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\users\migrations\<span class="number">0002</span>_banner_emailverifyrecord.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\operation\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\MxOnline\courses\migrations\<span class="number">0001</span>_initial.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p>新建apps包统一管理app</p><p><img src="/images/pasted-125.png" alt="upload successful"></p><p><img src="/images/pasted-126.png" alt="upload successful"></p><p><img src="/images/pasted-127.png" alt="upload successful"></p><p>默认打钩，会在导入模块内容之前加入apps.xxx</p><p><img src="/images/pasted-128.png" alt="upload successful"><br>通过设置解决import出错问题</p><p>但是python 运行会提示模块找不到错误</p><p>settings.py</p><p>后台管理系统</p><ul><li>权限管理</li><li>少前端样式</li><li>快速开发</li></ul><p><span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMTo4MDAwL2FkbWlu" title="http://127.0.0.1:8000/admin">http://127.0.0.1:8000/admin<i class="fa fa-external-link"></i></span></p><p>创建diango admin后台用户出错<br><img src="/images/pasted-129.png" alt="upload successful"><br><img src="/images/pasted-130.png" alt="upload successful"></p><p>重新修改下即可！</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; createsuperuser</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> createsuperuser C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Username:  admin</span><br><span class="line">Email address:  test@qq.com</span><br><span class="line">Warning: Password input may be echoed.</span><br><span class="line">Password:  admin123</span><br><span class="line">Warning: Password input may be echoed.</span><br><span class="line">Password (again):  admin123</span><br><span class="line">Superuser created successfully.</span><br></pre></td></tr></table></figure><p>修改django admin修改为中文</p><p>settings.py<br><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">'zh-hans'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/Shanghai'</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#需要改成False，否侧django在数据库中存的时间为UTC国际时间！</span></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br></pre></td></tr></table></figure></p><p>xadmin设置</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(mxonline) C:\Users\jianhu.yong\PycharmProjects\MxOnline&gt;pip install xadmin</span><br><span class="line">Collecting xadmin</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">1</span>d/e9/<span class="number">2</span>ac160c532d0d462142fa90aa86a0e317295e8d86fa4caf84d04f6e24c49/xadmin<span class="number">-0.6</span><span class="number">.1</span>.tar.gz (<span class="number">1.0</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">1.0</span>MB <span class="number">19</span>kB/s</span><br><span class="line">Requirement already satisfied: setuptools <span class="keyword">in</span> c:\users\jianhu.yong\envs\mxonline\lib\site-packages (<span class="keyword">from</span> xadmin) (<span class="number">39.2</span><span class="number">.0</span>)</span><br><span class="line">Requirement already satisfied: django&lt;<span class="number">2.0</span><span class="number">.0</span>,&gt;=<span class="number">1.9</span><span class="number">.0</span> <span class="keyword">in</span> c:\users\jianhu.yong\envs\mxonline\lib\site-packages (<span class="keyword">from</span> xadmin) (<span class="number">1.9</span>)</span><br><span class="line">Collecting django-crispy-forms&gt;=<span class="number">1.6</span><span class="number">.0</span> (<span class="keyword">from</span> xadmin)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">9</span>a/<span class="number">05</span>/<span class="number">6</span>bad05742d185ec2fabfa4deab05cafde286eb3f383fba24b3674340aca2/django_crispy_forms<span class="number">-1.7</span><span class="number">.2</span>-py2.py3-none-any.whl (<span class="number">105</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">112</span>kB <span class="number">14</span>kB/s</span><br><span class="line">Collecting django-formtools&gt;=<span class="number">1.0</span> (<span class="keyword">from</span> xadmin)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">97</span>/<span class="number">3</span>f/b8e04c41c028d5cdad651393abea1f686d846c717d8ab5d5ebe2974f711c/django_formtools<span class="number">-2.1</span>-py2.py3-none-any.whl (<span class="number">132</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">133</span>kB <span class="number">25</span>kB/s</span><br><span class="line">Collecting httplib2==<span class="number">0.9</span><span class="number">.2</span> (<span class="keyword">from</span> xadmin)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/ff/a9/<span class="number">5751</span>cdf17a70ea89f6dde23ceb1705bfb638fd8cee00f845308bf8d26397/httplib2<span class="number">-0.9</span><span class="number">.2</span>.tar.gz (<span class="number">205</span>kB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">215</span>kB <span class="number">23</span>kB/s</span><br><span class="line">Building wheels <span class="keyword">for</span> collected packages: xadmin, httplib2</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> xadmin ... done</span><br><span class="line">  Stored <span class="keyword">in</span> directory: C:\Users\jianhu.yong\AppData\Local\pip\Cache\wheels\<span class="number">4</span>f\d7\<span class="number">9</span>a\<span class="number">4699</span>d04c2239f4ad9764de8d236d9df1344574067dd61ab201</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> httplib2 ... done</span><br><span class="line">  Stored <span class="keyword">in</span> directory: C:\Users\jianhu.yong\AppData\Local\pip\Cache\wheels\<span class="number">36</span>\f2\<span class="number">49</span>\<span class="number">5</span>adbf90fba31e02a7784e1147d7f8b6c4af3718739e568c8cb</span><br><span class="line">Successfully built xadmin httplib2</span><br><span class="line">Installing collected packages: django-crispy-forms, django-formtools, httplib2, xadmin</span><br><span class="line">Successfully installed django-crispy-forms<span class="number">-1.7</span><span class="number">.2</span> django-formtools<span class="number">-2.1</span> httplib2<span class="number">-0.9</span><span class="number">.2</span> xadmin<span class="number">-0.6</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'users'</span>,</span><br><span class="line">    <span class="string">'courses'</span>,</span><br><span class="line">    <span class="string">'organization'</span>,</span><br><span class="line">    <span class="string">'operation'</span>,</span><br><span class="line">    <span class="string">'xadmin'</span>,</span><br><span class="line">    <span class="string">'crispy_forms'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">import</span>  xadmin</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">    url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-131.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">No changes detected</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br><span class="line">manage.py@MxOnline &gt; migrate</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: xadmin, users, sessions, admin, auth, courses, contenttypes, organization, operation</span><br><span class="line">Running migrations:</span><br><span class="line">  Rendering model states... DONE</span><br><span class="line">  Applying xadmin<span class="number">.0001</span>_initial... OK</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cDovL3NzaHdzZmMuZ2l0aHViLmlvL3hhZG1pbi8=" title="http://sshwsfc.github.io/xadmin/">http://sshwsfc.github.io/xadmin/<i class="fa fa-external-link"></i></span></p><p>基于源码安装xadmin</p><ul><li>可自定义</li><li>功能最新 比pypi</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NzaHdzZmMveGFkbWlu" title="https://github.com/sshwsfc/xadmin">https://github.com/sshwsfc/xadmin<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-132.png" alt="upload successful"></p><p><img src="/images/pasted-133.png" alt="upload successful"></p><p><img src="/images/pasted-134.png" alt="upload successful"></p><p><img src="/images/pasted-135.png" alt="upload successful"></p><p><img src="/images/pasted-136.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">'apps'</span>))</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">'extra_apps'</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-137.png" alt="upload successful"></p><p><img src="/images/pasted-138.png" alt="upload successful"></p><p><img src="/images/pasted-139.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install future</span><br><span class="line">pip install six</span><br><span class="line">pip install django_import_export</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@MxOnline &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">No changes detected</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br><span class="line">manage.py@MxOnline &gt; migrate</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\mxonline\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate C:/Users/jianhu.yong/PycharmProjects/MxOnline</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: xadmin, users, sessions, admin, auth, courses, contenttypes, organization, operation</span><br><span class="line">Running migrations:</span><br><span class="line">  Rendering model states... DONE</span><br><span class="line">  Applying xadmin<span class="number">.0002</span>_log... OK</span><br><span class="line">  Applying xadmin<span class="number">.0003</span>_auto_20160715_0100... OK</span><br></pre></td></tr></table></figure><p>设置脚本文件模版neirong</p><p><img src="/images/pasted-142.png" alt="upload successful"></p><p>通过xadmin注册model</p><p><img src="/images/pasted-141.png" alt="upload successful"></p><p>注册剩余models</p><p>xadmin全局配置</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xadmin <span class="keyword">import</span>  views</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> EmailVerifyRecord,Banner</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span><span class="params">(object)</span>:</span></span><br><span class="line">    enable_themes = <span class="literal">True</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line">xadmin.site.register(views.BaseAdminView, BaseSetting)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span><span class="params">(object)</span>:</span></span><br><span class="line">    site_title = <span class="string">'MX后台管理系统'</span></span><br><span class="line">    site_footer = <span class="string">'MX在线网'</span></span><br><span class="line">xadmin.site.register(views.CommAdminView, GlobalSettings)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-143.png" alt="upload successful"></p><p>xadmin主题bug<br><code>[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure</code></p><figure class="highlight python"><figcaption><span>xadmin\plugins\themes.py</span></figcaption><table><tr><td class="code"><pre><span class="line">flag = <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> flag:</span><br><span class="line">    h = httplib2.Http()</span><br><span class="line">    resp, content = h.request(<span class="string">"https://bootswatch.com/api/3.json"</span>, <span class="string">'GET'</span>, <span class="string">''</span>,</span><br><span class="line">        headers=&#123;<span class="string">"Accept"</span>: <span class="string">"application/json"</span>, <span class="string">"User-Agent"</span>: self.request.META[<span class="string">'HTTP_USER_AGENT'</span>]&#125;)</span><br><span class="line">    <span class="keyword">if</span> six.PY3:</span><br><span class="line">        content = content.decode()</span><br><span class="line">    watch_themes = json.loads(content)[<span class="string">'themes'</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    content = requests.get(<span class="string">"https://bootswatch.com/api/3.json"</span>)</span><br><span class="line">    <span class="keyword">if</span> six.PY3:</span><br><span class="line">        content = content.text.decode()</span><br><span class="line">    watch_themes = json.loads(content.text)[<span class="string">'themes'</span>]</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-144.png" alt="upload successful"><br>修改为中文显示</p><figure class="highlight python"><figcaption><span>__init__.py</span></figcaption><table><tr><td class="code"><pre><span class="line">default_app_config = <span class="string">'operation.apps.OperationConfig'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>apps.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">from</span> django.apps <span class="keyword">import</span> AppConfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OperationConfig</span><span class="params">(AppConfig)</span>:</span></span><br><span class="line">    name = <span class="string">'operation'</span></span><br><span class="line">    verbose_name = <span class="string">u"用户操作"</span></span><br></pre></td></tr></table></figure><p>首页和登录页的配置<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url(<span class="string">r'^$'</span>, TemplateView.as_view(template_name=<span class="string">'index.html'</span>), name=<span class="string">'index'</span>),</span><br><span class="line">url(<span class="string">r'^login/$'</span>, TemplateView.as_view(template_name=<span class="string">'login.html'</span>), name=<span class="string">'login'</span>),</span><br></pre></td></tr></table></figure></p><p>用户登录配置</p><figure class="highlight python"><figcaption><span>urls.py</span></figcaption><table><tr><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">    url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">    url(<span class="string">r'^$'</span>, TemplateView.as_view(template_name=<span class="string">'index.html'</span>), name=<span class="string">'index'</span>),</span><br><span class="line">    <span class="comment"># url(r'^login/$', TemplateView.as_view(template_name='login.html'), name='login'),</span></span><br><span class="line">    url(<span class="string">r'^login/$'</span>, user_login, name=<span class="string">'login'</span>),</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>views.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_login</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">''</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">''</span>)</span><br><span class="line">        user = authenticate(username=user_name,password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;&#125;)</span><br><span class="line">```        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">自定义auth认证变量</span><br><span class="line">重写authenticate方法</span><br><span class="line"></span><br><span class="line">``` python views.py</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> authenticate, login</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.backends <span class="keyword">import</span> ModelBackend</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> UserProfile</span><br><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> Q</span><br><span class="line"><span class="comment"># 完成并集操作获得关系</span></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomBackend</span><span class="params">(ModelBackend)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span><span class="params">(self, username=None, password=None, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = UserProfile.objects.get(Q(username=username)|Q(email=username))</span><br><span class="line">            <span class="keyword">if</span> user.check_password(password):</span><br><span class="line">                <span class="keyword">return</span> user</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">'users.views.CustomBackend'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>views方法基于类，不基于函数书写</p><figure class="highlight python"><figcaption><span>views.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span>  django.views.generic.base <span class="keyword">import</span> View</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">''</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">''</span>)</span><br><span class="line">        user = authenticate(username=user_name,password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>, &#123;<span class="string">'msg'</span>:<span class="string">'用户名或密码错误！'</span>&#125;)</span><br></pre></td></tr></table></figure><p>form实现登入</p><p><img src="/images/pasted-145.png" alt="upload successful"></p><p>session &amp; cookies自动登录机制</p><ul><li>cookies 浏览器本地存储方式机制，可以存储很多信息，存储在某个域名之下，存储在本地不安全！</li><li>session 服务器生成，存储在服务器端，安全，发送给用户，存储在cookies之中！</li></ul><p><img src="/images/pasted-146.png" alt="upload successful"><br><img src="/images/pasted-147.png" alt="upload successful"><br><img src="/images/pasted-149.png" alt="upload successful"><br><img src="/images/pasted-148.png" alt="upload successful"></p><p>value 用户名密码加密字符串，服务器对session id取出value 并解密，实现自动登录 ！</p><p><img src="/images/pasted-150.png" alt="upload successful"><br>注释掉 自动登录就失效了！</p><p>用户注册</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% load staticfiles %&#125;</span><br></pre></td></tr></table></figure><p>验证码插件</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21iaS9kamFuZ28tc2ltcGxlLWNhcHRjaGE=" title="https://github.com/mbi/django-simple-captcha">https://github.com/mbi/django-simple-captcha<i class="fa fa-external-link"></i></span></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Install django-simple-captcha via pip: pip install  django-simple-captcha</span><br><span class="line"></span><br><span class="line">Add captcha to the INSTALLED_APPS <span class="keyword">in</span> your settings.py</span><br><span class="line"></span><br><span class="line">Run python manage.py migrate</span><br><span class="line"></span><br><span class="line">Add an entry to your urls.py:</span><br><span class="line"></span><br><span class="line">urlpatterns += [</span><br><span class="line">    url(<span class="string">r'^captcha/'</span>, include(<span class="string">'captcha.urls'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install django-simple-captcha==<span class="number">0.4</span><span class="number">.6</span></span><br></pre></td></tr></table></figure><p>配置邮箱设置！<br><figure class="highlight python"><figcaption><span>settings.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mail Config</span></span><br><span class="line">EMAIL_HOST = <span class="string">'smtp.laohulab.com'</span></span><br><span class="line">EMAIL_PORT = <span class="number">25</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'postmaster@qq.com'</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'XXXX'</span></span><br><span class="line">EMAIL_USE_TLS =<span class="literal">False</span></span><br><span class="line">EMAIL_FROM = <span class="string">'postmaster@qq.com'</span></span><br></pre></td></tr></table></figure></p><p>注册邮件发送<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line">__author__ = <span class="string">'jianhu.yong'</span></span><br><span class="line">__date__ = <span class="string">'2018/7/5 16:29'</span></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> django.core.mail <span class="keyword">import</span> send_mail</span><br><span class="line"><span class="keyword">from</span> users.models <span class="keyword">import</span> EmailVerifyRecord</span><br><span class="line"><span class="keyword">from</span> MxOnline.settings <span class="keyword">import</span> EMAIL_FROM</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_str</span><span class="params">(randomlength=<span class="number">8</span>)</span>:</span></span><br><span class="line">    str = <span class="string">''</span></span><br><span class="line">    chars = <span class="string">'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789'</span></span><br><span class="line">    length = len(chars) <span class="number">-1</span></span><br><span class="line">    random =Random()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(randomlength):</span><br><span class="line">        str += chars[random.randint(<span class="number">0</span>, length)]</span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_register_email</span><span class="params">(email, send_type=<span class="string">'register'</span>)</span>:</span></span><br><span class="line">    email_record = EmailVerifyRecord()</span><br><span class="line">    code = random_str(<span class="number">16</span>)</span><br><span class="line">    email_record.code = code</span><br><span class="line">    email_record.email = email</span><br><span class="line">    email_record.send_type = send_type</span><br><span class="line">    email_record.save()</span><br><span class="line"></span><br><span class="line">    email_title = <span class="string">''</span></span><br><span class="line">    email_body = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> send_type == <span class="string">'register'</span>:</span><br><span class="line">        email_title = <span class="string">'MX在线网注册激活链接'</span></span><br><span class="line">        email_body = <span class="string">'请点击下面的链接激活你的账号：http://127.0.0.1:8000/active/&#123;0&#125;'</span>.format(code)</span><br><span class="line">        send_status = send_mail(email_title, email_body, EMAIL_FROM, [email])</span><br><span class="line">        <span class="keyword">if</span> send_status:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> send_type == <span class="string">'forget'</span>:</span><br><span class="line">        email_title = <span class="string">'MX在线网密码重置链接'</span></span><br><span class="line">        email_body = <span class="string">'请点击下面的链接重置密码：http://127.0.0.1:8000/reset/&#123;0&#125;'</span>.format(code)</span><br><span class="line">        send_status = send_mail(email_title, email_body, EMAIL_FROM, [email])</span><br><span class="line">        <span class="keyword">if</span> send_status:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><p>激活用户设置<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">    url(<span class="string">r'^active/(?P&lt;active_code&gt;\w+)/$'</span>, ActiveUserView.as_view(), name=<span class="string">'user_active'</span>),</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ActiveUserView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, active_code)</span>:</span></span><br><span class="line">        all_records = EmailVerifyRecord.objects.filter(code=active_code)</span><br><span class="line">        <span class="keyword">if</span> all_records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> all_records:</span><br><span class="line">                email = record.email</span><br><span class="line">                user = UserProfile.objects.get(email=email)</span><br><span class="line">                user.is_active = <span class="literal">True</span></span><br><span class="line">                user.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'active_fail.html'</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">密码找回</span><br><span class="line">``` python</span><br><span class="line">    url(<span class="string">r'^forget/$'</span>, ForgetPwdView.as_view(), name=<span class="string">'forget_pwd'</span>),</span><br><span class="line">    url(<span class="string">r'^reset/(?P&lt;active_code&gt;\w+)/$'</span>, ResetView.as_view(), name=<span class="string">'reset_pwd'</span>),</span><br><span class="line">    url(<span class="string">r'^modify/$'</span>, ModifyPwdView.as_view(), name=<span class="string">'modify_pwd'</span>),</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        register_form = RegisterForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'register.html'</span>, &#123;<span class="string">'register_form'</span>:register_form&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        register_form = RegisterForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">            user_name = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> UserProfile.objects.filter(email=user_name):</span><br><span class="line">                <span class="keyword">return</span>  render(request, <span class="string">'register.html'</span>, &#123;<span class="string">'msg'</span>:<span class="string">'用户已存在！'</span>,<span class="string">'register_form'</span>: register_form&#125;)</span><br><span class="line">            pass_word = request.POST.get(<span class="string">'password'</span>, <span class="string">''</span>)</span><br><span class="line">            user_profile =UserProfile()</span><br><span class="line">            user_profile.username = user_name</span><br><span class="line">            user_profile.email = user_name</span><br><span class="line">            user_profile.is_active = <span class="literal">False</span></span><br><span class="line">            user_profile.password = make_password(pass_word)</span><br><span class="line">            user_profile.save()</span><br><span class="line"></span><br><span class="line">            send_register_email(user_name, <span class="string">'register'</span>)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'register.html'</span>, &#123;<span class="string">'register_form'</span>: register_form&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ForgetPwdView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        forgetpwd_form = ForgetPwdForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'forgetpwd.html'</span>, &#123;<span class="string">'forgetpwd_form'</span>:forgetpwd_form&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        forgetpwd_form = ForgetPwdForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> forgetpwd_form.is_valid():</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            send_register_email(email, <span class="string">'forget'</span>)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'send_success.html'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'forgetpwd.html'</span>, &#123;<span class="string">'forgetpwd_form'</span>:forgetpwd_form&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResetView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, active_code)</span>:</span></span><br><span class="line">        all_records = EmailVerifyRecord.objects.filter(code=active_code)</span><br><span class="line">        <span class="keyword">if</span> all_records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> all_records:</span><br><span class="line">                email = record.email</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'password_reset.html'</span>, &#123;<span class="string">'email'</span>:email&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'active_fail.html'</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModifyPwdView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        modify_form = ModifyPwdForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> modify_form.is_valid():</span><br><span class="line">            pwd1 = request.POST.get(<span class="string">'password1'</span>, <span class="string">''</span>)</span><br><span class="line">            pwd2 = request.POST.get(<span class="string">'password2'</span>, <span class="string">''</span>)</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> pwd1 != pwd2:</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">'password_reset.html'</span>, &#123;<span class="string">'email'</span>:email, <span class="string">'msg'</span>:<span class="string">'密码不一致！'</span>&#125;)</span><br><span class="line">            user = UserProfile.objects.get(email=email)</span><br><span class="line">            user.password = make_password(pwd2)</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'login.html'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">'password_reset'</span>, &#123;<span class="string">'email'</span>:email, <span class="string">'modify_form'</span>:modify_form&#125;)</span><br></pre></td></tr></table></figure></p><p>MEDIA_URL配置 调用静态image<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</span><br><span class="line">        ,</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">                <span class="string">'django.core.context_processors.media'</span></span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># upload setting</span></span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">'media'</span>)</span><br></pre></td></tr></table></figure><pre><code># 配置上传文件的访问处理函数url(r&apos;^media/(?P&lt;path&gt;.*)$&apos;, serve, {&apos;document_root&apos;:MEDIA_ROOT}),</code></pre><p>from django.views.static import  serve<br>from MxOnline.settings import MEDIA_ROOT    </p><p>django分页功能！<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2phbWVzcGFjaWxlby9kamFuZ28tcHVyZS1wYWdpbmF0aW9u" title="https://github.com/jamespacileo/django-pure-pagination">https://github.com/jamespacileo/django-pure-pagination<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-151.png" alt="upload successful"><br>p = Paginator(all_orgs,  request=request)<br>p = Paginator(all_orgs, 5,  request=request)</p><p><img src="/images/pasted-152.png" alt="upload successful"><br>使用默认，分页样式无法控制</p><p>列表筛选功能</p><p>机构排名和课程学习人数排序</p><p>modelform提交</p><p>外键关系<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123; course.lesson_set.all.count &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &#123;%  for user_course in course.usercourse_set.all %&#125;</span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"40"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; user_course.user.image &#125;&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            &#123;% endfor %&#125;</span><br><span class="line">                            </span><br><span class="line">                            </span><br><span class="line">    def get_zj_nums(self):</span><br><span class="line">        return self.lesson_set.all().count()</span><br><span class="line"></span><br><span class="line">    def get_learn_users(self):</span><br><span class="line">        return self.usercourse_set.all()[:5]</span><br><span class="line">        </span><br><span class="line">&#123;&#123;course.get_zj_nums&#125;&#125;</span><br><span class="line">&#123;% for usercourse in course.get_learn_users %&#125;</span><br></pre></td></tr></table></figure></p><p>用户上传文件<br>html<br>enctype=”multipart/form-data”</p><p>后端：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadImageView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        image_form = UploadImageForm(request.POST, request.FILES)</span><br><span class="line">        <span class="keyword">if</span> image_form.is_valid():</span><br><span class="line">            image = image_form.cleaned_data[<span class="string">'image'</span>]</span><br><span class="line">            request.user.image = image</span><br><span class="line">            request.user.save()</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># def post(self, request):</span></span><br><span class="line">    <span class="comment">#     image_form = UploadImageForm(request.POST, request.FILES, instance=request.user)</span></span><br><span class="line">    <span class="comment">#     if image_form.is_valid():</span></span><br><span class="line">    <span class="comment">#         image_form.save()</span></span><br><span class="line">```    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">4040</span> <span class="number">500</span>配置    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">django xadmin 进阶开发</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">debug 改成true时候</span><br><span class="line">注释</span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">'static'</span>)</span><br><span class="line"> url(<span class="string">r'^static/(?P&lt;path&gt;.*)$'</span>, serve, &#123;<span class="string">'document_root'</span>:STATIC_ROOT&#125;),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model icon配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">model_icon = <span class="string">'fa fa-user'</span></span><br><span class="line">开源图标库</span><br><span class="line">https://fontawesome.com/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![upload successful](/images/pasted<span class="number">-153.</span>png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">倒叙排列</span><br><span class="line">ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line"></span><br><span class="line">设置字段只读</span><br><span class="line">readonly_fields = [<span class="string">'click_nums'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line"></span><br><span class="line">移除某个字段显示</span><br><span class="line">exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line"></span><br><span class="line">需要注意是否和readonly_fields冲突</span><br><span class="line"></span><br><span class="line">关联外键字段，添加搜索功能（针对外键数量很多是，自动搜索方便）</span><br><span class="line">relfield_style = <span class="string">'fk-ajax'</span></span><br><span class="line"></span><br><span class="line">报错</span><br><span class="line">TypeError: Related Field got invalid lookup: icontains</span><br><span class="line"><span class="number">1</span></span><br><span class="line">原因</span><br><span class="line">出错原因是你配置的ModelAdmin类中，元组search_fields中的项不是字符类型。</span><br><span class="line"></span><br><span class="line">解决</span><br><span class="line">删除元组search_fields中类型不符的项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xadmin inline模式</span><br><span class="line">``` python</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LessonInline</span><span class="params">(object)</span>:</span></span><br><span class="line">    model = Lesson</span><br><span class="line">    extra = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline]</span><br><span class="line">xadmin.site.register(Course, CourseAdmin)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LessonInline</span><span class="params">(object)</span>:</span></span><br><span class="line">    model = Lesson</span><br><span class="line">    extra = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseResourceInline</span><span class="params">(object)</span>:</span></span><br><span class="line">    model = CourseResource</span><br><span class="line">    extra = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line">xadmin.site.register(Course, CourseAdmin)</span><br></pre></td></tr></table></figure></p><p>同一个model 后台注册2个管理器，分别管理同一张表！<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course_org = models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"课程机构"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程描述"</span>)</span><br><span class="line">    detail = models.TextField(verbose_name=<span class="string">u"课程详情"</span>)</span><br><span class="line">    teacher = models.ForeignKey(Teacher, verbose_name=<span class="string">u"讲师"</span>, null=<span class="literal">True</span>,  blank=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># TextField不限制max_length</span></span><br><span class="line">    degree = models.CharField(choices=((<span class="string">"cj"</span>, <span class="string">u"初级"</span>),(<span class="string">"zj"</span>, <span class="string">u"中级"</span>),(<span class="string">"bj"</span>, <span class="string">u"高级"</span>)), max_length=<span class="number">2</span>, verbose_name=<span class="string">u"难度"</span>)</span><br><span class="line">    learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长（分钟数）"</span>)</span><br><span class="line">    students= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习人数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏人数"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"courses/%y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    category = models.CharField(default=<span class="string">u"后端开发"</span>, max_length=<span class="number">20</span>, verbose_name=<span class="string">u"课程类别"</span>)</span><br><span class="line">    tag = models.CharField(default=<span class="string">""</span>, max_length=<span class="number">10</span>, verbose_name= <span class="string">u"课程标签"</span>)</span><br><span class="line">    youneed_know = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程须知"</span>, default=<span class="string">""</span>)</span><br><span class="line">    teacher_tell = models.CharField(max_length=<span class="number">300</span> , verbose_name=<span class="string">u"老师告诉你学到什么"</span>, default=<span class="string">""</span>)</span><br><span class="line">    is_banner = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否轮播"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_zj_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.lesson_set.all().count()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_learn_users</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.usercourse_set.all()[:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerCourse</span><span class="params">(Course)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"轮播课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        qs = super(CourseAdmin, self).queryset()</span><br><span class="line">        qs = qs.filter(is_banner=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> qs</span><br><span class="line">xadmin.site.register(Course, CourseAdmin)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerCourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        qs = super(BannerCourseAdmin, self).queryset()</span><br><span class="line">        qs = qs.filter(is_banner=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> qs</span><br><span class="line">xadmin.site.register(BannerCourse, BannerCourseAdmin)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list_editable</span><br><span class="line">list_editable = [<span class="string">'name'</span>,<span class="string">'degree'</span>]</span><br></pre></td></tr></table></figure></p><p>list中 函数的引用<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    course_org = models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"课程机构"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程描述"</span>)</span><br><span class="line">    detail = models.TextField(verbose_name=<span class="string">u"课程详情"</span>)</span><br><span class="line">    teacher = models.ForeignKey(Teacher, verbose_name=<span class="string">u"讲师"</span>, null=<span class="literal">True</span>,  blank=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># TextField不限制max_length</span></span><br><span class="line">    degree = models.CharField(choices=((<span class="string">"cj"</span>, <span class="string">u"初级"</span>),(<span class="string">"zj"</span>, <span class="string">u"中级"</span>),(<span class="string">"bj"</span>, <span class="string">u"高级"</span>)), max_length=<span class="number">2</span>, verbose_name=<span class="string">u"难度"</span>)</span><br><span class="line">    learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长（分钟数）"</span>)</span><br><span class="line">    students= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习人数"</span>)</span><br><span class="line">    fav_nums= models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏人数"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"courses/%y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    category = models.CharField(default=<span class="string">u"后端开发"</span>, max_length=<span class="number">20</span>, verbose_name=<span class="string">u"课程类别"</span>)</span><br><span class="line">    tag = models.CharField(default=<span class="string">""</span>, max_length=<span class="number">10</span>, verbose_name= <span class="string">u"课程标签"</span>)</span><br><span class="line">    youneed_know = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程须知"</span>, default=<span class="string">""</span>)</span><br><span class="line">    teacher_tell = models.CharField(max_length=<span class="number">300</span> , verbose_name=<span class="string">u"老师告诉你学到什么"</span>, default=<span class="string">""</span>)</span><br><span class="line">    is_banner = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否轮播"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_zj_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.lesson_set.all().count()</span><br><span class="line">    get_zj_nums.short_description = <span class="string">u'章节数'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_learn_users</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.usercourse_set.all()[:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>,<span class="string">'get_zj_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'click_nums'</span>]</span><br><span class="line">    list_editable = [<span class="string">'name'</span>,<span class="string">'degree'</span>]</span><br><span class="line">    exclude = [<span class="string">'fav_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br></pre></td></tr></table></figure></p><p>自定义html代码<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">go_to</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">from</span> django.utils.safestring <span class="keyword">import</span> mark_safe</span><br><span class="line">        <span class="keyword">return</span> mark_safe(<span class="string">'&lt;a href="http://www.baidu.com/&#123;0&#125;" target="_blank"&gt;Link&lt;/a&gt;'</span>.format(self.name))</span><br><span class="line">        go_to.short_description = <span class="string">u'章节数'</span></span><br><span class="line">        </span><br><span class="line">list_display = [<span class="string">'name'</span>,<span class="string">'desc'</span>,<span class="string">'detail'</span>,<span class="string">'degree'</span>,<span class="string">'learn_times'</span>,<span class="string">'students'</span>,<span class="string">'fav_nums'</span>,<span class="string">'image'</span>,<span class="string">'click_nums'</span>,<span class="string">'add_time'</span>,<span class="string">'get_zj_nums'</span>,<span class="string">'go_to'</span>]</span><br></pre></td></tr></table></figure></p><p>定时刷新<br>refresh_times = [3, 5]<br><img src="/images/pasted-154.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">数据发生变更触发操作</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_models</span><span class="params">(self)</span>:</span></span><br><span class="line">        obj = self.new_obj</span><br><span class="line">        obj.save()</span><br><span class="line">        course_org = obj.course_org</span><br><span class="line">        <span class="keyword">if</span> course_org:</span><br><span class="line">            course_org.course_nums = Course.objects.filter(course_org=course_org).count()</span><br><span class="line">            course_org.save()</span><br><span class="line">```            </span><br><span class="line">xadmin集成富文本编辑工具</span><br><span class="line">https://github.com/zhangfisher/DjangoUeditor</span><br><span class="line"></span><br><span class="line">pip install DjangoUeditor</span><br><span class="line">setting.py 配置 instal app</span><br><span class="line">url配置</span><br><span class="line">拷贝DjangoUeditor static html文件</span><br><span class="line"></span><br><span class="line">``` html</span><br><span class="line">&#123;% autoescape off %&#125;</span><br><span class="line">&#123;&#123; course.detail &#125;&#125;</span><br><span class="line">&#123;% endautoescape %&#125;</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dncHl0aG9uL2FydGljbGUvZGV0YWlscy83OTU4NTIwNQ==" title="https://blog.csdn.net/wgpython/article/details/79585205">https://blog.csdn.net/wgpython/article/details/79585205<i class="fa fa-external-link"></i></span></p><p>uedit插件</p><p>excel插件</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbl90dXJuL2FydGljbGUvZGV0YWlscy81NTUxNzc1OQ==" title="https://blog.csdn.net/win_turn/article/details/55517759">https://blog.csdn.net/win_turn/article/details/55517759<i class="fa fa-external-link"></i></span><br><span class="exturl" data-url="aHR0cDovL2RqYW5nby1zaW1wbGUtY2FwdGNoYS5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvdXNhZ2UuaHRtbCNpbnN0YWxsYXRpb24=" title="http://django-simple-captcha.readthedocs.io/en/latest/usage.html#installation">http://django-simple-captcha.readthedocs.io/en/latest/usage.html#installation<i class="fa fa-external-link"></i></span></p><p><span class="exturl" data-url="aHR0cDovL3Byb2plY3RzZWR1LmNvbS8yMDE3LzA4LzE1L2NlbnRvczctJUU0JUI4JThCJUU5JTgwJTlBJUU4JUJGJTg3bmdpbngtdXdzZ2klRTklODMlQTglRTclQkQlQjJkamFuZ28lRTUlQkElOTQlRTclOTQlQTgv" title="http://projectsedu.com/2017/08/15/centos7-%E4%B8%8B%E9%80%9A%E8%BF%87nginx-uwsgi%E9%83%A8%E7%BD%B2django%E5%BA%94%E7%94%A8/">http://projectsedu.com/2017/08/15/centos7-%E4%B8%8B%E9%80%9A%E8%BF%87nginx-uwsgi%E9%83%A8%E7%BD%B2django%E5%BA%94%E7%94%A8/<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Django app&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;users-用户管理&lt;/li&gt;
&lt;li&gt;course-课程管理&lt;/li&gt;
&lt;li&gt;organization-机构和教师管理&lt;/li&gt;
&lt;li&gt;operation-用户操作管理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>Django models</title>
    <link href="http://blog.laohulab.com/Django/1160884897.html"/>
    <id>http://blog.laohulab.com/Django/1160884897.html</id>
    <published>2018-06-28T05:42:00.000Z</published>
    <updated>2019-05-01T06:46:54.244Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; makemigrations messages</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations messages C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">No changes detected <span class="keyword">in</span> app <span class="string">'messages'</span></span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><p>解决方案<br>settings配置文件中添加app信息即可</p><figure class="highlight python"><figcaption><span>models.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMessage</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>,verbose_name=<span class="string">u"用户名"</span>)</span><br><span class="line">    email = models.EmailField(verbose_name=<span class="string">u"邮箱"</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"联系地址"</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>,verbose_name=<span class="string">u"留言信息"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户留言信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>urls.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> message.views <span class="keyword">import</span> getform</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^form/'</span>,getform, name=<span class="string">'form_get'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;manage.py@djangodemo &amp;gt; makemigrations messages&lt;/span
      
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows安装mysql-python</title>
    <link href="http://blog.laohulab.com/Django/559006889.html"/>
    <id>http://blog.laohulab.com/Django/559006889.html</id>
    <published>2018-06-28T03:12:00.000Z</published>
    <updated>2019-05-01T06:47:35.331Z</updated>
    
    <content type="html"><![CDATA[<h5 id="安装mysql-python"><a href="#安装mysql-python" class="headerlink" title=" 安装mysql-python"></a><i class="fa fa-caret-right fa-lg"></i> 安装mysql-python</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install mysql-python</span><br></pre></td></tr></table></figure><p>出现如下错误<br><img src="/images/pasted-110.png" alt="upload successful"></p><a id="more"></a><h5 id="解决方案"><a href="#解决方案" class="headerlink" title=" 解决方案"></a><i class="fa fa-caret-right fa-lg"></i> 解决方案</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLyNteXNxbC1weXRob24=" title="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python">https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-111.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;pip install C:\Users\jianhu.yong\Downloads\MySQL_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Processing c:\users\jianhu.yong\downloads\mysql_python<span class="number">-1.2</span><span class="number">.5</span>-cp27-none-win_amd64.whl</span><br><span class="line">Installing collected packages: MySQL-python</span><br><span class="line">Successfully installed MySQL-python<span class="number">-1.2</span><span class="number">.5</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;安装mysql-python&quot;&gt;&lt;a href=&quot;#安装mysql-python&quot; class=&quot;headerlink&quot; title=&quot; 安装mysql-python&quot;&gt;&lt;/a&gt;&lt;i class=&quot;fa fa-caret-right fa-lg&quot;&gt;&lt;/i&gt; 安装mysql-python&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install mysql-python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;出现如下错误&lt;br&gt;&lt;img src=&quot;/images/pasted-110.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>Django基础知识</title>
    <link href="http://blog.laohulab.com/Django/1958507969.html"/>
    <id>http://blog.laohulab.com/Django/1958507969.html</id>
    <published>2018-06-26T07:24:00.000Z</published>
    <updated>2019-05-01T06:48:08.479Z</updated>
    
    <content type="html"><![CDATA[<h5 id="创建Django项目"><a href="#创建Django项目" class="headerlink" title=" 创建Django项目"></a><i class="fa fa-caret-right fa-lg"></i> 创建Django项目</h5><p><img src="/images/pasted-95.png" alt="upload successful"></p><a id="more"></a><h5 id="django目录结构"><a href="#django目录结构" class="headerlink" title=" django目录结构"></a><i class="fa fa-caret-right fa-lg"></i> django目录结构</h5><p><img src="/images/pasted-88.png" alt><br>保存django项目的urls、settings、uwsgi文件</p><h5 id="新建项目app"><a href="#新建项目app" class="headerlink" title=" 新建项目app"></a><i class="fa fa-caret-right fa-lg"></i> 新建项目app</h5><p><img src="/images/pasted-90.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; startapp message</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> startapp message C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">Following files were affected </span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\apps.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\views.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\__init__.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\admin.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\tests.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\models.py</span><br><span class="line">C:\Users\jianhu.yong\PycharmProjects\djangodemo\message\migrations\__init__.py</span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="新建静态文件夹"><a href="#新建静态文件夹" class="headerlink" title=" 新建静态文件夹"></a><i class="fa fa-caret-right fa-lg"></i> 新建静态文件夹</h5><p><img src="/images/pasted-91.png" alt="upload successful"><br><img src="/images/pasted-92.png" alt="upload successful"><br><img src="/images/pasted-93.png" alt="upload successful"><br>主要存放静态文件 js css img等</p><h5 id="新建日志文件夹"><a href="#新建日志文件夹" class="headerlink" title=" 新建日志文件夹"></a><i class="fa fa-caret-right fa-lg"></i> 新建日志文件夹</h5><p><img src="/images/pasted-94.png" alt="upload successful"></p><h5 id="新建用户上传文件夹"><a href="#新建用户上传文件夹" class="headerlink" title=" 新建用户上传文件夹"></a><i class="fa fa-caret-right fa-lg"></i> 新建用户上传文件夹</h5><p><img src="/images/pasted-96.png" alt="upload successful"></p><h5 id="新建apps-package"><a href="#新建apps-package" class="headerlink" title=" 新建apps package"></a><i class="fa fa-caret-right fa-lg"></i> 新建apps package</h5><p><img src="/images/pasted-102.png" alt="upload successful"><br><img src="/images/pasted-101.png" alt="upload successful"></p><p><img src="/images/pasted-103.png" alt="upload successful"><br>集中管理diango app</p><p>将message app移动至apps文件夹内</p><p><img src="/images/pasted-104.png" alt="upload successful"><br><img src="/images/pasted-99.png" alt="upload successful"><br><img src="/images/pasted-105.png" alt="upload successful"></p><div class="note info">            <p>当我们在其他目录导入message时候，需要通过apps.message来导入！<br>例如：<code>from apps.message import views</code><br>直接<code>import message</code>会提示错误</p>          </div><p><img src="/images/pasted-108.png" alt="upload successful"></p><div class="note danger">            <p>当我们想通过<code>import message import views</code>导入却发现有错误，这是需要将apps目录标记为<code>Sources Root</code>即可，但是又会带来另外一个问题，在命令行里面启动django项目，会提示message找不到的错误，这时需要修改<code>settings</code>配置文件中的<code>BASEDIR</code>变量即可！</p><p><code>sys.path.append(os.path.join(BASE_DIR,&#39;apps&#39;))</code><br><code>sys.path.insert(0, os.path.join(BASE_DIR, &#39;apps&#39;))</code></p>          </div><p><img src="/images/pasted-109.png" alt="upload successful"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;workon</span><br><span class="line"></span><br><span class="line">Pass a name to activate one of the following virtualenvs:</span><br><span class="line">==============================================================================</span><br><span class="line">testvir01</span><br><span class="line"></span><br><span class="line">C:\WINDOWS\system32&gt;workon testvir01</span><br><span class="line">(testvir01) C:\Windows\System32&gt;cd C:\Users\jianhu.yong\PycharmProjects\djangodemo\</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;dir</span><br><span class="line"> 驱动器 C 中的卷没有标签。</span><br><span class="line"> 卷的序列号是 D8C0-E83A</span><br><span class="line"></span><br><span class="line"> C:\Users\jianhu.yong\PycharmProjects\djangodemo 的目录</span><br><span class="line"></span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">32</span>    &lt;DIR&gt;          .</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">32</span>    &lt;DIR&gt;          ..</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">37</span>    &lt;DIR&gt;          .idea</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">29</span>    &lt;DIR&gt;          apps</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          djangodemo</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          log</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">28</span>  <span class="number">10</span>:<span class="number">32</span>               <span class="number">807</span> manage.py</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">20</span>    &lt;DIR&gt;          media</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          static</span><br><span class="line"><span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>  <span class="number">17</span>:<span class="number">19</span>    &lt;DIR&gt;          templates</span><br><span class="line">               <span class="number">1</span> 个文件            <span class="number">807</span> 字节</span><br><span class="line">               <span class="number">9</span> 个目录 <span class="number">45</span>,<span class="number">607</span>,<span class="number">804</span>,<span class="number">928</span> 可用字节</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;python manage.py runserver</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"manage.py"</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">import</span>  message</span><br><span class="line">ImportError: No module named message</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Users\jianhu.yong\PycharmProjects\djangodemo&gt;</span><br></pre></td></tr></table></figure><h5 id="Django留言板项目简单实战"><a href="#Django留言板项目简单实战" class="headerlink" title=" Django留言板项目简单实战"></a><i class="fa fa-caret-right fa-lg"></i> Django留言板项目简单实战</h5><p><img src="/images/pasted-112.png" alt="upload successful"></p><h5 id="安装mysql-python"><a href="#安装mysql-python" class="headerlink" title=" 安装mysql-python"></a><i class="fa fa-angle-double-right fa-lg"></i> 安装mysql-python</h5><a href="/Django/559006889.html" title="Windows安装mysql-python">Windows安装mysql-python</a><h5 id="settings配置"><a href="#settings配置" class="headerlink" title=" settings配置"></a><i class="fa fa-angle-double-right fa-lg"></i> settings配置</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'testdb01'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'127.0.0.1'</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</span><br><span class="line">        ,</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/1.10/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR,<span class="string">'static'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="migration生成数据表"><a href="#migration生成数据表" class="headerlink" title=" migration生成数据表"></a><i class="fa fa-angle-double-right fa-lg"></i> migration生成数据表</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; makemigrations</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> makemigrations C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">No changes detected</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manage.py@djangodemo &gt; migrate</span><br><span class="line"><span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\bin\runnerw.exe"</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe <span class="string">"C:\Program Files\JetBrains\PyCharm 2017.1.2\helpers\pycharm\django_manage.py"</span> migrate C:/Users/jianhu.yong/PycharmProjects/djangodemo</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, contenttypes, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying auth<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying admin<span class="number">.0001</span>_initial... OK</span><br><span class="line">  Applying admin<span class="number">.0002</span>_logentry_remove_auto_add... OK</span><br><span class="line">  Applying contenttypes<span class="number">.0002</span>_remove_content_type_name... OK</span><br><span class="line">  Applying auth<span class="number">.0002</span>_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth<span class="number">.0003</span>_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth<span class="number">.0004</span>_alter_user_username_opts... OK</span><br><span class="line">  Applying auth<span class="number">.0005</span>_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth<span class="number">.0006</span>_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth<span class="number">.0007</span>_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth<span class="number">.0008</span>_alter_user_username_max_length... OK</span><br><span class="line">  Applying sessions<span class="number">.0001</span>_initial... OK</span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure><h5 id="编写views-py"><a href="#编写views-py" class="headerlink" title=" 编写views.py"></a><i class="fa fa-angle-double-right fa-lg"></i> 编写views.py</h5><figure class="highlight python"><figcaption><span>views.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getform</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'message_form.html'</span>)</span><br></pre></td></tr></table></figure><h5 id="配置urls-py"><a href="#配置urls-py" class="headerlink" title=" 配置urls.py"></a><i class="fa fa-angle-double-right fa-lg"></i> 配置urls.py</h5><figure class="highlight python"><figcaption><span>urls.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> message.views <span class="keyword">import</span> getform</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^form/'</span>,getform, name=<span class="string">'form_get'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="静态文件配置"><a href="#静态文件配置" class="headerlink" title=" 静态文件配置"></a><i class="fa fa-angle-double-right fa-lg"></i> 静态文件配置</h5><figure class="highlight html"><figcaption><span>message_form.html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/css/style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'form_get' %&#125;"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">class</span>=<span class="string">"smart-green"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>留言信息</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>请留下你的信息.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=</span></span><br><span class="line"><span class="tag">        &#123;% <span class="attr">if</span> <span class="attr">not</span> <span class="attr">message.name</span> == <span class="string">'bobbytest'</span> %&#125;</span></span><br><span class="line"><span class="tag">            '<span class="attr">bobby</span> <span class="attr">has</span> <span class="attr">test</span>'</span></span><br><span class="line"><span class="tag">        &#123;% <span class="attr">else</span> %&#125;</span></span><br><span class="line"><span class="tag">            <span class="attr">bobby</span></span></span><br><span class="line"><span class="tag">        &#123;% <span class="attr">endif</span> %&#125; <span class="attr">class</span>=<span class="string">"error"</span> <span class="attr">placeholder</span>=<span class="string">"请输入您的姓名"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>邮箱 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">type</span>=<span class="string">"email"</span>  <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; message.email &#125;&#125;"</span> <span class="attr">placeholder</span>=<span class="string">"请输入邮箱地址"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>联系地址 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"address"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; message.address &#125;&#125;"</span> <span class="attr">placeholder</span>=<span class="string">"请输入联系地址"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>留言 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"message"</span> <span class="attr">name</span>=<span class="string">"message"</span>  <span class="attr">placeholder</span>=<span class="string">"请输入你的建议"</span>&gt;</span>&#123;&#123; message.message &#125;&#125;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"success-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><figcaption><span>style.css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.smart-green</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: auto;</span><br><span class="line">    <span class="attribute">margin-right</span>: auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#F8F8F8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">20px</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span> Arial, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">24px</span> <span class="string">"Trebuchet MS"</span>, Arial, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">30px</span> -<span class="number">30px</span> <span class="number">10px</span> -<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#9DC45F</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#949494</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#89AF4C</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">h1</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">label</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5E5E5E</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span>, <span class="selector-class">.smart-green</span> <span class="selector-tag">input</span><span class="selector-attr">[type="email"]</span>, <span class="selector-class">.smart-green</span> <span class="selector-tag">textarea</span>, <span class="selector-class">.smart-green</span> <span class="selector-tag">select</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#E5E5E5</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#FBFBFB</span>;</span><br><span class="line">    <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(238, 238, 238, 0.2);</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(238, 238, 238, 0.2);</span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">14px</span>/<span class="number">14px</span> Arial, Helvetica, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-class">.button</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#9DC45F</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">25px</span> <span class="number">10px</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#949494</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.smart-green</span> <span class="selector-class">.button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#80A24A</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.error-msg</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.success-msg</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#80A24A</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="启动Django服务"><a href="#启动Django服务" class="headerlink" title=" 启动Django服务"></a><i class="fa fa-angle-double-right fa-lg"></i> 启动Django服务</h5><p><span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMTo4MDAwL2Zvcm0v" title="http://127.0.0.1:8000/form/">http://127.0.0.1:8000/form/<i class="fa fa-external-link"></i></span></p><p><img src="/images/pasted-115.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;创建Django项目&quot;&gt;&lt;a href=&quot;#创建Django项目&quot; class=&quot;headerlink&quot; title=&quot; 创建Django项目&quot;&gt;&lt;/a&gt;&lt;i class=&quot;fa fa-caret-right fa-lg&quot;&gt;&lt;/i&gt; 创建Django项目&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-95.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>Django-搭建开发环境</title>
    <link href="http://blog.laohulab.com/Django/3444653517.html"/>
    <id>http://blog.laohulab.com/Django/3444653517.html</id>
    <published>2018-06-26T05:59:00.000Z</published>
    <updated>2019-05-01T06:48:43.383Z</updated>
    
    <content type="html"><![CDATA[<h5 id="pycharm安装"><a href="#pycharm安装" class="headerlink" title=" pycharm安装"></a><i class="fa fa-caret-right fa-lg"></i> pycharm安装</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9weWNoYXJtLw==" title="https://www.jetbrains.com/pycharm/">https://www.jetbrains.com/pycharm/<i class="fa fa-external-link"></i></span></p><h5 id="mysql安装"><a href="#mysql安装" class="headerlink" title=" mysql安装"></a><i class="fa fa-caret-right fa-lg"></i> mysql安装</h5><p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy93aW5kb3dzLw==" title="https://dev.mysql.com/downloads/windows/">https://dev.mysql.com/downloads/windows/<i class="fa fa-external-link"></i></span></p><a id="more"></a><p><img src="/images/pasted-75.png" alt><br><img src="/images/pasted-76.png" alt><br><img src="/images/pasted-77.png" alt><br><img src="/images/pasted-78.png" alt><br><img src="/images/pasted-79.png" alt><br><img src="/images/pasted-80.png" alt><br><img src="/images/pasted-81.png" alt><br><img src="/images/pasted-82.png" alt><br><img src="/images/pasted-83.png" alt></p><h5 id="python2-7安装"><a href="#python2-7安装" class="headerlink" title=" python2.7安装"></a><i class="fa fa-caret-right fa-lg"></i> python2.7安装</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv" title="https://www.python.org/downloads/">https://www.python.org/downloads/<i class="fa fa-external-link"></i></span></p><h5 id="navicat安装"><a href="#navicat安装" class="headerlink" title=" navicat安装"></a><i class="fa fa-caret-right fa-lg"></i> navicat安装</h5><p><a href="/downloads/navicatformysql.zip">navicatformysql.zip</a></p><h5 id="virtual虚拟环境搭建-windows"><a href="#virtual虚拟环境搭建-windows" class="headerlink" title=" virtual虚拟环境搭建-windows"></a><i class="fa fa-caret-right fa-lg"></i> virtual虚拟环境搭建-windows</h5><p>优点</p><ul><li>使不同应用开发环境独立</li><li>环境升级不影响其他应用，也不会影响全局的python环境 </li><li>防止系统中出现包管理混乱和版本冲突</li></ul><h6 id="virtuanlenv安装"><a href="#virtuanlenv安装" class="headerlink" title=" virtuanlenv安装"></a><i class="fa fa-angle-double-right fa-lg"></i> virtuanlenv安装</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">pip install virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建虚拟环境</span></span><br><span class="line">virtuanlenv testvir01</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入虚拟环境目录</span></span><br><span class="line">cd testvir01</span><br><span class="line"></span><br><span class="line"><span class="comment">#激活虚拟环境</span></span><br><span class="line">activate.bat</span><br></pre></td></tr></table></figure><div class="note info">            <font color="red">virtuanlenv管理虚拟环境不变，故安装virtualenvwrapper进行虚拟环境管理!</font>          </div><h6 id="安装virtualenvwrapper"><a href="#安装virtualenvwrapper" class="headerlink" title=" 安装virtualenvwrapper"></a><i class="fa fa-angle-double-right fa-lg"></i> 安装virtualenvwrapper</h6><ul><li>Windows</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;pip install virtualenvwrapper-win</span><br><span class="line">Collecting virtualenvwrapper-win</span><br><span class="line">  Using cached https://files.pythonhosted.org/packages/<span class="number">87</span>/<span class="number">70</span>/ccebe989b112c42814fee4c145cfdac8fbcb174074b04bf8250b3052544f/virtualenvwrapper_win<span class="number">-1.2</span><span class="number">.5</span>-py2-none-any.whl</span><br><span class="line">Collecting virtualenv (<span class="keyword">from</span> virtualenvwrapper-win)</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/b6/<span class="number">30</span>/<span class="number">96</span>a02b2287098b23b875bc8c2f58071c35d2efe84f747b64d523721dc2b5/virtualenv<span class="number">-16.0</span><span class="number">.0</span>-py2.py3-none-any.whl (<span class="number">1.9</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">1.9</span>MB <span class="number">77</span>kB/s</span><br><span class="line">Installing collected packages: virtualenv, virtualenvwrapper-win</span><br><span class="line">Successfully installed virtualenv<span class="number">-16.0</span><span class="number">.0</span> virtualenvwrapper-win<span class="number">-1.2</span><span class="number">.5</span></span><br></pre></td></tr></table></figure><ul><li>Linux</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install virtualenvwrapper</span><br></pre></td></tr></table></figure><h6 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title=" 创建虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 创建虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;mkvirtualenv testvir01</span><br><span class="line"> C:\Users\jianhu.yong\Envs <span class="keyword">is</span> <span class="keyword">not</span> a directory, creating</span><br><span class="line">New python executable <span class="keyword">in</span> C:\Users\jianhu.yong\Envs\testvir01\Scripts\python.exe</span><br><span class="line">Installing setuptools, pip, wheel...done.</span><br><span class="line"></span><br><span class="line">(testvir01) C:\Windows\System32&gt;</span><br></pre></td></tr></table></figure><h6 id="退出虚拟环境"><a href="#退出虚拟环境" class="headerlink" title=" 退出虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 退出虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h6 id="查看虚拟环境"><a href="#查看虚拟环境" class="headerlink" title=" 查看虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 查看虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;workon</span><br><span class="line"></span><br><span class="line">Pass a name to activate one of the following virtualenvs:</span><br><span class="line">==============================================================================</span><br><span class="line">testvir01</span><br><span class="line"></span><br><span class="line">C:\Windows\System32&gt;</span><br></pre></td></tr></table></figure><h6 id="进入虚拟环境"><a href="#进入虚拟环境" class="headerlink" title=" 进入虚拟环境"></a><i class="fa fa-angle-double-right fa-lg"></i> 进入虚拟环境</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;workon testvir01</span><br><span class="line">(testvir01) C:\Windows\System32&gt;</span><br></pre></td></tr></table></figure><h6 id="Django安装"><a href="#Django安装" class="headerlink" title=" Django安装"></a><i class="fa fa-angle-double-right fa-lg"></i> Django安装</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32&gt;workon testvir01</span><br><span class="line">(testvir01) C:\Windows\System32&gt;pip install django==<span class="number">1.10</span><span class="number">.4</span></span><br><span class="line">Collecting django==<span class="number">1.10</span><span class="number">.4</span></span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/<span class="number">71</span>/<span class="number">37</span>/<span class="number">581</span>a00bbc4571526ce88ef517c0c02ca7575ac2ae8a3671161d2aa14b740/Django<span class="number">-1.10</span><span class="number">.4</span>-py2.py3-none-any.whl (<span class="number">6.8</span>MB)</span><br><span class="line">    <span class="number">100</span>% |████████████████████████████████| <span class="number">6.8</span>MB <span class="number">28</span>kB/s</span><br><span class="line">Installing collected packages: django</span><br><span class="line">Successfully installed django<span class="number">-1.10</span><span class="number">.4</span></span><br></pre></td></tr></table></figure><h5 id="pycharm和navicat简单实用"><a href="#pycharm和navicat简单实用" class="headerlink" title=" pycharm和navicat简单实用"></a><i class="fa fa-caret-right fa-lg"></i> pycharm和navicat简单实用</h5><ul><li><strong>设置keymap</strong></li></ul><p><img src="/images/pasted-74.png" alt></p><ul><li><strong>连接&amp;创建数据库</strong></li></ul><p><img src="/images/pasted-84.png" alt="upload successful"><br><img src="/images/pasted-86.png" alt="upload successful"><br><img src="/images/pasted-87.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;pycharm安装&quot;&gt;&lt;a href=&quot;#pycharm安装&quot; class=&quot;headerlink&quot; title=&quot; pycharm安装&quot;&gt;&lt;/a&gt;&lt;i class=&quot;fa fa-caret-right fa-lg&quot;&gt;&lt;/i&gt; pycharm安装&lt;/h5&gt;&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9weWNoYXJtLw==&quot; title=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;https://www.jetbrains.com/pycharm/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&quot;mysql安装&quot;&gt;&lt;a href=&quot;#mysql安装&quot; class=&quot;headerlink&quot; title=&quot; mysql安装&quot;&gt;&lt;/a&gt;&lt;i class=&quot;fa fa-caret-right fa-lg&quot;&gt;&lt;/i&gt; mysql安装&lt;/h5&gt;&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy93aW5kb3dzLw==&quot; title=&quot;https://dev.mysql.com/downloads/windows/&quot;&gt;https://dev.mysql.com/downloads/windows/&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.laohulab.com/categories/Django/"/>
    
    
  </entry>
  
</feed>
